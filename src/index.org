#+TITLE:     Analytics Service Model
#+AUTHOR:    VLEAD
#+DATE:      2015-09-24 Thu
#+PROPERTY: results output
#+PROPERTY: exports code

* Introduction
  This documentation describes the requirements, design and
  implementation of analytics service.
  
  The purpose of the document is to show the analytics of all
  virtual-labs on vlabs web page.

  *Note*: At the time of writing this document, vlabs web page are
  hosted at [[http://www.vlabs.ac.in][www.vlabs.ac.in]].  Most users visit vlab.co.in and not
  vlabs.ac.in as vlabs.ac.in is not advertised as main page so far.

* Requirements
** Stakeholder requirements
   Stakeholder requirements are to get following information about
   each lab ::
   - Hits :: Number of web requests
   - Visits :: Number of web requests for web pages  
   - Usage :: Number of usages of simulations

** Constraints without implementing session
   At present sessions or logins have not been implemented uniformly
   across all virtual-labs.  Hence all analytics is being done using
   web server logs.  This limits the amount of information that can be
   collected.

   For example, if two students in the same college use the same proxy
   server for browsing Internet then their public IP would be same.
   In this case the web server logs cannot be used to differentiate
   between the activities of two students.  Thus, the exact
   requirements cannot be satisfied with the log analysis.

   Approximate analysis using logs can be done as follows:
   - All log lines that resulted into successful response (2**) and
     were not requested by bots are considered as hits
   - All log lines for web pages (php, html, jsp, etc.) are treated as
     visits
   - Each experiment has many theory sections and a simulation
     section.  If a student visits theory section followed by
     simulation within a certain time interval then it can be treated
     as usage of the lab. 

** Apache combined log format
   Since the analytics will be done based on web server logs it is
   important to understand information available as part of web server
   logs.

   Apache combined log is defined as:
   #+BEGIN_EXAMPLE
   LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\"" combined
   #+END_EXAMPLE

   Example combined log line is:
   #+BEGIN_EXAMPLE
   10.4.8.52 - - [08/Feb/2014:18:43:07 +0530] "GET /labs/cse01/index.php HTTP/1.1" 200 3241 "http://virtual-labs.ac.in/labs/cse01/" "Mozilla/5.0 (Linux; U; Android 4.1.2; en-in; Q500 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"
   #+END_EXAMPLE

   Here:
   - %h :: IP address of the client
   - %l :: Ident information of the client.  Highly unreliable and
           should not be used except on internal networks.  Apache
           needs to be configured to look for indent information.
   - %u :: User ID of person based on HTTP authentication (if enabled)
   - %t :: Time when server /finished/ processing the request in
           [day/month/year:hour:minute:second zone] format
   - \"%r\" :: Request line from client in double quotes
   - %>s :: Response status code
   - %b :: Number of bytes returned to client excluding response
           headers.  In case response size is 0, the field contains
           -.  
   - \"%{Referer}i\" :: Referrer URL from where client landed on current
        page within double quotes
   - \"%{User-agent}i\" :: User agent of client as reported by client
        in double quotes.

** About bots and non 2** response code
   Most bots set /User-agent/ in HTTP request appropriately.  Thus we
   can search for strings: 
   - bot :: Related to Googlebot, bingbot, etc.
   - Anonymouse.org :: Used for anonymous browsing.  Often used by
                       VLEAD team itself to check if site is opening
                       from outside.
   - nagios :: Used for monitoring the health of the web server.
   and exclude those lines from analytics
   
   This is an important requirement to ensure that we do not get wrong
   analytics output because of bot usage getting added to real human
   end-user usage.

** Example log lines
   In next few sections Hits, Visits and Usage would be explained with
   help of an example.  A few log lines which can help explain
   difference between Hits, Visits and Usage are listed below.  All
   the three terms will be defined with help of these example lines in
   future sections.
   #+BEGIN_EXAMPLE
   10.4.8.52 - - [08/Feb/2014:18:43:07 +0530] "GET /labs/cse01/index.php HTTP/1.1" 200 3241 "http://virtual-labs.ac.in/labs/cse01/" "Mozilla/5.0 (Linux; U; Android 4.1.2; en-in; Q500 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"
   10.4.8.52 - - [26/Jan/2014:05:26:22 +0530] "GET /labs/cse01/exp9/MinimumSpanningTree.swf HTTP/1.1" 304 - "http://web.iiit.ac.in/~sharada.mohanty/content/graph-visualisation-using-flash" "Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36"
   10.4.8.52 - - [20/Feb/2014:14:53:59 +0530] "GET /labs/cse01/images/manual.jpg HTTP/1.1" 200 2009 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php" "Mozilla/5.0 (X11; Linux i686; rv:7.0.1) Gecko/20100101 Firefox/7.0.1"
   10.4.8.52 - - [08/Feb/2014:18:43:07 +0530] "GET /labs/cse01/css/default.css HTTP/1.1" 200 3338 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php" "Mozilla/5.0 (Linux; U; Android 4.1.2; en-in; Q500 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"
   10.4.12.236 - - [09/Feb/2014:13:46:18 +0530] "GET /labs/cse01/exp2/index.php HTTP/1.1" 200 3591 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php?section=List%20of%20experiments" "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.107 Safari/537.36"
   10.4.12.236 - - [09/Feb/2014:13:47:55 +0530] "GET /labs/cse01/exp2/index.php?section=Simulation HTTP/1.1" 200 3232 "http://deploy.virtual-labs.ac.in/labs/cse01/exp2/index.php?section=Theory" "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.107 Safari/537.36"
   10.4.12.236 - - [20/Feb/2014:14:11:43 +0530] "GET /labs/cse01/exp1/index.php?section=Objective HTTP/1.1" 200 3252 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Theory" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2)"
   10.4.12.236 - - [20/Feb/2014:14:11:54 +0530] "GET /labs/cse01/exp1/index.php?section=Quizzes HTTP/1.1" 200 4018 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Objective" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2)"
   10.4.12.236 - - [20/Feb/2014:14:12:08 +0530] "GET /labs/cse01/exp1/index.php?section=Simulation HTTP/1.1" 200 3240 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2)"
   10.4.8.52 - - [20/Feb/2014:20:57:59 +0530] "GET /labs/cse01/exp1/index.php HTTP/1.1" 200 3981 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php?section=List%20of%20experiments" "Mozilla/5.0 (Windows NT 5.1; rv:27.0) Gecko/20100101 Firefox/27.0"
   10.4.8.52 - - [08/Feb/2014:18:51:05 +0530] "GET /labs/cse01/exp1/UnarySystem.html HTTP/1.1" 200 642 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Simulation" "Mozilla/5.0 (Linux; U; Android 4.1.2; en-in; Q500 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"
   196.12.53.130 - - [04/Mar/2014:14:24:02 +0530] "GET /labs/cse01/index.php HTTP/1.1" 400 400 "-" "Mozilla/5.0 (Windows NT 6.1; rv:12.0) Gecko/20100101 Firefox/12.0"
   10.4.8.52 - - [24/Jun/2014:16:33:22 +0530] "GET /build/index.php HTTP/1.1" 404 250 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php" "Mozilla/5.0 (Windows NT 6.1; rv:26.0) Gecko/20100101 Firefox/26.0"
   10.4.8.52 - - [24/Jun/2014:16:33:24 +0530] "GET /build/index.php HTTP/1.1" 502 500 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php" "Mozilla/5.0 (Windows NT 6.1; rv:26.0) Gecko/20100101 Firefox/26.0"
   10.4.8.52 - - [24/Jun/2014:16:33:29 +0530] "GET /build/index.php HTTP/1.1" 503 414 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php" "Mozilla/5.0 (Windows NT 6.1; rv:26.0) Gecko/20100101 Firefox/26.0"
   66.249.79.3 - - [02/Jan/2015:20:16:46 +0530] "GET /labs/cse01/exp8/index.php?section=Simulation HTTP/1.1" 200 3277 "-" "Mozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)"
   10.4.8.52 - - [03/Jan/2015:17:55:42 +0530] "GET /labs/cse01/exp8/index.php?section=Simulation HTTP/1.1" 200 3277 "-" "Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)"

   #+END_EXAMPLE

** Hits after removing bots and non 2** response code
   Each line in a log file of a particular lab is a single Hit after
   removing bots and non 2** response code.
	       	
   The following example shows the sample log lines of =cse01= lab
   with 10 hits.
   #+BEGIN_EXAMPLE
   10.4.8.52 - - [08/Feb/2014:18:43:07 +0530] "GET /labs/cse01/index.php HTTP/1.1" 200 3241 "http://virtual-labs.ac.in/labs/cse01/" "Mozilla/5.0 (Linux; U; Android 4.1.2; en-in; Q500 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"
   10.4.8.52 - - [08/Feb/2014:18:43:07 +0530] "GET /labs/cse01/css/default.css HTTP/1.1" 200 3338 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php" "Mozilla/5.0 (Linux; U; Android 4.1.2; en-in; Q500 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"
   10.4.8.52 - - [20/Feb/2014:14:53:59 +0530] "GET /labs/cse01/images/manual.jpg HTTP/1.1" 200 2009 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php" "Mozilla/5.0 (X11; Linux i686; rv:7.0.1) Gecko/20100101 Firefox/7.0.1"
   10.4.12.236 - - [09/Feb/2014:13:46:18 +0530] "GET /labs/cse01/exp2/index.php HTTP/1.1" 200 3591 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php?section=List%20of%20experiments" "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.107 Safari/537.36"
   10.4.12.236 - - [09/Feb/2014:13:47:55 +0530] "GET /labs/cse01/exp2/index.php?section=Simulation HTTP/1.1" 200 3232 "http://deploy.virtual-labs.ac.in/labs/cse01/exp2/index.php?section=Theory" "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.107 Safari/537.36"
   10.4.12.236 - - [20/Feb/2014:14:11:43 +0530] "GET /labs/cse01/exp1/index.php?section=Objective HTTP/1.1" 200 3252 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Theory" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2)"
   10.4.12.236 - - [20/Feb/2014:14:11:54 +0530] "GET /labs/cse01/exp1/index.php?section=Quizzes HTTP/1.1" 200 4018 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Objective" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2)"
   10.4.12.236 - - [20/Feb/2014:14:12:08 +0530] "GET /labs/cse01/exp1/index.php?section=Simulation HTTP/1.1" 200 3240 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2)"
   10.4.8.52 - - [20/Feb/2014:20:57:59 +0530] "GET /labs/cse01/exp1/index.php HTTP/1.1" 200 3981 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php?section=List%20of%20experiments" "Mozilla/5.0 (Windows NT 5.1; rv:27.0) Gecko/20100101 Firefox/27.0"
   10.4.8.52 - - [08/Feb/2014:18:51:05 +0530] "GET /labs/cse01/exp1/UnarySystem.html HTTP/1.1" 200 642 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Simulation" "Mozilla/5.0 (Linux; U; Android 4.1.2; en-in; Q500 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"
   #+END_EXAMPLE
     
** Visits
*** Following extensions are removed from hit URLs before
    considering a hit as a visit:
    - png
    - jpg
    - jpeg
    - pdf
    - doc
    - js, etc.
  
    The following example shows the sample log lines of =cse01= lab
    with 8 visits.
    #+BEGIN_EXAMPLE
    10.4.8.52 - - [08/Feb/2014:18:43:07 +0530] "GET /labs/cse01/index.php HTTP/1.1" 200 3241 "http://virtual-labs.ac.in/labs/cse01/" "Mozilla/5.0 (Linux; U; Android 4.1.2; en-in; Q500 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"
    10.4.12.236 - - [09/Feb/2014:13:46:18 +0530] "GET /labs/cse01/exp2/index.php HTTP/1.1" 200 3591 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php?section=List%20of%20experiments" "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.107 Safari/537.36"
    10.4.12.236 - - [09/Feb/2014:13:47:55 +0530] "GET /labs/cse01/exp2/index.php?section=Simulation HTTP/1.1" 200 3232 "http://deploy.virtual-labs.ac.in/labs/cse01/exp2/index.php?section=Theory" "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.107 Safari/537.36"
    10.4.12.236 - - [20/Feb/2014:14:11:43 +0530] "GET /labs/cse01/exp1/index.php?section=Objective HTTP/1.1" 200 3252 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Theory" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2)"
    10.4.12.236 - - [20/Feb/2014:14:11:54 +0530] "GET /labs/cse01/exp1/index.php?section=Quizzes HTTP/1.1" 200 4018 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Objective" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2)"
    10.4.12.236 - - [20/Feb/2014:14:12:08 +0530] "GET /labs/cse01/exp1/index.php?section=Simulation HTTP/1.1" 200 3240 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2)"
    10.4.8.52 - - [20/Feb/2014:20:57:59 +0530] "GET /labs/cse01/exp1/index.php HTTP/1.1" 200 3981 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php?section=List%20of%20experiments" "Mozilla/5.0 (Windows NT 5.1; rv:27.0) Gecko/20100101 Firefox/27.0"
    10.4.8.52 - - [08/Feb/2014:18:51:05 +0530] "GET /labs/cse01/exp1/UnarySystem.html HTTP/1.1" 200 642 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Simulation" "Mozilla/5.0 (Linux; U; Android 4.1.2; en-in; Q500 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"
    #+END_EXAMPLE

** Structure of virtual-labs in terms of theory and simulation
   Each virtual-labs has multiple experiments, typically ten
   experiments per lab.  For each experiment there are sections such
   as:
   - Introduction
   - Theory
   - Simulation
   - References
   - Feed-back
   - Quiz

   Visit to any of the sections other than "Simuation" is treated as a
   theory visit.  Visit to Simulation is treated as a simulation visit
   for the given experiment.  

   At present URL for everything except simulation is same for most
   labs.  Thus, looking at logs we cannot differentiate whether user
   has seen Introduction section or theory section of a particular
   experiment. 

   Further for few labs we only have theory visit as they do not have
   simulation.  Some of these labs have tasks which have same URL as
   introduction or theory.  Thus visits to tasks page cannot be
   differentiated from visit to introduction page.

** Usage
   Based on above visits we look at visit date, source IP, URL to get
   theory visit and simulation visit.  Then usage is calculated as
   follows:
   + A Visit to the experiment of a lab and a Visit to the simulation
     of the same lab. Considering both visits are from same
     <ip-address>.
   + If a user visits an experiment page and the simulation page with
     on same day, then it is counted as a usage.  Note that users IP
     should remain same during the two visits.
   + The Order in which the user visited the experiment page or
     simulation page is not considered.(Either the experiment page
     visited first or simulation page or vice versa).
   + Some labs have multiple simulations per experiment.  In such
     cases, visit to any simulation (among many) is considered as
     simulation visit for usage.  Whether all simulations are visited
     or not has not been checked.
   + For labs which do not have simulation, simple theory visit is
     directly treated as usage.

   The following example shows the sample log lines of =cse01= lab
   with one Usage.
   #+BEGIN_EXAMPLE
   10.4.8.52 - - [08/Feb/2014:18:43:07 +0530] "GET /labs/cse01/index.php HTTP/1.1" 200 3241 "http://virtual-labs.ac.in/labs/cse01/" "Mozilla/5.0 (Linux; U; Android 4.1.2; en-in; Q500 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"
   10.4.12.236 - - [09/Feb/2014:13:46:18 +0530] "GET /labs/cse01/exp2/index.php HTTP/1.1" 200 3591 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php?section=List%20of%20experiments" "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.107 Safari/537.36"
   10.4.12.236 - - [09/Feb/2014:13:47:55 +0530] "GET /labs/cse01/exp2/index.php?section=Simulation HTTP/1.1" 200 3232 "http://deploy.virtual-labs.ac.in/labs/cse01/exp2/index.php?section=Theory" "Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.107 Safari/537.36"
   10.4.12.236 - - [20/Feb/2014:14:11:43 +0530] "GET /labs/cse01/exp1/index.php?section=Objective HTTP/1.1" 200 3252 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Theory" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2)"
   10.4.12.236 - - [20/Feb/2014:14:11:54 +0530] "GET /labs/cse01/exp1/index.php?section=Quizzes HTTP/1.1" 200 4018 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Objective" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2)"
   10.4.12.236 - - [20/Feb/2014:14:12:08 +0530] "GET /labs/cse01/exp1/index.php?section=Simulation HTTP/1.1" 200 3240 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php" "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2)"
   10.4.8.52 - - [20/Feb/2014:20:57:59 +0530] "GET /labs/cse01/exp1/index.php HTTP/1.1" 200 3981 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php?section=List%20of%20experiments" "Mozilla/5.0 (Windows NT 5.1; rv:27.0) Gecko/20100101 Firefox/27.0"
   10.4.8.52 - - [11/Feb/2014:17:26:23 +0530] "GET /labs/cse01/exp1/UnarySystem.html HTTP/1.1" 200 642 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Simulation" "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.107 Safari/537.36"
   10.4.8.52 - - [08/Feb/2014:18:51:05 +0530] "GET /labs/cse01/exp1/UnarySystem.html HTTP/1.1" 200 642 "http://deploy.virtual-labs.ac.in/labs/cse01/exp1/index.php?section=Simulation" "Mozilla/5.0 (Linux; U; Android 4.1.2; en-in; Q500 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30"
   10.4.12.236 - - [08/Feb/2014:22:20:34 +0530] "GET /labs/cse01/exp1/index.php HTTP/1.1" 200 3981 "http://deploy.virtual-labs.ac.in/labs/cse01/index.php?section=List%20of%20experiments" "Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1478.0 Safari/537.36"
   #+END_EXAMPLE	

   *Note* : Hits, Visits and Usage is calculated from the logs of the
            labs which are hosted on IIIT-H infrastructure and AWS.
            Labs on IIIT-H are not at Level-5, hence these labs are
            running on Individual containers.  The labs which are at
            level-5  or higher are hosted on AWS.
** Statistics required from analytics
   Usage information collected is needed month-wise for proper
   analysis or trend collection.  The hits and visits information is
   also needed month-wise.

   Once month-wise information is known totals for a given lab across
   all time (Jan 2013 to present) are needed.

   Further once totals for all labs are known total hits, visits and
   usages for all virtual-labs hosted on a central platform are
   calculated.
   
** Displaying of Analytics on Vlabs Web page
   The following are the requirements for displaying of Analytics on
   vlabs web page:
   1) The vlabs landing page should display numbers for: Labs,
      Experiments, Visits, and Usage.  *Note*: only "Visits" and
      "Usage" will be provided by analytics service model.
   2) Upon clicking on Usage, it should open a web page with Analytics
      of all labs.
   3) Analytics of Top 5 labs among all labs should be display
      first. Rest of the labs analytics will be displayed according to
      the institutes.
   4) The web page that opens upon clicking Usage will have the
      following: 
      - Theme of the web page should match with vlabs web page.  
      - Analytics of top 10 labs need to displayed on analytics web
        page with Lab Name, Institute Name, Hits, Visits and Usage.
      - On clicking view more labs hyperlink, it should display
        analytics of all labs including top 10 labs with Lab Name,
        Institute Name, Hits, Visits and Usage.
      - All the Lab Analytics should be sorted according to usage.
      - Hide all Lab Analytics whose usage is less than 100.  Also
        mention the same on page itself.
      - Analytics by months of the year Month.
      - Another table should be displayed to show the workshop analytics.

** Processes to be accounted for
   The process to be defined on how to maintain analytics when:
   - A New lab gets Deployed/Hosted.
   - An Existing lab gets Deleted/Removed.
   - Logic of analytics program is changed in terms of what is
     considered as a usage or experiment information for a lab
     (number of experiments, simulation reg-exp, thoery reg-exp,
     etc.).
     
* Design
** Details of input information and output of log analysis
*** Restructuring of logs
    Log files are created for various virtual-hosts and rotated every
    week.  Thus for each lab there could be several log files each
    containing logs for the given week.  Further since initially on
    base machines several labs were hosted together, it is possible to
    have logs of many labs in one single log file.  Also on base
    machine a single large log file is not being rotated.

    Thus, design has to account for multiple labs logs being collected
    into one single large file.  Also we have to remember how many log
    files of each file have been processed so that same information is
    not processed again.

    First information from previous analysis is referred to see how
    many lines from each log file has already been processed.  The
    remaining log lines are copied to a process folder with same name
    as the original log file.  

    For example if log file a.txt has 100 lines but 90 log lines have
    already been processed as part of previous analysis then a file
    a.txt with remaining 10 lines is created in the process folder.

    Among log lines in process folder first bot and non ok response
    lines are removed.  For removing bots 'User-agent field' is
    searched for strings such as nagios or bot.  Then for non-ok
    response code any response that does not starts with 2 is treated
    as non-hit.

    After removing bot and non-success log lines, logs for each lab
    are separated using lab-ID (Eg cse01).  This allows ensuring that
    all logs of a lab from various log files are collated in one
    single large log file.  This design allows apache to capture logs
    of same lab into multiple files or capture logs of multiple labs
    into same file without affecting the analysis output.

*** Logic for hits
    All non-bot and success log lines are treated as hits.  Thus, once
    all log lines of a lab are accumulated in one single log file, the
    number of lines in that file (=wc -l=) is treated as hits.

    But for better analytics we want the hits, visits and usage
    information per month.  Thus before counting number of lines
    (hits) the log files for each lab are split month wise.  This is
    done by creating a folder with lab name (eg cse01) and then by
    creating mon-YYYY name files such as Jul-2015.  A file for
    particular Mon-Year is created only if log line for particular
    month and year combination is found in the logs being processes in
    the current run.

    Then hits are calculated for each lab for each month, using the
    month wise files created for each lab in previous step.
    
*** Logic for visits
    After hits are calculated all log lines which have URLs that end
    with non-visit extensions such as .swf, .ppt, .doc, .mp3, .js,
    .css, .png, .jpeg, .jpg etc. are removed.  The remaining lines are
    treated as visits.
    
    Thus, after all log lines related to images, javascript, CSS,
    etc. are removed the remaining lines in the log file (=wc -l=) are
    treated as visits.  Since the files are already split month-wise,
    month-wise visits for each labs are collected.

*** Logic for usage
    Once visits have been calculated a lab-wise experiment
    regular-expression list which is provided as input (configuration)
    to the program is used.  This reg-exp input has information on
    what is the reg-exp for theory visit and simulation visit for each
    experiment, along with the name of the experiment.  Thus, for each
    lab we know name of all experiments, and corresponding to each
    experiment its theory and simulation URLs.

    Once month-wise visits information has been collected each log
    file is processed multiple times, once for counting usage of each
    experiment.  During a single processing cycle for a selected
    experiment, all log lines are compared with simulation reg-exp
    (URL).  If the log line matches simulation URL then count of
    simulation visit for the lab for given day of the month from given
    IP is increased.  If simulation URL is not matched then theory URL
    is searched. If theory URL matches then count of theory visit for
    given day of the month from given IP is increased.

    Thus at the end of processing of all log lines we get theory and
    simulation page visits for a given experiment, for a given lab and
    for a given month.  Further the information is split for each day
    1-31 separately.  For each day we have a list of theory and
    simulation visiting IP addresses in a list.  The list of IP
    addresses is intersected day-wise to find how many IPs visited
    both theory URL and simulation URL on the same day.  The number of
    items in intersection of IP sets for a given day is treated as
    usage for the day.
    
    Please note that it is possible that a theory URL and a simulation
    URL for a same experiment is visited more than once during the
    same day from same IP.  In this case the usage would be greater
    than one as each visit, even though originating from same source
    IP, is treated differently. 

*** Various totals
    Once day-wise theory visits, simulation visits and usages are
    known, these values are added for all days of the given month to
    get totals for the month.   Thus we get total theory visit,
    simulation visit and usages for a given month.  

    The hits, visits and usage information for each lab, for each
    month, for each experiment is collected together in logical
    manner.  Then totals for a lab across all month are calculated.

    Month-wise total hits, visits and usages for a lab are written in
    a text file (=lab_total.txt=) in space separated way.  The hits,
    visits and usages for all labs are added to get totals
    (=all_total.txt=) for all virtual-labs across all time.  
    
*** Integration of analytics program and web service
    A web service reads lab-wise totals (=lab_total.txt=) and
    all-totals files (=all_total.txt=) and replies to various web
    requests made by vlabs.ac.in landing pages (via AJAX).
    
** Things to take care of in future
*** Time between visits under minutes
    At present usage is calculated if two visits to theory and
    simulation page are made within the same day by same IP.  Also
    order of visit, that is which page was visited first, is not
    accounted for.

    In future we should calculate time difference between simulation
    visit and theory visit in minutes.  We should be able to take a
    lower bound and upper bound as parameter and give usages, if
    theory and simulation page visit time difference is between given
    bounds.  Also we should check whether theory page was visited
    before simulation page.

*** Graphs
    At present month-wise values are collected but not used.  In
    future we should draw graphs of how usage of a particular
    experiment or of a lab changes month-wise.  These graphs can be
    viewed to understand lab-usage trends over time.

*** Display analytics per experiment on vlabs.ac.in webpages
    At present analytics is shown separately on a dedicated analytics
    page.  Further experiment wise analytics are not shown.  In future
    it is possible to show experiment related analytics on the
    experiment page or list of experiments page for the given lab.
    Further we can display experiment wise information for each lab on
    the analytics page too.

*** Test or QA visit is not separate from user visit
    Devlopers and testers also visit theory and simulation pages
    during development or after new version is deployed on production.
    These visits (and hits)x should be separated from end-user visits
    and should not be counted towards hits, visits or usages.

* Clusters and logs
  The virtual-labs are hosted on two separate clusters:
  - Base2
  - AWS
  /Soon Baadal cluster would be added and labs would be migrated from
  AWS to Baadal./

  Each of these clusters have different log file names and labs
  hosted.  Some labs might have been hosted on Base2 initially and
  later migrated to AWS.  Thus, logs from both clusters need to be
  analysed and numbers need to be added for proper analysis results.
** Base2 http logs
*** Apache configuration on base2 http container
    All labs hosted on base machines were reverse-proxied
    (Proxy-passed) via http (CTID: 12159) container on base2
    (10.4.12.22) machine.  Thus, all http logs of labs hosted on IIIT
    infrastructure are available on http container.

    apache configuration on http container is mainly done using
    following config files:
    - /etc/httpd/conf/httpd.conf :: This is default apache
	 configuration file without having anything specific to a lab. 
    - /etc/httpd/conf.d/virtualhosts.conf :: This file has many lab
	 virtualhosts with names such as 
      - cse04-iiith.virtual-labs.ac.in
      - eerc05-iiith.virtual-labs.ac.in
      - mech01-iitg.virtual-labs.ac.in
      - eee06-dei.virtual-labs.ac.in 
      All the logs for all these virtualhosts go into one single log
      file with name 'deploy.virtual-labs.ac.in-access_log' in
      combined format.
    - /etc/httpd/conf.d/vlabs-virtual-hosts.conf :: This file has many
	 different virtual-hosts.  Some of them are:
      - vlabs.ac.in :: Main virtual-labs website being redirected to
		       vlab.co.in
      - mail.vlabs.ac.in, uir.vlabs.ac.in :: Obsolete.  Perhaps
	   these should have been removed.
      - deploy1.vlabs.ac.in :: Purpose is not clear.
      - http.vlabs.ac.in :: For http container
      - gateone.cse09.vlabs.ac.in :: For Linux lab
      - alipi.iiit.ac.in :: For alipi project
      - cse12.vlabs.ac.in :: For cse12 lab.  The logs in this case
	   go directly to cse12.vlabs.ac.in-access_log in combined
	   format
      - civil11.vlabs.ac.in :: For civil11 lab.  The logs in this
	   case go directly to civil11.vlabs.ac.in-access_log in
	   combined format
      - nitk.vlabs.ac.in :: Perhaps for all nitk labs.  The logs in
	   this case go directly to nitk.vlabs.ac.in-access_log in
	   combined format.
      - www.vlabs.ca.in :: Interesting configuration such as:
       	#+BEGIN_EXAMPLE
       	# Pass Proxy for cse28
       	<Location /cse28/>
	    ProxyPass http://cse08.vlabs.ac.in/ant/ant/
       	</Location>
       	#+END_EXAMPLE
      - cpl.vlabs.ac.in, hybrid-electronic.vlabs.ac.in, etc. :: Many
	   such lab virtual-hosts with lab names.  The logs go to
	   cpl.virtual-labs.ac.in-access_log or
	   hybrid-electronic.virtual-labs.ac.in-access_log etc. in
	   combined format.  The list of such virtual-hosts is:

	   1. cpl.virtual-labs.ac.in
	   2. hybrid-electronic.virtual-labs.ac.in
	   3. virtual-english.virtual-labs.ac.in
	   4. cdpeslab.virtual-labs.ac.in
	   5. mmlaboratory.virtual-labs.ac.in
	   6. industrial-automation.virtual-labs.ac.in
	   7. nlp.virtual-labs.ac.in
	   8. dld.virtual-labs.ac.in
	   9. computer-graphics.virtual-labs.ac.in
	   10. pattern-recognition.virtual-labs.ac.in
	   11. cryptography.virtual-labs.ac.in
	   12. ds.virtual-labs.ac.in
	   13. image-processing.virtual-labs.ac.in
	   14. emt.virtual-labs.ac.in

	   In each of this case the logs go to <fqdn>-access_log file.
	 
     - /etc/httpd/conf.d/virtual-labs-virtual-hosts.conf :: Repeated
	  configuration of virtual-hosts from vlabs-virtual-hosts.conf
	  file.  However few virtual-hosts are different such as:

	  1. microwave.virtual-labs.ac.in
	  2. eee07.virtual-labs.ac.in
	  3. music.virtual-labs.ac.in
	  4. eee06.virtual-labs.ac.in
	  5. mech26.virtual-labs.ac.in
	  6. mech08.virtual-labs.ac.in
	  7. phy01.virtual-labs.ac.in
	  8. chs13.virtual-labs.ac.in
	  9. aerospaceengg.virtual-labs.ac.in
	  10. combustion.virtual-labs.ac.in

	  In each of this case the logs go to <fqdn>-access_log file.
	 
*** Cron and awstats configuration on base2 http container
    With help of /etc/cron.hourly/00awstats
    deploy.virtual-labs.ac.in-access.log file is split into various
    smaller log files so that they can be processed by awstats.  These
    files are:
    #+BEGIN_EXAMPLE
    cse01.virtual-labs.ac.in-access_log
    cse02.virtual-labs.ac.in-access_log
    cse03.virtual-labs.ac.in-access_log
    cse04.virtual-labs.ac.in-access_log
    cse05.virtual-labs.ac.in-access_log
    cse06.virtual-labs.ac.in-access_log
    cse07.virtual-labs.ac.in-access_log
    cse08.virtual-labs.ac.in-access_log
    cse09.virtual-labs.ac.in-access_log
    cse10.virtual-labs.ac.in-access_log
    cse11.virtual-labs.ac.in-access_log
    cse12.virtual-labs.ac.in-access_log
    cse13.virtual-labs.ac.in-access_log
    cse14.virtual-labs.ac.in-access_log
    cse15.virtual-labs.ac.in-access_log
    cse16.virtual-labs.ac.in-access_log
    cse17.virtual-labs.ac.in-access_log
    cse18.virtual-labs.ac.in-access_log
    cse19.virtual-labs.ac.in-access_log
    cse20.virtual-labs.ac.in-access_log
    cse21.virtual-labs.ac.in-access_log
    cse22.virtual-labs.ac.in-access_log
    cse23.virtual-labs.ac.in-access_log
    cse24.virtual-labs.ac.in-access_log
    cse25.virtual-labs.ac.in-access_log
    cse26.virtual-labs.ac.in-access_log
    cse27.virtual-labs.ac.in-access_log
    cse28.virtual-labs.ac.in-access_log
    cse29.virtual-labs.ac.in-access_log
    cse30.virtual-labs.ac.in-access_log
    ece01.virtual-labs.ac.in-access_log
    ece02.virtual-labs.ac.in-access_log
    ece03.virtual-labs.ac.in-access_log
    ece04.virtual-labs.ac.in-access_log
    ece05.virtual-labs.ac.in-access_log
    ece06.virtual-labs.ac.in-access_log
    ece07.virtual-labs.ac.in-access_log
    ece08.virtual-labs.ac.in-access_log
    ece09.virtual-labs.ac.in-access_log
    ece10.virtual-labs.ac.in-access_log
    ece11.virtual-labs.ac.in-access_log
    bio15.virtual-labs.ac.in-access_log
    bio16.virtual-labs.ac.in-access_log
    ccnsb01.virtual-labs.ac.in-access_log
    ccnsb02.virtual-labs.ac.in-access_log
    ccnsb03.virtual-labs.ac.in-access_log
    ccnsb04.virtual-labs.ac.in-access_log
    ccnsb05.virtual-labs.ac.in-access_log
    ccnsb06.virtual-labs.ac.in-access_log
    ccnsb07.virtual-labs.ac.in-access_log
    chem01.virtual-labs.ac.in-access_log
    civil09.virtual-labs.ac.in-access_log
    civil13.virtual-labs.ac.in-access_log
    civil15.virtual-labs.ac.in-access_log
    civil16.virtual-labs.ac.in-access_log
    engg01.virtual-labs.ac.in-access_log
    hss01.virtual-labs.ac.in-access_log
    hss02.virtual-labs.ac.in-access_log
    hss03.virtual-labs.ac.in-access_log
    mech01.virtual-labs.ac.in-access_log
    mech04.virtual-labs.ac.in-access_log
    mech17.virtual-labs.ac.in-access_log
    mech18.virtual-labs.ac.in-access_log
    phy14.virtual-labs.ac.in-access_log
    phy19.virtual-labs.ac.in-access_log
    sample1.virtual-labs.ac.in-access_log
    sample13.virtual-labs.ac.in-access_log
    sample16.virtual-labs.ac.in-access_log
    sample2.virtual-labs.ac.in-access_log
    sample20.virtual-labs.ac.in-access_log
    sample21.virtual-labs.ac.in-access_log
    ece18.virtual-labs.ac.in-access_log
    ece19.virtual-labs.ac.in-access_log
    ece21.virtual-labs.ac.in-access_log
    ece26.virtual-labs.ac.in-access_log
    eee03.virtual-labs.ac.in-access_log
    eee05.virtual-labs.ac.in-access_log
    eee07.virtual-labs.ac.in-access_log
    eee08.virtual-labs.ac.in-access_log
    eee09.virtual-labs.ac.in-access_log
    eee10.virtual-labs.ac.in-access_log
    eee12.virtual-labs.ac.in-access_log
    eerc01.virtual-labs.ac.in-access_log
    eerc02.virtual-labs.ac.in-access_log
    eerc03.virtual-labs.ac.in-access_log
    eerc04.virtual-labs.ac.in-access_log
    emt.virtual-labs.ac.in-access_log    
    #+END_EXAMPLE

*** Important logs files on base2 http container
    Based on apache configuration following log files are important
    and need to be processed:
    1. deploy.virtual-labs.ac.in-access_log (For many different labs)
    2. cse12.vlabs.ac.in-access_log
    3. civil11.vlabs.ac.in-access_log
    4. nitk.vlabs.ac.in-access_log (For many nitk labs)
    5. cpl.virtual-labs.ac.in-access_log
    6. hybrid-electronic.virtual-labs.ac.in-access_log
    7. virtual-english.virtual-labs.ac.in-access_log
    8. cdpeslab.virtual-labs.ac.in-access_log
    9. mmlaboratory.virtual-labs.ac.in-access_log
    10. industrial-automation.virtual-labs.ac.in-access_log
    11. nlp.virtual-labs.ac.in-access_log
    12. dld.virtual-labs.ac.in-access_log
    13. computer-graphics.virtual-labs.ac.in-access_log
    14. pattern-recognition.virtual-labs.ac.in-access_log
    15. cryptography.virtual-labs.ac.in-access_log
    16. ds.virtual-labs.ac.in-access_log
    17. image-processing.virtual-labs.ac.in-access_log
    18. microwave.virtual-labs.ac.in-access_log
    19. music.virtual-labs.ac.in-access_log
    20. eee06.virtual-labs.ac.in-access_log
    21. mech26.virtual-labs.ac.in-access_log
    22. mech08.virtual-labs.ac.in-access_log
    23. phy01.virtual-labs.ac.in-access_log
    24. chs13.virtual-labs.ac.in-access_log
    25. aerospaceengg.virtual-labs.ac.in-access_log
    26. combustion.virtual-labs.ac.in-access_log
       	
    Following files are created by virtual-hosts configuration of
    apache but are unfortunately overwritten by cron.  So these cannot
    be used:
    1. eee07.virtual-labs.ac.in-access_log
    2. emt.virtual-labs.ac.in-access_log
** AWS http logs
   AWS logs are organized in much cleaner way than base2 logs due to
   ansible based reverseproxy configuration.  On AWS logs for each lab
   are stored in a separate dedicated log file.  All the lab log file
   information is captured in two duplicated configuration files:
   - /etc/httpd/conf.d/virtualhost.conf
   - /etc/httpd/conf.d/virtualhosts.conf
   where virtualhosts.conf has following additional virtual-hosts:
   - ossec-server.vlabs.ac.in (For 80, 443)
   - ps-iiith.vlabs.ac.in (For 80, 443)
   - ssl-iitg.vlabs.ac.in (For 80, 443)
   - outreach.vlabs.ac.in (For 80, 443)
   and all other virtual-hosts are same.

   Further all the configuration is captured in reverse-proxy model of
   the systems-model project.  Lab-wise log file details are also
   captured by ADS and available as part of data-services
   (In-progress).
   
* Implementation
** Design of program that processes logs to get analytics
   The entire process of getting final lab-wise analytics (hits, visits
   and usage) for base2 http container and aws is described below
*** For each platform do the following
    For both Base2 and then for AWS each of the following steps are performed:
**** (STEP: =initialize=) Ensure that necessary folder exist and are sane
     Following folders would be used for the entire analytics:
     - logs folder :: For file processing we would read log files
                      directly from where the rsync cron process copies
                      it.  We are not going to copy files to a new
                      temporary location every time for processing as
                      that is very expensive (disk I/O wise).  Location
                      of this folder is as per analytics systems model.

		      *The logs must be in combined log format*.

     - data folder :: Data folder would contain important state
                      information such as how many lines have been
                      processed for each file, so that we do not
                      process the same lines again.  This would also
                      contain all information about past analytics for
                      same cluster.

                      This folder must exist with reasonable initial
                      files so that the analysis works properly.  If
                      this is the first run then as part of this
                      initialization step it is ensured that various
                      important files with default values get created.

     - process folder :: Process folder is a temporary folder created
                         for processing of new log lines.  During start
                         of a new analysis cycle process folder should
                         be empty.

     - output folder :: This folder would contain final text files that 
		       	would be read by web service.  These files
                       	would not be in erlang term format so that they
                       	can be read by programs written in other
                       	languages easily.  Output folder is common for
                        both AWS and base2 and contains totals from
                        both clusters.

**** (STEP: =all_list=) Prepare list of all log file names present on base2 http container log folder :Done:
     First list of files in =logs_folder= is prepared.  This list will
     be updated in future steps such that only relevant log files are
     present in the list.

**** (STEP: =positive_filter=) Filter irrelevant log files 	       :Done:
    Since on base2 logs have both actual logs files created by apache and
    temporary log files created by cron for awstats, we can't process
    all log files directly.  Thus, first logical step is to get only
    the relevant log files.  This can be done by removing all log
    files which are not listed in [[Important logs files on base2 http
    container]] section.  

    Note that:
    1. we are also removing / ignoring log files for
       vlead.vlabs.ac.in, issues.vlabs.ac.in, etc. as part of this
       step.
    2. For deploy we are considering both
       deploy.virtual-labs.ac.in-access_log and
       deploy.vlabs.ac.in-access_log files

The output of program after this step for base2 cluster is:
#+BEGIN_EXAMPLE
TRACE {{2015,9,25},{13,21,20}} analytics:base2_main/0: File_list after positive filter on base2 is
["deploy.virtual-labs.ac.in-access_log-20130804",
"deploy.virtual-labs.ac.in-access_log-20130721",
"deploy.virtual-labs.ac.in-access_log-20131020",
"deploy.virtual-labs.ac.in-access_log-20131229",
"deploy.virtual-labs.ac.in-access_log-20131006",
"deploy.virtual-labs.ac.in-access_log-20140105",
"deploy.virtual-labs.ac.in-access_log-20131124",
"deploy.virtual-labs.ac.in-access_log-20130901",
"deploy.virtual-labs.ac.in-access_log-20140119",
"deploy.virtual-labs.ac.in-access_log-20130922",
"deploy.virtual-labs.ac.in-access_log-20130707",
"deploy.virtual-labs.ac.in-access_log-20130915",
"deploy.virtual-labs.ac.in-access_log-20131201",
"deploy.virtual-labs.ac.in-access_log-20131103",
"deploy.virtual-labs.ac.in-access_log-20130818",
"deploy.virtual-labs.ac.in-access_log-20130728",
"deploy.virtual-labs.ac.in-access_log-20130908",
"deploy.virtual-labs.ac.in-access_log-20131027",
"deploy.virtual-labs.ac.in-access_log-20130714",
"deploy.virtual-labs.ac.in-access_log-20140112",
"deploy.virtual-labs.ac.in-access_log-20131013",
"deploy.virtual-labs.ac.in-access_log-20130929",
"deploy.virtual-labs.ac.in-access_log-20131110",
"deploy.virtual-labs.ac.in-access_log-20131208",
"deploy.virtual-labs.ac.in-access_log-20130811",
"deploy.virtual-labs.ac.in-access_log-20140126",
"deploy.virtual-labs.ac.in-access_log",
"deploy.virtual-labs.ac.in-access_log-20131117",
"deploy.virtual-labs.ac.in-access_log-20131222",
"deploy.virtual-labs.ac.in-access_log-20130825",
"deploy.virtual-labs.ac.in-access_log-20131215",
"deploy.vlabs.ac.in-access_log-20140412",
"deploy.vlabs.ac.in-access_log-20140715",
"deploy.vlabs.ac.in-access_log-20140410",
"deploy.vlabs.ac.in-access_log-20140405",
"deploy.vlabs.ac.in-access_log-20140802",
"deploy.vlabs.ac.in-access_log-20140415",
"deploy.vlabs.ac.in-access_log-20140305",
"deploy.vlabs.ac.in-access_log-20140329",
"deploy.vlabs.ac.in-access_log-20131006",
"deploy.vlabs.ac.in-access_log-20131002",
"deploy.vlabs.ac.in-access_log-20140310",
"deploy.vlabs.ac.in-access_log-20140702",
"deploy.vlabs.ac.in-access_log-20140313",
"deploy.vlabs.ac.in-access_log-20140213",
"deploy.vlabs.ac.in-access_log-20131127",
"deploy.vlabs.ac.in-access_log-20141001",
"deploy.vlabs.ac.in-access_log",
"deploy.vlabs.ac.in-access_log-20141029",
"deploy.vlabs.ac.in-access_log-20140306",
"deploy.vlabs.ac.in-access_log-20130922",
"deploy.vlabs.ac.in-access_log-20141116",
"deploy.vlabs.ac.in-access_log-20140930",
"deploy.vlabs.ac.in-access_log-20141016",
"deploy.vlabs.ac.in-access_log-20141002",
"deploy.vlabs.ac.in-access_log-20140326",
"deploy.vlabs.ac.in-access_log-20140605",
"deploy.vlabs.ac.in-access_log-20131013",
"deploy.vlabs.ac.in-access_log-20131020",
"deploy.vlabs.ac.in-access_log-20140501",
"deploy.vlabs.ac.in-access_log-20140327",
"deploy.vlabs.ac.in-access_log-20130915",
"cse12.vlabs.ac.in-access_log-20130915",
"cse12.vlabs.ac.in-access_log",
"civil11.vlabs.ac.in-access_log-20131201",
"civil11.vlabs.ac.in-access_log-20131110",
"civil11.vlabs.ac.in-access_log-20131117",
"civil11.vlabs.ac.in-access_log-20131105",
"civil11.vlabs.ac.in-access_log-20131124",
"civil11.vlabs.ac.in-access_log",
"nitk.vlabs.ac.in-access_log-20131110",
"nitk.vlabs.ac.in-access_log-20131103",
"nitk.vlabs.ac.in-access_log-20131029",
"nitk.vlabs.ac.in-access_log-20150924",
"nitk.vlabs.ac.in-access_log-20150829",
"nitk.vlabs.ac.in-access_log-20150827",
"nitk.vlabs.ac.in-access_log-20150819",
"nitk.vlabs.ac.in-access_log",
"nitk.vlabs.ac.in-access_log-20150826",
"nitk.vlabs.ac.in-access_log-20150909",
"nitk.vlabs.ac.in-access_log-20140715",
"nitk.vlabs.ac.in-access_log-20150812",
"nitk.vlabs.ac.in-access_log-20140716",
"nitk.vlabs.ac.in-access_log-20150717",
"nitk.vlabs.ac.in-access_log-20150801",
"nitk.vlabs.ac.in-access_log-20140712",
"cpl.virtual-labs.ac.in-access_log",
"hybrid-electronic.virtual-labs.ac.in-access_log",
"virtual-english.virtual-labs.ac.in-access_log",
"cdpeslab.virtual-labs.ac.in-access_log",
"mmlaboratory.virtual-labs.ac.in-access_log",
"industrial-automation.virtual-labs.ac.in-access_log",
"nlp.virtual-labs.ac.in-access_log",
"dld.virtual-labs.ac.in-access_log",
"computer-graphics.virtual-labs.ac.in-access_log",
"pattern-recognition.virtual-labs.ac.in-access_log",
"cryptography.virtual-labs.ac.in-access_log",
"ds.virtual-labs.ac.in-access_log",
"image-processing.virtual-labs.ac.in-access_log",
"microwave.virtual-labs.ac.in-access_log",
"microwave.virtual-labs.ac.in-access_log-20140723",
"microwave.virtual-labs.ac.in-access_log-20140712",
"microwave.virtual-labs.ac.in-access_log-20140105",
"microwave.virtual-labs.ac.in-access_log-20131229",
"music.virtual-labs.ac.in-access_log",
"eee06.virtual-labs.ac.in-access_log",
"mech26.virtual-labs.ac.in-access_log",
"mech08.virtual-labs.ac.in-access_log",
"phy01.virtual-labs.ac.in-access_log",
"chs13.virtual-labs.ac.in-access_log",
"aerospaceengg.virtual-labs.ac.in-access_log",
"combustion.virtual-labs.ac.in-access_log"]
#+END_EXAMPLE       
    
**** (STEP: =negative_filter=) Filter log files that are not usable    :Done:
    As part of this step we take relevant log files names and remove
    the names of log files that cannot be used.  This can be because
    URLs in log lines do not have lab name eg eee06 or we do not know
    lab-id based on virtual-host name, etc.

    The log files which are filtered as part of this step are:
    - deploy.vlabs.ac.in-access_log :: Only 967 log lines across 31
         logs files.  Ignoring.
    - cse12.vlabs.ac.in-access_log :: Only 62 log lines in total
         across two files. No lab name in log file.
    - civil11.vlabs.ac.in-access_log :: Only 793 log lines in total
         across 6 files including bot hits (anonymouse etc.).  No lab
         name in log file.
    - nitk.vlabs.ac.in-access_log :: Only 231 log lines in total
         across 16 files.  No lab name in log file.
    - cpl.virtual-labs.ac.in-access_log :: Only 574 non-nagios lines
         are present.  No lab name in log file.  Experiments names are
         proper (exp1, etc.).  As such there are 11495 log lines but
         only 574 log lines are non-nagios:
	 #+BEGIN_EXAMPLE
	 [saurabh@barjatiyarklp base2-http-logs]$ grep -v nagios cpl.virtual-labs.ac.in-access_log | wc -l
	 574
	 #+END_EXAMPLE
	 Thus, ignoring this file.
    - hybrid-electronic.virtual-labs.ac.in-access_log :: 2194 log
         lines.  No lab name in log file.  Experiment names are proper
         (exp1, etc.).  Thus, ignoring this file for optimization.  We
         can revisit this later, if necessary.
    - virtual-english.virtual-labs.ac.in-access_log :: Only 222 log
         lines, thus ignoring it completely.
    - cdpeslab.virtual-labs.ac.in-access_log :: Only 455 log lines.
         No lab name and experiment name in URL. 
    - mmlaboratory.virtual-labs.ac.in-access_log :: Only 110 log
         lines, ignoring.
    - industrial-automation.virtual-labs.ac.in-access_log :: Only 188
         log lines, ignoring
    - nlp.virtual-labs.ac.in-access_log :: Only 158 log lines,
         ignoring.
    - dld.virtual-labs.ac.in-access_log :: Only 293 log lines,
         ignoring.
    - computer-graphics.virtual-labs.ac.in-access_log :: Only 327 log
         lines.  Experiment names are present.  No lab name in URL.
    - pattern-recognition.virtual-labs.ac.in-access_log :: Only 342
         log lines.  No lab name in URL.  Experiment names are
         present.  Ignoring.
    - cryptography.virtual-labs.ac.in-access_log :: Only 171 log
         lines, ignoring. 
    - ds.virtual-labs.ac.in-access_log :: Only 91 log lines,
         ignoring. 
    - image-processing.virtual-labs.ac.in-access_log :: Only 977 log
         lines.  There is no proper structure in terms of experiments
         so this perhaps can't be processed even in future.
    - microwave.virtual-labs.ac.in-access_log :: Only 481 log lines
         across five files, ignoring.
    - eee06.virtual-labs.ac.in-access_log :: Logs related to eee06,
         but these are duplicates of
         deploy.virtual-labs.ac.in-access_log file.  This is strange
         since eee06 was not part of awstats cron, so how this
         duplicate file is getting created / updated is not clear.
    - mech26.virtual-labs.ac.in-access_log :: 3,642 log lines.  But
         lab does not follow experiment structure.  So we cannot
         process this file even later.
    - mech08.virtual-labs.ac.in-access_log :: Logs related to mech08,
         but these are duplicates of
         deploy.virtual-labs.ac.in-access_log file.  This is strange
         since mech08 was not part of awstats cron, so how this
         duplicate file is getting created / updated is not clear.
    - phy01.virtual-labs.ac.in-access_log :: Logs from 9th Feb 2014 to
         20th Sept 2015 are present in
         deploy.virtual-labs.ca.in-access_log file too.  Ignoring at
         present as at most one weeks log are different.  We should
         revisit this after a month or so.
    - chs13.virtual-labs.ac.in-access_log :: Logs from 26th Jan 2014
         to 16th Sept 2015 are present in
         deploy.virtual-labs.ca.in-access_log file too.  Ignoring at
         present as at most 10 days logs are different.  We should
         revisit this after a month or so.
 
    The log files which are not filtered are:
    - deploy.virtual-labs.ac.in-access_log :: Most of the logs are
         here in one single 1.2GB file with 4,761,969 log lines.
         There are overall 31 log files with total 6,292,787 log
         lines.
    - music.virtual-labs.ac.in-access_log :: 49,530 log lines.  The
         experiments are also named properly.  We should visit this
         later, but at present I am ignoring it.  I also do not have
         this labs lab-id.
    - aerospaceengg.virtual-labs.ac.in-access_log :: 3,430 log lines
         ignoring at present for simplification.  The experiment names
         are visible in URL but there is no lab name.  Lab ID is also
         not known.
    - combustion.virtual-labs.ac.in-access_log :: 4,274 log lines
         ignoring at present for simplification.  The experiment names
         are visible in URL but there is no lab name.  Lab ID is also
         not known.

    Note that all logs files on AWS cluster are treated as relevant.
    Hence irrelevant list of log files on AWS is empty.

The output of program after this step for base2 is:
#+BEGIN_EXAMPLE
TRACE {{2015,9,25},{15,5,11}} analytics:base2_main/0: File_list after negative filter on base2 is 
["deploy.virtual-labs.ac.in-access_log-20130804",
 "deploy.virtual-labs.ac.in-access_log-20130721",
 "deploy.virtual-labs.ac.in-access_log-20131020",
 "deploy.virtual-labs.ac.in-access_log-20131229",
 "deploy.virtual-labs.ac.in-access_log-20131006",
 "deploy.virtual-labs.ac.in-access_log-20140105",
 "deploy.virtual-labs.ac.in-access_log-20131124",
 "deploy.virtual-labs.ac.in-access_log-20130901",
 "deploy.virtual-labs.ac.in-access_log-20140119",
 "deploy.virtual-labs.ac.in-access_log-20130922",
 "deploy.virtual-labs.ac.in-access_log-20130707",
 "deploy.virtual-labs.ac.in-access_log-20130915",
 "deploy.virtual-labs.ac.in-access_log-20131201",
 "deploy.virtual-labs.ac.in-access_log-20131103",
 "deploy.virtual-labs.ac.in-access_log-20130818",
 "deploy.virtual-labs.ac.in-access_log-20130728",
 "deploy.virtual-labs.ac.in-access_log-20130908",
 "deploy.virtual-labs.ac.in-access_log-20131027",
 "deploy.virtual-labs.ac.in-access_log-20130714",
 "deploy.virtual-labs.ac.in-access_log-20140112",
 "deploy.virtual-labs.ac.in-access_log-20131013",
 "deploy.virtual-labs.ac.in-access_log-20130929",
 "deploy.virtual-labs.ac.in-access_log-20131110",
 "deploy.virtual-labs.ac.in-access_log-20131208",
 "deploy.virtual-labs.ac.in-access_log-20130811",
 "deploy.virtual-labs.ac.in-access_log-20140126",
 "deploy.virtual-labs.ac.in-access_log",
 "deploy.virtual-labs.ac.in-access_log-20131117",
 "deploy.virtual-labs.ac.in-access_log-20131222",
 "deploy.virtual-labs.ac.in-access_log-20130825",
 "deploy.virtual-labs.ac.in-access_log-20131215",
 "music.virtual-labs.ac.in-access_log",
 "aerospaceengg.virtual-labs.ac.in-access_log",
 "combustion.virtual-labs.ac.in-access_log"]
#+END_EXAMPLE

**** (STEP: =read_line_count=) Read old line count stored from previous analysis :Done:
     If logs have been processed earlier then read how many lines of
     each log file has already been processed so that we do not process
     those lines again (=processed_lines=)

     *Note that in the document =read= is used to refer to numbers / values read from previous files.  At the same time =get= is used to refer to numbers/values obtained from current process data.*

**** (STEP: =get_line_count=) Get number of lines for each log file    :Done:
     In this step we get total number of lines for each log file which
     is relevant and usable (=total_lines=).  Basically we do wc -l on
     each log file.

**** (STEP: =compare_count=) For each relevant log file compare how many new log lines are present wrt previous analysis :Done:
     Subtract lines which have already been processed
     (=processed_lines=) from total number of log lines in each file
     (=total_lines=) to obtain count of new log lines (=new_lines=)
     that have been appended to each log file since last processing.

**** (STEP: =copy_lines=) Copy new lines of relevant log files to a new folder (process) with same file name :Done:
     Based on output of compare_count step only the =new_lines= from
     each log file are copied to =process_folder= with same filename.
     In future steps we will concentrate only on these new log lines.
   
**** (STEP: =update_line_count=) Update count of log file lines processed in data folder :Done:
     Since we are now going to process additional lines from each log
     file, we will change the count of =processed_lines= in
     =data_folder= so that we do not process these lines again in any
     next iteration.
     
**** (STEP: =remove_bot=) Remove all log lines which are related to bot :Done:
     Remove all log lines were browser identification matches regular
     expression =bot|Anonymouse.org|nagios=   This step is added to
     ensure that we do not process bot lines for hits, visits or usages.
     
**** (STEP: =remove_non_http_ok=) Remove all log lines which do not return HTTP response code 2** :Done:
     At this step we are removing all log lines that indicate HTTP
     response other than 2**.  This is done because 3**, 4**, 5** status code
     log lines should also be removed as they are not successful hits.

**** (STEP: =lab_id_log=) Store all individual lab logs in single <lab-id>.log file in process folder :Done:
     The log files are stored based on name of virtual-host eg
     deploy.virtual-labs.ac.in.  As part of this step corresponding
     lines of a log file will be copied to file with name lab-id.  This
     way we will have all logs related to a particular lab in one
     single file with same name as lab-id.

**** (STEP: =month_wise=) Split all log lines such that they are stored in respective month folders :Done:
     In this function we take all the files with lab-id names (with
     corresponding logs of that lab) and split them month wise.  These
     month-wise files are stored in =process_folder/lab-name= folder.
     Month-wise files are named in =YYYY-Mon= format.

     *This function assumes logs are in combined format and hence
     dates should be in =[18/Aug/2013:09:06:47","+0530]= format.  If this assumption is not met then the program will not work.*

**** (STEP: =read_hit_count=) Read hit count from data stored from previous analysis :Done:
     During previous analysis we would have got hit counts, visit
     counts, usage counts, etc. information for each lab for each month
     for each experiment.  This information is read back so that we can
     update this information based on new log lines and write back to
     the original file later.  This information is read from and
     written back to =data_folder=.

**** (STEP: =get_hit_count=) Get hit count (month-wise) from log files for each lab :Done:
     In this step we will read hit count for each lab for each month
     and prepare a big list of lab-wise month-wise hits.  Hit count is
     nothing but number of lines in each month-wise lab-wise files
     after bot and non-hit lines are removed.

**** (STEP: =update_hit_count=) Update hit count (month-wise) for each lab to data-folder stats :Done:
     In this step we will update hit count for each lab for each month
     using lab-wise month-wise list prepared in previous steps
     =get_hit_count= and =read_hit_count=.  This information would be
     stored in the =data-folder= for overall statistics (analytics).

**** (STEP: =remove_non_visit=) Remove all log lines that are not HTML for each month for each lab :Done:
     As part of this step log lines (hits) related to all non-HTML
     requests such as css, js, png, jpg, pdf, etc. will be removed from
     log file.  Thus the remaining log lines will correspond only to
     HTML request, ie visits.

**** (STEP: =get_visit_count=) Get visit count (month-wise) from log files for each lab :Done:
     Once all non-visit related log lines are removed from each
     month-wise lab-wise file, then the remaining lines are all
     visits.  Hence counting number of lines in remaining file (=wc
     -l=) gives number of visits for each lab (month-wise).

**** (STEP: =update_visit_count=) Update visit count (month-wise) for each lab to data-folder stats :Done:
     The visit count is also added to values read in =read_hit_count=
     step above.  The new visit values are then written to data-folder
     as analytics output and for reference on next execution of this
     analytics program.

**** (STEP: =count_usage=) For each lab for each experiment get usage (month-wise) :Done:
     In this step for each lab, for each experiment, for each month we
     count how many times experiment was visited in terms of theory,
     introduction, etc.  This count is required for calculating usage
     later on.

     Since experiment URLs for each lab and number of experiments for
     each lab vary, this step requires understanding each lab properly
     in terms of
     - Number of experiments
     - URL pattern for each experiment

     For example for music lab there are 14 experiments and URL for
     experiment for music lab are of format
     "/experiments/<experiment-number>" such as /experiments/1,
     /experiments/14, etc.

     The same thing is then done for simuation URL. 

     Finally once we have number of visits for theory and simulation,
     the data is divided date-wise.  For each date then list of IP
     addresses that have visited theory page and simulation page is
     calcuated.  Intersection of IP addresses that have visited theory
     page and simulation page on same day is treated as usage.

     Note that thus:
     1. It is possible for a person to visit theory page in morning and
       	simulation page in evening and we would still get that as a
       	usage.
     2. If simulation page is visited before theory page, it would
       	still be considered as usage
     3. If theory page is visted just before midnight and simulation
       	page just after midnight, then it wont get counted as theory /
       	simulation would have been visited on different dates.

     In cases such as {"Number Systems", "/exp1/index.php",
     "/exp1/index.php.*section=Simulation.*"}  for cse01 lab the
     simulation reg-exp is subset of theory reg-exp.  Hence if a
     simulation URL is matched for a given log line, then the same line
     is not matched for theory again to avoid problems.

     Further few labs do not have simulation page and have only
     theory/tasks page.  In such cases simulation reg-exp is left
     empty "".  Whenever simulation reg-exp is empty each visited to
     theory reg-exp is counted as both theory visit as well as
     simulation visit (ie one usage).
     
**** (STEP: =update_usage=) Update usage information by adding read usages and by including hits, visit information calculated above :Done:
     In this step we need to combine usage information counted in
     =count_usage= step and add the values to usage values from
     previous analysis collected during =read_hit_count= step.  

     This step is as complex as =count_usage= because we need to
     combine information lab-wise month-wise experiment-wise from two
     complex lists.  It is possible that a given experiment or an
     entire lab is not present in one of the two lists.  Further few
     months might be unique and few months might be duplicated in each
     list.  Further a same month for a same lab experiments might be
     duplicated or unique across two lists.  Thus, careful merge of
     two very complex lists, which is a fairly complex operation, is
     carried out as part of this step.

*** (STEP: =combine_platforms=) Combine final values of different platforms (AWS, Base2)
    Once we have hits, visits and usage information for both AWS and
    base2, this information is combined to obtain totals for all vlabs
    across all platforms.  Note that complexity of this step is again
    same as =update_usage= step done for each platform independently. 

*** (STEP: =lab_totals=) For each lab get totals for all duration by adding all month-wise values
    One totals from all clusters are collected, totals for each lab
    across all duration is calculated.  These totals are written to
    =lab_total.txt= file in =output_folder= so that web service can
    read lab-wise information from this space separated text file in
    easy manner.  
    
*** (STEP: =all_total=)Get total for entire vlabs by adding all lab total values
    One totals for all labs are calculated in =all_totals= step, a
    total across all_labs is performed and stored in =all_total.txt=
    file in =output_folder= for lab service to display.  This
    all_total is displayed directly on vlabs.ac.in landing page
    whereas lab-wise totals are displayed on follow-up analytics page.

** Erlang source code for anlaytics
  The erlang program source is captured below.  There is 1:1
  correspondence between steps described in previous section and
  various functions called from main/1 function defined near the end
  of this program.  The program also contains various lab-specific
  and cluster specific inputs which are discussed in processes
  section later on in this same document. 

  Note that at present code functions are not properly documents using
  -spec for dialyzer based checking.  Further various functions do not
  have proper comments or vairable names.  This is not solved as
  the code is throw-away and once we have sessions we will not use
  this code anymore.  
#+BEGIN_SRC erlang :tangle analytics.erl
-module(analytics).
%-compile(export_all).
-export([main/0]).

%%% Use this definition of trace during function development / debugging
-define(TRACE(Format_string, Values), io:format(lists:append("TRACE ~p ~s:", Format_string), [erlang:localtime(), ?MODULE | Values])).

%%% Use this definition of trace in production
%-define(TRACE(Format_string, Values), void).


-define(Base2_log_folder_path, "/root/base2-http-logs").
%-define(Base2_log_folder_path, "test-logs").

-define(Aws_log_folder_path, "/root/aws-http-logs").
%-define(Aws_log_folder_path, "test-logs").


-define(Base2_relevant_file_names, [
			      "deploy.virtual-labs.ac.in-access_log",
			      "deploy.vlabs.ac.in-access_log",
			      "cse12.vlabs.ac.in-access_log",
			      "civil11.vlabs.ac.in-access_log",
			      "nitk.vlabs.ac.in-access_log",
			      "cpl.virtual-labs.ac.in-access_log",
			      "hybrid-electronic.virtual-labs.ac.in-access_log",
			      "virtual-english.virtual-labs.ac.in-access_log",
			      "cdpeslab.virtual-labs.ac.in-access_log",
			      "mmlaboratory.virtual-labs.ac.in-access_log",
			      "industrial-automation.virtual-labs.ac.in-access_log",
			      "nlp.virtual-labs.ac.in-access_log",
			      "dld.virtual-labs.ac.in-access_log",
			      "computer-graphics.virtual-labs.ac.in-access_log",
			      "pattern-recognition.virtual-labs.ac.in-access_log",
			      "cryptography.virtual-labs.ac.in-access_log",
			      "ds.virtual-labs.ac.in-access_log",
			      "image-processing.virtual-labs.ac.in-access_log",
			      "microwave.virtual-labs.ac.in-access_log",
			      "music.virtual-labs.ac.in-access_log",
			      "eee06.virtual-labs.ac.in-access_log",
			      "mech26.virtual-labs.ac.in-access_log",
			      "mech08.virtual-labs.ac.in-access_log",
			      "phy01.virtual-labs.ac.in-access_log",
			      "chs13.virtual-labs.ac.in-access_log",
			      "aerospaceengg.virtual-labs.ac.in-access_log",
			      "combustion.virtual-labs.ac.in-access_log"
			     ]).


-define(Aws_relevant_file_names, [
				  "anthropology-iitg.virtual-labs.ac.in-access_log",
				  "bmi-iitr.virtual-labs.ac.in-access_log",
				  "bmsip-iitr.virtual-labs.ac.in-access_log",
				  "bmsp-coep.virtual-labs.ac.in-access_log",
				  "bsa-iiith.virtual-labs.ac.in-access_log",
				  "ccnsb06-iiith.virtual-labs.ac.in-access_log",
				  "cds-iiith.virtual-labs.ac.in-access_log",
				  "ce-iitb.virtual-labs.ac.in-access_log",
				  "cl-iiith.virtual-labs.ac.in-access_log",
				  "csc-iiith.virtual-labs.ac.in-access_log",
				  "cse01-iiith.virtual-labs.ac.in-access_log",
				  "cse02-iiith.virtual-labs.ac.in-access_log",
				  "cse11-iiith.virtual-labs.ac.in-access_log",
				  "cse14-iiith.virtual-labs.ac.in-access_log",
				  "cse15-iiith.virtual-labs.ac.in-access_log",
				  "cse18-iiith.virtual-labs.ac.in-access_log",
				  "cse19-iiith.virtual-labs.ac.in-access_log",
				  "cse20-iiith.virtual-labs.ac.in-access_log",
				  "cse22-iiith.virtual-labs.ac.in-access_log",
				  "cse29-iiith.virtual-labs.ac.in-access_log",
				  "ee-iitb.virtual-labs.ac.in-access_log",
				  "eem-iitd.virtual-labs.ac.in-access_log",
				  "eerc01-iiith.virtual-labs.ac.in-access_log",
				  "eerc03-iiith.virtual-labs.ac.in-access_log",
				  "em-coep.virtual-labs.ac.in-access_log",
				  "em-iitr.virtual-labs.ac.in-access_log",
				  "emt-iiith.virtual-labs.ac.in-access_log",
				  "ergonomics-iitg.virtual-labs.ac.in-access_log",
				  "fab-coep.virtual-labs.ac.in-access_log",
				  "fm-nitk.virtual-labs.ac.in-access_log",
				  "ge-iiith.virtual-labs.ac.in-access_log",
				  "he-coep.virtual-labs.ac.in-access_log",
				  "ial-coep.virtual-labs.ac.in-access_log",
				  "ied-nitk.virtual-labs.ac.in-access_log",
				  "mas-iiith.virtual-labs.ac.in-access_log",
				  "mdmv-nitk.virtual-labs.ac.in-access_log",
				  "mfs-iiith.virtual-labs.ac.in-access_log",
				  "mi-iiith.virtual-labs.ac.in-access_log",
				  "mm-coep.virtual-labs.ac.in-access_log",
				  "mm-nitk.virtual-labs.ac.in-access_log",
				  "mrmsmtbs-iitk.virtual-labs.ac.in-access_log",
				  "msvs-dei.virtual-labs.ac.in-access_log",
				  "nlp-iiith.virtual-labs.ac.in-access_log",
				  "pe-iitb.virtual-labs.ac.in-access_log",
				  "pev-au.virtual-labs.ac.in-access_log",
				  "pevii-au.virtual-labs.ac.in-access_log",
				  "phy14-iiith.virtual-labs.ac.in-access_log",
				  "plc-coep.virtual-labs.ac.in-access_log",
				  "ps-iiith.virtual-labs.ac.in-access_log",
				  "qnm-iitd.virtual-labs.ac.in-access_log",
				  "sa-nitk.virtual-labs.ac.in-access_log",
				  "sd-iiith.virtual-labs.ac.in-access_log",
				  "sl-coep.virtual-labs.ac.in-access_log",
				  "sl-iitr.virtual-labs.ac.in-access_log",
				  "smfe-iiith.virtual-labs.ac.in-access_log",
				  "sm-nitk.virtual-labs.ac.in-access_log",
				  "ssl-iitg.virtual-labs.ac.in-access_log",
				  "ssp-iiith.virtual-labs.ac.in-access_log",
				  "ufls-iitk.virtual-labs.ac.in-access_log",
				  "uorepc-nitk.virtual-labs.ac.in-access_log",
				  "va-coep.virtual-labs.ac.in-access_log",
				  "va-iitk.virtual-labs.ac.in-access_log",
				  "vcal-iitk.virtual-labs.ac.in-access_log",
				  "vc-dei.virtual-labs.ac.in-access_log",
				  "ve-iitg.virtual-labs.ac.in-access_log",
				  "vem-iitg.virtual-labs.ac.in-access_log",
				  "vlae-iitk.virtual-labs.ac.in-access_log",
				  "vp-dei.virtual-labs.ac.in-access_log",
				  "vssd-iitd.virtual-labs.ac.in-access_log"
				 ]).

-define(Base2_unusable_log_files, [
				   "deploy.vlabs.ac.in-access_log",
				   "cse12.vlabs.ac.in-access_log",
				   "civil11.vlabs.ac.in-access_log",
				   "nitk.vlabs.ac.in-access_log",
				   "cpl.virtual-labs.ac.in-access_log",
				   "hybrid-electronic.virtual-labs.ac.in-access_log",
				   "virtual-english.virtual-labs.ac.in-access_log",
				   "cdpeslab.virtual-labs.ac.in-access_log",
				   "mmlaboratory.virtual-labs.ac.in-access_log",
				   "industrial-automation.virtual-labs.ac.in-access_log",
				   "nlp.virtual-labs.ac.in-access_log",
				   "dld.virtual-labs.ac.in-access_log",
				   "computer-graphics.virtual-labs.ac.in-access_log",
				   "pattern-recognition.virtual-labs.ac.in-access_log",
				   "cryptography.virtual-labs.ac.in-access_log",
				   "ds.virtual-labs.ac.in-access_log",
				   "image-processing.virtual-labs.ac.in-access_log",
				   "microwave.virtual-labs.ac.in-access_log",
				   "eee06.virtual-labs.ac.in-access_log",
				   "mech26.virtual-labs.ac.in-access_log",
				   "mech08.virtual-labs.ac.in-access_log",
				   "phy01.virtual-labs.ac.in-access_log",
				   "chs13.virtual-labs.ac.in-access_log"
				   ]).

-define(Aws_unusable_log_files, []).

-define(Base2_file_lab_id_regexp_list, [
					{"music.virtual-labs.ac.in-access_log",
					 [{".", "music"}]
					},
					{"aerospaceengg.virtual-labs.ac.in-access_log",
					 [{".", "aerosp"}]
					},
					{"combustion.virtual-labs.ac.in-access_log",
					 [{".", "combus"}]
					},
					{"deploy.virtual-labs.ac.in-access_log",
					 [
					  {"GET /labs/account/", "account"},
					  {"GET /labs/administrator/", "administrator"},
					  {"GET /labs/ae01/", "ae01"},
					  {"GET /labs/assets/", "assets"},
					  {"GET /labs/bio15/", "bio15"},
					  {"GET /labs/bio16/", "bio16"},
					  {"GET /labs/blogs/", "blogs"},
					  {"GET /labs/ccnsb/", "ccnsb"},
					  {"GET /labs/ccnsb0/", "ccnsb0"},
					  {"GET /labs/ccnsb00/", "ccnsb00"},
					  {"GET /labs/ccnsb01/", "ccnsb01"},
					  {"GET /labs/ccnsb02/", "ccnsb02"},
					  {"GET /labs/ccnsb03/", "ccnsb03"},
					  {"GET /labs/ccnsb04/", "ccnsb04"},
					  {"GET /labs/ccnsb05/", "ccnsb05"},
					  {"GET /labs/ccnsb06/", "ccnsb06"},
					  {"GET /labs/ccnsb07/", "ccnsb07"},
					  {"GET /labs/cevl/", "cevl"},
					  {"GET /labs/chandan/", "chandan"},
					  {"GET /labs/che02/", "che02"},
					  {"GET /labs/chem01/", "chem01"},
					  {"GET /labs/chem02/", "chem02"},
					  {"GET /labs/chs13/", "chs13"},
					  {"GET /labs/civil/", "civil"},
					  {"GET /labs/civil09/", "civil09"},
					  {"GET /labs/civil13/", "civil13"},
					  {"GET /labs/civil13images/", "civil13images"},
					  {"GET /labs/civil15/", "civil15"},
					  {"GET /labs/civil16/", "civil16"},
					  {"GET /labs/civill13/", "civill13"},
					  {"GET /labs/civilutspbd13/", "civilutspbd13"},
					  {"GET /labs/consb06/", "consb06"},
					  {"GET /labs/csc19/", "csc19"},
					  {"GET /labs/csc29/", "csc29"},
					  {"GET /labs/cse/", "cse"},
					  {"GET /labs/cse01/", "cse01"},
					  {"GET /labs/cse02/", "cse02"},
					  {"GET /labs/cse03/", "cse03"},
					  {"GET /labs/cse04/", "cse04"},
					  {"GET /labs/cse05/", "cse05"},
					  {"GET /labs/cse06/", "cse06"},
					  {"GET /labs/cse07/", "cse07"},
					  {"GET /labs/cse08/", "cse08"},
					  {"GET /labs/cse09/", "cse09"},
					  {"GET /labs/cse09exp1/", "cse09exp1"},
					  {"GET /labs/cse09images/", "cse09images"},
					  {"GET /labs/cse1/", "cse1"},
					  {"GET /labs/cse10/", "cse10"},
					  {"GET /labs/cse11/", "cse11"},
					  {"GET /labs/cse12/", "cse12"},
					  {"GET /labs/cse13/", "cse13"},
					  {"GET /labs/cse14/", "cse14"},
					  {"GET /labs/cse15/", "cse15"},
					  {"GET /labs/cse16/", "cse16"},
					  {"GET /labs/cse17/", "cse17"},
					  {"GET /labs/cse18/", "cse18"},
					  {"GET /labs/cse187/", "cse187"},
					  {"GET /labs/cse19/", "cse19"},
					  {"GET /labs/cse20/", "cse20"},
					  {"GET /labs/cse21/", "cse21"},
					  {"GET /labs/cse22/", "cse22"},
					  {"GET /labs/cse23/", "cse23"},
					  {"GET /labs/cse232/", "cse232"},
					  {"GET /labs/cse24/", "cse24"},
					  {"GET /labs/cse25/", "cse25"},
					  {"GET /labs/cse26/", "cse26"},
					  {"GET /labs/cse27/", "cse27"},
					  {"GET /labs/cse28/", "cse28"},
					  {"GET /labs/cse282/", "cse282"},
					  {"GET /labs/cse29/", "cse29"},
					  {"GET /labs/cse30/", "cse30"},
					  {"GET /labs/cseog/", "cseog"},
					  {"GET /labs/css/", "css"},
					  {"GET /labs/design/", "design"},
					  {"GET /labs/ece01/", "ece01"},
					  {"GET /labs/ece02/", "ece02"},
					  {"GET /labs/ece03/", "ece03"},
					  {"GET /labs/ece04/", "ece04"},
					  {"GET /labs/ece05/", "ece05"},
					  {"GET /labs/ece06/", "ece06"},
					  {"GET /labs/ece08/", "ece08"},
					  {"GET /labs/ece09/", "ece09"},
					  {"GET /labs/ece10/", "ece10"},
					  {"GET /labs/ece11/", "ece11"},
					  {"GET /labs/ece18/", "ece18"},
					  {"GET /labs/ece19/", "ece19"},
					  {"GET /labs/ece21/", "ece21"},
					  {"GET /labs/ece23/", "ece23"},
					  {"GET /labs/ece26/", "ece26"},
					  {"GET /labs/eecr03/", "eecr03"},
					  {"GET /labs/eee03/", "eee03"},
					  {"GET /labs/eee05/", "eee05"},
					  {"GET /labs/eee06/", "eee06"},
					  {"GET /labs/eee07/", "eee07"},
					  {"GET /labs/eee09/", "eee09"},
					  {"GET /labs/eee10/", "eee10"},
					  {"GET /labs/eee12/", "eee12"},
					  {"GET /labs/eee23/", "eee23"},
					  {"GET /labs/eerc01/", "eerc01"},
					  {"GET /labs/eerc01images/", "eerc01images"},
					  {"GET /labs/eerc02/", "eerc02"},
					  {"GET /labs/eerc02css/", "eerc02css"},
					  {"GET /labs/eerc02js/", "eerc02js"},
					  {"GET /labs/eerc03/", "eerc03"},
					  {"GET /labs/eerc03css/", "eerc03css"},
					  {"GET /labs/eerc03images/", "eerc03images"},
					  {"GET /labs/eerc03js/", "eerc03js"},
					  {"GET /labs/eerc04/", "eerc04"},
					  {"GET /labs/eerc04js/", "eerc04js"},
					  {"GET /labs/eerc05/", "eerc05"},
					  {"GET /labs/eerc05images/", "eerc05images"},
					  {"GET /labs/eerc06/", "eerc06"},
					  {"GET /labs/eerc07/", "eerc07"},
					  {"GET /labs/eerca/", "eerca"},
					  {"GET /labs/eercn/", "eercn"},
					  {"GET /labs/eerco/", "eerco"},
					  {"GET /labs/eerco2/", "eerco2"},
					  {"GET /labs/eercs/", "eercs"},
					  {"GET /labs/eercw/", "eercw"},
					  {"GET /labs/emt/", "emt"},
					  {"GET /labs/engg01/", "engg01"},
					  {"GET /labs/forums/", "forums"},
					  {"GET /labs/hss01/", "hss01"},
					  {"GET /labs/hss02/", "hss02"},
					  {"GET /labs/hss03/", "hss03"},
					  {"GET /labs/images/", "images"},
					  {"GET /labs/img/", "img"},
					  {"GET /labs/js/", "js"},
					  {"GET /labs/labs/", "labs"},
					  {"GET /labs/mech01/", "mech01"},
					  {"GET /labs/mech04/", "mech04"},
					  {"GET /labs/mech08/", "mech08"},
					  {"GET /labs/mech17/", "mech17"},
					  {"GET /labs/mech18/", "mech18"},
					  {"GET /labs/mech26/", "mech26"},
					  {"GET /labs/member/", "member"},
					  {"GET /labs/phy/", "phy"},
					  {"GET /labs/phy01/", "phy01"},
					  {"GET /labs/phy14/", "phy14"},
					  {"GET /labs/phy141/", "phy141"},
					  {"GET /labs/phy144/", "phy144"},
					  {"GET /labs/phy14exp3/", "phy14exp3"},
					  {"GET /labs/phy14images/", "phy14images"},
					  {"GET /labs/phy19/", "phy19"},
					  {"GET /labs/sample1/", "sample1"},
					  {"GET /labs/sample13/", "sample13"},
					  {"GET /labs/sample16/", "sample16"},
					  {"GET /labs/sample2/", "sample2"},
					  {"GET /labs/sample20/", "sample20"},
					  {"GET /labs/sample21/", "sample21"},
					  {"GET /labs/sample22/", "sample22"},
					  {"GET /labs/sample3/", "sample3"},
					  {"GET /labs/sample4/", "sample4"},
					  {"GET /labs/sample5/", "sample5"},
					  {"GET /labs/sample6/", "sample6"},
					  {"GET /labs/sample7/", "sample7"},
					  {"GET /labs/sc01/", "sc01"},
					  {"GET /labs/signup/", "signup"},
					  {"GET /labs/site/", "site"},
					  {"GET /labs/temp98/", "temp98"},
					  {"GET /labs/user/", "user"}
					 ]
					}
			       ]).

-define(Aws_file_lab_id_regexp_list, [
					  {"anthropology-iitg.virtual-labs.ac.in-access_log", [{".", "anthropology"}]},
					  {"bmi-iitr.virtual-labs.ac.in-access_log", [{".", "bmi"}]},
					  {"bmsip-iitr.virtual-labs.ac.in-access_log", [{".", "bmsip"}]},
					  {"bmsp-coep.virtual-labs.ac.in-access_log", [{".", "bmsp"}]},
					  {"bsa-iiith.virtual-labs.ac.in-access_log", [{".", "bsa"}]},
					  {"ccnsb06-iiith.virtual-labs.ac.in-access_log", [{".", "ccnsb06"}]},
					  {"cds-iiith.virtual-labs.ac.in-access_log", [{".", "cds"}]},
					  {"ce-iitb.virtual-labs.ac.in-access_log", [{".", "ce"}]},
					  {"cl-iiith.virtual-labs.ac.in-access_log", [{".", "cl"}]},
					  {"csc-iiith.virtual-labs.ac.in-access_log", [{".", "csc"}]},
					  {"cse01-iiith.virtual-labs.ac.in-access_log", [{".", "cse01"}]},
					  {"cse02-iiith.virtual-labs.ac.in-access_log", [{".", "cse02"}]},
					  {"cse11-iiith.virtual-labs.ac.in-access_log", [{".", "cse11"}]},
					  {"cse14-iiith.virtual-labs.ac.in-access_log", [{".", "cse14"}]},
					  {"cse15-iiith.virtual-labs.ac.in-access_log", [{".", "cse15"}]},
					  {"cse18-iiith.virtual-labs.ac.in-access_log", [{".", "cse18"}]},
					  {"cse19-iiith.virtual-labs.ac.in-access_log", [{".", "cse19"}]},
					  {"cse20-iiith.virtual-labs.ac.in-access_log", [{".", "cse20"}]},
					  {"cse22-iiith.virtual-labs.ac.in-access_log", [{".", "cse22"}]},
					  {"cse29-iiith.virtual-labs.ac.in-access_log", [{".", "cse29"}]},
					  {"cp-iiith.virtual-labs.ac.in-access_log", [{".", "cse02"}]}, %Same as cse02
					  {"ee-iitb.virtual-labs.ac.in-access_log", [{".", "ee"}]},
					  {"eem-iitd.virtual-labs.ac.in-access_log", [{".", "eem"}]},
					  {"eerc01-iiith.virtual-labs.ac.in-access_log", [{".", "eerc01"}]},
					  {"eerc03-iiith.virtual-labs.ac.in-access_log", [{".", "eerc03"}]},
					  {"em-coep.virtual-labs.ac.in-access_log", [{".", "em-coep"}]},
					  {"em-iitr.virtual-labs.ac.in-access_log", [{".", "em-iitr"}]},
					  {"emt-iiith.virtual-labs.ac.in-access_log", [{".", "emt"}]},
					  {"ergonomics-iitg.virtual-labs.ac.in-access_log", [{".", "ergonomics"}]},
					  {"fab-coep.virtual-labs.ac.in-access_log", [{".", "fab"}]},
					  {"fm-nitk.virtual-labs.ac.in-access_log", [{".", "fm"}]},
					  {"ge-iiith.virtual-labs.ac.in-access_log", [{".", "ge"}]},
					  {"he-coep.virtual-labs.ac.in-access_log", [{".", "he"}]},
					  {"ial-coep.virtual-labs.ac.in-access_log", [{".", "ial"}]},
					  {"ied-nitk.virtual-labs.ac.in-access_log", [{".", "ied"}]},
					  {"mas-iiith.virtual-labs.ac.in-access_log", [{".", "mas"}]},
					  {"mdmv-nitk.virtual-labs.ac.in-access_log", [{".", "mdmv"}]},
					  {"mfs-iiith.virtual-labs.ac.in-access_log", [{".", "mfs"}]},
					  {"mi-iiith.virtual-labs.ac.in-access_log", [{".", "mi"}]},
					  {"mm-coep.virtual-labs.ac.in-access_log", [{".", "mm-coep"}]},
					  {"mm-nitk.virtual-labs.ac.in-access_log", [{".", "mm-nitk"}]},
					  {"mrmsmtbs-iitk.virtual-labs.ac.in-access_log", [{".", "mrmsmtbs"}]},
					  {"msvs-dei.virtual-labs.ac.in-access_log", [{".", "msvs"}]},
					  {"nlp-iiith.virtual-labs.ac.in-access_log", [{".", "nlp"}]},
					  {"outreach.virtual-labs.ac.in-access_log", [{".", "outreach"}]},
					  {"pe-iitb.virtual-labs.ac.in-access_log", [{".", "pe"}]},
					  {"pev-au.virtual-labs.ac.in-access_log", [{".", "pev"}]},
					  {"pevii-au.virtual-labs.ac.in-access_log", [{".", "pevii"}]},
					  {"phy14-iiith.virtual-labs.ac.in-access_log", [{".", "phy14"}]},
					  {"plc-coep.virtual-labs.ac.in-access_log", [{".", "plc"}]},
					  {"ps-iiith.virtual-labs.ac.in-access_log", [{".", "ps"}]},
					  {"qnm-iitd.virtual-labs.ac.in-access_log", [{".", "qnm"}]},
					  {"sa-nitk.virtual-labs.ac.in-access_log", [{".", "sa"}]},
					  {"sd-iiith.virtual-labs.ac.in-access_log", [{".", "sd"}]},
					  {"sl-coep.virtual-labs.ac.in-access_log", [{".", "sl-coep"}]},
					  {"sl-iitr.virtual-labs.ac.in-access_log", [{".", "sl-iitr"}]},
					  {"smfe-iiith.virtual-labs.ac.in-access_log", [{".", "smfe"}]},
					  {"sm-nitk.virtual-labs.ac.in-access_log", [{".", "sm"}]},
					  {"ssl-iitg.virtual-labs.ac.in-access_log", [{".", "ssl"}]},
					  {"ssp-iiith.virtual-labs.ac.in-access_log", [{".", "ssp"}]},
					  {"ufls-iitk.virtual-labs.ac.in-access_log", [{".", "ufls"}]},
					  {"uorepc-nitk.virtual-labs.ac.in-access_log", [{".", "uorepc"}]},
					  {"va-coep.virtual-labs.ac.in-access_log", [{".", "va-coep"}]},
					  {"va-iitk.virtual-labs.ac.in-access_log", [{".", "va-iitk"}]},
					  {"vcal-iitk.virtual-labs.ac.in-access_log", [{".", "vcal"}]},
					  {"vc-dei.virtual-labs.ac.in-access_log", [{".", "vc"}]},
					  {"ve-iitg.virtual-labs.ac.in-access_log", [{".", "ve"}]},
					  {"vem-iitg.virtual-labs.ac.in-access_log", [{".", "vem"}]},
					  {"vlae-iitk.virtual-labs.ac.in-access_log", [{".", "vlae"}]},
					  {"vp-dei.virtual-labs.ac.in-access_log", [{".", "vp"}]},
					  {"vssd-iitd.virtual-labs.ac.in-access_log", [{".", "vssd"}]}
				     ]
       ).


-define(Lab_id_exp_info_list, [
			       {"cse01",
				[
				 {"Number Systems", "/exp1/index.php", "/exp1/UnarySystem.*|/exp1/RomanSystem.*| /exp1/BinarySystem.*"},
				 {"Expression Evaluation", "/exp2/index.php", "/exp2/calc3.*"},
				 {"Sorting Algorithm", "/exp3/index.php", "/exp3/quick.*|/exp3/merge.*|/exp3/insertion.*"},
				 {"Polynomial Operations", "/exp4/index.php", "/exp4/polynomial.*"},
				 {"Search Trees", "/exp5/index.php", "/exp5/binarySearchTree.*"},
				 {"Expression Trees", "/exp6/index.php", "/exp6/exptree.*"},
				 {"Graph Traversals", "/exp7/index.php", "/exp7/DFS_BFS.*"},
				 {"Shortest Paths in Graphs", "/exp8/index.php", "/exp8/Dijkstra.*"},
				 {"Spanning Trees in Graphs", "/exp9/index.php", "/exp9/MinimumSpanningTree.*"}
				]
			       },
			       {"cse02",
			       	[
			       	 {"Numerical Integration ( Area Under Curve )", "/exp1/index.html", "/exp1/simulation/index.*"},
			       	 {"Functions", "/exp2/index.html", "/exp2/simulation/index.*"},
			       	 {"Loops (Factorial Calculation)", "/exp3/index.html", "/exp3/simulation/index.*"},
			       	 {"Arrays", "/exp4/index.html", "/exp4/simulation.*"},
			       	 {"Structure", "/exp5/index.html", "/exp5/simulation/index.*"},
			       	 {"Basic Control Flow", "/exp6/index.html", "/exp6/simulation.*"},
			       	 {"Strings", "/exp7/index.html", "/exp7/simulation.*"},
			       	 {"Pointers", "/exp8/index.html", "/exp8/simulation.*"},
			       	 {"Recusrion", "/exp9/index.html", "/exp9/simulation.*"},
			       	 {"Expression Evaluation", "/exp10/index.html", "/exp10/simulation.*"}
			       	]
			       },
			       {"cse15",
			       	[
			       	 {"Adder Circuit", "/exp1/index.php", "/exp1/exp1.*"},
			       	 {"Multiplexer", "/exp2/index.php", "/exp2/exp2.*"},
			       	 {"Decoder with 7 segment display", "/exp3/index.php", "/exp3/exp3.*"},
			       	 {"ALU with function", "/exp4/index.php", "/exp4/exp4.*"},
			       	 {"Comparator", "/exp5/index.php", "/exp5/exp5.*"},
			       	 {"JK Flip-Flop", "/exp6/index.php", "/exp6/exp6.*"},
			       	 {"Registers", "/exp7/index.php", "/exp7/exp7.*"},
			       	 {"Counters", "/exp8/index.php", "/exp8/exp8.*"},
			       	 {"Multipliers", "/exp9/index.php", "/exp9/exp9.*"},
			       	 {"State Diagrams", "/exp10/index.php", "/exp10/exp10.*"}
			       	]
			       },
			       {"cse19",
			       	[
			       	 {"Distance and Connectivity", "/objective.php.*exp=diff", "/diff.php"},
			       	 {"Image Arithmetic", "/objective.php.*exp=arith", "/arith.php"},
			       	 {"Affine Transformation", "/objective.php.*exp=affine", "/affine.php"},
			       	 {"Point Operations", "/objective.php.*exp=point", "/point.php"},
			       	 {"Neighbourhood Operations", "/objective.php.*exp=neigh", "/neigh.php"},
			       	 {"Image Histogram", "/objective.php.*exp=histo", "/histo.php"},
			       	 {"Fourier Transform", "/objective.php.*exp=fourier", "/fourier.php"},
			       	 {"Color Image Processing ", "/objective.php.*exp=colour", "/clour.php"},
			       	 {"Morphological Operations", "/objective.php.*exp=morph", "/morph.php"},
			       	 {"Image Segmentation", "/objective.php.*exp=segment", "/segment.php"},
			       	 {"Image Processing Test Bench", "/objective.php.*exp=piping", "/piping.php"}
			       	]
			       },
			       {"cse18",
			       	[
			       	 {"Points & Co-ordinate Systems", "/exp1/index.php", "/exp1/index.php.*section=Experiment.*"},
			       	 {"Transformations: Translation", "/exp2/index.php", "/exp2/index.php.*section=Experiment.*"},
			       	 {"Transformations: Rotation", "/exp3/index.php", "/exp3/index.php.*section=Experiment.*"},
			       	 {"Transformations: Scaling", "/exp4/index.php", "/exp4/index.php.*section=Experiment.*"},
			       	 {"Hierarchical Transformations: 2D Demo", "/exp5a/index.php", "/exp5a/index.php.*section=Experiment.*"},
			       	 {"Hierarchical Transformations: 3D Articulated Arm", "/exp5b/index.php", "/exp5b/index.php.*section=Experiment.*"},
			       	 {"Projections and Cameras", "/exp6/index.php", "/exp6/index.php.*section=Experiment.*"},
			       	 {"Clipping : Line", "/exp7/index.php", "/exp7/index.php.*section=Experiment.*"},
			       	 {"Clipping : Polygon", "/exp8/index.php", "/exp8/index.php.*section=Experiment.*"},
			       	 {"Rasterization : Line", "/exp9/index.php", "/exp9/index.php.*section=Experiment.*"},
			       	 {"Rasterization : Polygon", "/exp10/index.php", "/exp10/index.php.*section=Experiment.*"}
			       	]
			       },
			       {"cse20",
			       	[
			       	 {"Feature Representation", "/exp1/index.php", "/exp1/index.php.*section=Experiment.*"},
			       	 {"Mean and Covariance", "/exp2/index.php", "/exp2/index.php.*section=Experiment.*"},
			       	 {"Linear Perceptron", "/exp3/index.php", "/exp3/index.php.*section=Experiment.*"},
			       	 {"Generating Random Numbers", "/exp4/index.php", "/exp4/index.php.*section=Experiment.*"},
			       	 {"Bayesian Classification", "/exp5/index.php", "/exp5/index.php.*section=Experiment.*"},
			       	 {"MLE: Learning the Classifier from Data", "/exp6/index.php", "/exp6/index.php.*section=Experiment.*"},
			       	 {"From 2-class to multiclass", "/exp7/index.php", "/exp7/index.php.*section=Experiment.*"},
			       	 {"Data Clustering: K-means, MST based", "/exp10/index.php", "/exp10/index.php.*section=Experiment.*"}
			       	]
			       },
			       {"emt",
			       	[
			       	 {"Coulomb's Law", "/Experiment.php.*code=C001", "/Experiment.php*.tid=T005.*code=C001"},
			       	 {"Electrostatic Fields I", "/Experiment.php.*code=C002", "/Experiment.php*.tid=T005.*code=C002"},
			       	 {"Electrostatic Fields II", "/Experiment.php.*code=C003", "/Experiment.php*.tid=T005.*code=C003"},
			       	 {"Boundary Conditions", "/Experiment.php.*code=C004", "/Experiment.php*.tid=T005.*code=C004"},
			       	 {"Electric Field in Material Space", "/Experiment.php.*code=C005", "/Experiment.php*.tid=T005.*code=C005"},
			       	 {"Magnetostatic Fields", "/Experiment.php.*code=C006", "/Experiment.php*.tid=T005.*code=C006"},
			       	 {"Application of Faraday's Laws", "/Experiment.php.*code=C007", "/Experiment.php*.tid=T005.*code=C007"},
			       	 {"Wave Propagation", "/Experiment.php.*code=C008", "/Experiment.php*.tid=T005.*code=C008"},
			       	 {"Distance and Altitude Measurement", "/Experiment.php.*code=C009", "/Experiment.php*.tid=T005.*code=C009"},
			       	 {"Plane Waves - Reflection and Refraction", "/Experiment.php.*code=C010", "/Experiment.php*.tid=T005.*code=C010"}
			       	]
			       },
			       {"cse29",
			       	[
			       	 {"Breaking the Shift Cipher", "/exp1/index.php", "/exp1/index.php.*section=Experiment.*"},
			       	 {"Breaking the Mono-alphabetic Substitution Cipher", "/exp2/index.php", "/exp2/index.php.*section=Experiment.*"},
			       	 {"Vernam Cipher and Perfect secrecy", "/exp3/index.php", "/exp3/index.php.*section=Experiment.*"},
			       	 {"Message Authentication Code (CBC-MAC)", "/exp5/index.php", "/exp5/index.php.*section=Experiment.*"},
			       	 {"Cryptographic Hash Functions and Applications(HMAC)", "/exp6/index.php", "/exp6/index.php.*section=Experiment.*"},
			       	 {"From DES to 3-DES", "/exp7/index.php", "/exp7/index.php.*section=Experiment.*"},
			       	 {"AES and Modes of Operation", "/exp8/index.php", "/exp8/index.php.*section=Experiment.*"},
			       	 {"Diffie-Hellman Key Establishment", "/exp9/index.php", "/exp9/index.php.*section=Experiment.*"},
			       	 {"Public-Key Cryptosystems (PKCSv1.5)", "/exp10/index.php", "/exp10/index.php.*section=Experiment.*"},
			       	 {"Digital Signatures Scheme", "/exp11/index.php", "/exp11/index.php.*section=Experiment.*"}
			       	]
			       },
			       {"cse22",
			       	[
			       	 {"Parallel and distributed processing - I: Interactive activation and competition models ", "/exp1/index.html", "/exp1/applet/index.html"},
			       	 {"Parallel and distributed processing - II: Constraint satisfaction neural network models", "/exp2/index.html", "/exp2/applet/index.html"},
			       	 {"Perceptron learning", "/exp3/index.html", "/exp3/perceptron.php"},
			       	 {"Multilayer feedforward neural networks", "/exp4/index.html", "/exp4/mlffnn.php"},
			       	 {"Hopfield model for pattern storage task", "/exp5/index.html", ""},
			       	 {"Hopfield model with stochastic update", "/exp6/index.html", ""},
			       	 {"Competitive learning neural networks", "/exp7/index.html", "/exp7/clnn.php"},
			       	 {"Solution of optimization problems", "/exp8/index.html", "/exp8/som.php"},
			       	 {"Hopfield models for solution to optimization problems", "/exp9/index.html", "/exp9/graphbipartition.php"},
			       	 {"Deterministic, stochastic and mean-field annealing of Hopfield models", "/exp10/index.html", "/exp10/weightedmatching.php"}
			       	]
			       },
			       {"cse11",
			       	[
			       	 {"Representation of Integers and their Arithmetic", "/Integers/index.php", "/Integers/IntegerArithmetic.swf"},
			       	 {"Floating Point Numbers Representation", "/FloatingPointNumbers/index.php", "/FloatingPointNumbers/v4.swf"},
			       	 {"Cache Organizations", "/CacheOrganizations/index.php", "/CacheOrganizations/index.php.*section=Experiment.*"},
			       	 {"Locality Analysis of programs using Cachegrind Tool", "/Localityanalysis/index.php", "/LocalityAnalysis/index.php.*section=Experiment"},
			       	 {"Tiling Matrix Multiplication", "/TilingMatrix/index.php", "/TilingMatrix/index.php.*section=Experiment"},
			       	 {"Virtual Memory", "/VirtualMemory/index.php", "/VirtualMemory/index.php.*section=Experiment.*"},
			       	 {"MIPS Assembly Language Programming", "/MIPS1/index.php", "/MIPS1/index.php.*section=Experiment.*"},
			       	 {"Implementing Procedures using MIPS ISA", "/MIPS2/index.php", "/MIPS2/index.php.*section=Experiment.*"},
			       	 {"ARM Assembly Language Programming", "/ARM1/index.php", "/ARM1/index.php.*section=Experiment.*"},
			       	 {"Implementing Procedures using ARM ISA", "/ARM2/index.php", "/ARM2/index.php.*section=Experiment.*"},
			       	 {"Single Cycle", "/SingleCycle/index.php", "/SingleCycle/v19.swf"}
			       	]
			       },
			       {"cse14",
			       	[
			       	 {"Schematic Design Of Transistor Level Inverter", "/Experiment.php.*code=C001", "/EXP_1sep2010/exp1/exp1.*"},
			       	 {"Schematic Design Of Transistor Level NAND & NOR Gate", "/Experiment.php.*code=C002", "/EXP_1sep2010/exp2/exp2.*"},
			       	 {"Schematic Design Of Transistor Level XOR & XNOR Gate", "/Experiment.php.*code=C003", "/EXP_1sep2010/exp3/exp3.*"},
			       	 {"Schematic Design Of Pass Transistor Logic & Multiplexer.", "/Experiment.php.*code=C004", "/EXP_1sep2010/exp5/exp5_pass.*"},
			       	 {"Schematic Design Of Pass Transistor Logic & Multiplexer.", "/Experiment.php.*code=C004", "/EXP_1sep2010/exp5/exp5_Pass_negative/exp5_Pass_negative.*"},
			       	 {"Delay Estimation In Chain Of Inverters", "/Experiment.php.*code=C005", "/EXP_1sep2010/exp7/exp7_size.*"},
			       	 {"Schematic Design Of D-Latch and D-Flip Flop", "/Experiment.php.*code=C006", "/EXP_1sep2010/exp6/exp6_latch_positive.*"},
			       	 {"Schematic Design Of D-Latch and D-Flip Flop", "/Experiment.php.*code=C006", "/EXP_1sep2010/exp6/exp6_negative/exp6_flipflop_negative.*"},
			       	 {"Spice Code Platform", "/Experiment.php.*code=C008", "/EXP_1sep2010/exp4/exp4.*"},
			       	 {"Design Of D-Flip Flop Using Verilog", "/Experiment.php.*code=C009", "/EXP_1sep2010/exp9/exp9_flipflop_positive_verilog.*"},
			       	 {"Design Of D-Flip Flop Using Verilog", "/Experiment.php.*code=C009", "/EXP_1sep2010/exp9/exp9_negative/exp9_flipflop_negative_verilog.*"},
			       	 {"Design Of Digital Circuits Using Verilog", "/Experiment.php.*code=C0091", "/EXP_1sep2010/exp8/exp8.*"},
			       	 {"Layout Design", "/Experiment.php.*code=C007", "/EXP_1sep2010/layout/exp1.*"}
			       	]
			       },
			       {"ccnsb06",
			       	[
			       	 {"Instrumentation and Working Principles of Infra Red (IR) Spectroscopy Using Salt Plates.", "/exp6/index.php", "/exp6_10/IR_Powder_exp6.swf"},
			       	 {"Instrumentation and Working Principles of Solutions Infra Red (IR) Spectroscopy", "/exp7/index.php", "/exp6_10/IR_Sol_exp7.swf"},
			       	 {"Instrumentation and Working Principles Principles of Mass Spectroscopy", "/exp8/index.php", "/exp6_10/Mass_Spec_exp8.swf"},
			       	 {"Determination of Molar Mass of Simple Compounds Using Mass Spectroscopy", "/exp9/index.php", "/exp6_10/Mass_Spec_exp9.swf"},
			       	 {"Nuclear Magnetic Resosnace Spectrocopy and Evaulation of Simple 1H NMR Spectra of Select Organic Compounds", "/exp5/index.php", "/exp5/NMR.swf"},
			       	 {"Identification of Unknown Components Using Spectroscopic Techniques", "/exp10/index.php", "/exp6_10/Experiment10.swf"},
			       	 {"Principles of Electron Paramagnetic Resonance Spectroscopy", "/exp1/index.php", "/exp1/ve_exp1.html"},
			       	 {"Electron Paramagnetic Resonance Spectral Studies of Select Organic Free Radicals", "/exp2/index.php", "/exp2/ve_exp2.html"}
			       	]
			       },
			       {"eerc01",
			       	[
			       	 {"Tensile Test", "/exp1/index.php", "/exp1/Animation.*"},
			       	 {"Compression Test", "/exp2/index.php", "/exp2/Animation.*"},
			       	 {"Shear Test", "/exp3/index.php", "/exp3/Animation.*"},
			       	 {"Torsion Test", "/exp4/index.php", "/exp4/Animation.*"},
			       	 {"Impact Test", "/exp5/index.php", "/exp5/Animation.*"},
			       	 {"Creep Test", "/exp6/index.php", "/exp6/Animation.*"},
			       	 {"Fatigue Test", "/exp7/index.php", "/exp7/Animation.*"},
			       	 {"Compression Test on Spring", "/exp8/index.php", "/exp8/Animation.*"},
			       	 {"Principal Stresses", "/exp9/index.php", "/exp9/Animation.*"},
			       	 {"Rockwell-Hardness", "/exp10/index.php", "/exp10/Animation.*"}
			       	]
			       },
			       {"eerc03",
			       	[
			       	 {"Bernoulli's Experiment", "/exp1/index.php", "/exp1/.*Bernoullis.*"},
			       	 {"Venturi Meter Experiment", "/exp5/index.php", "/exp5/.*Venturi.*"},
			       	 {"Orifices Experiment", "/exp6/index.php", "/exp6/.*Orifice.*"},
			       	 {"Mouthpieces Experiment", "/exp7/index.php", "/exp7/.*Mouth.*"},
			       	 {"Weirs Experiment", "/exp8/index.php", "/exp8/.*Weirs.*"},
			       	 {"Channels Experiment", "/exp9/index.php", "/exp9/.*Channels.*"},
			       	 {"Reynold's Experiment", "/exp10/index.php", "/exp10/.*Reynolds.*"},
			       	 {"Vortices's Experiment", "/exp11/index.php", "/exp11/.*Vortices.*"},
			       	 {"Jets Experiment", "/exp12/index.php", "/exp12/.*Jets.*"},
			       	 {"Turbines Experiment", "/exp13/index.php", "/exp13/.*Turbines.*"}
			       	]
			       },
			       {"phy14",
			       	[
			       	 {"Measurement of Dipole Moment", "/exp1/index.html", "/exp1/.*dipolemoment.html.*.*"},
			       	 {"Millikan's Experiment", "/exp2/index.html", "/exp2/.*millikansexp.html.*"},
			       	 {"Photoelectric Effect", "/exp3/index.html", "/exp3/.*photoelectric.html.*"},
			       	 {"Inversion of Cane Sugar", "/exp4/index.html", "/exp4/.*opticalrotation.html.*"},
			       	 {"Heat of Neutralization", "/exp5/index.html", "/exp5/.*calorimeter.html.*"},
			       	 {"Acid-Base Indicators", "/exp6/index.html", "/exp6/.*phscale.html.*"},
			       	 {"Geiger Muller Counter", "/exp7/index.html", "/exp7/.*geigermuller.html.*"},
			       	 {"Young's Modulus", "/exp8/index.html", "/exp8/.*youungmodulus.html.*"},
			       	 {"Surface Tension", "/exp9/index.html", "/exp9/.*surfacetension.html."}
			       	]
			       },
			       {"ps",
			       	[
			       	 {"Numerical Representation", "/exp1/index.php", "/exp1/lab.html"},
			       	 {"Beauty of Numbers", "/exp2/index.php", "/exp2/lab.html"},
			       	 {"More on Numbers", "/exp3/index.php", "/exp3/lab.html"},
			       	 {"Factorials", "/exp4/index.php", "/exp4/lab.html"},
			       	 {"String Operations", "/exp5/index.php", "/exp5/lab.html"},
			       	 {"Recursion", "/exp6/index.php", "/exp6/lab.html"},
			       	 {"Advanced Arithmatic", "/exp7/index.php", "/exp7/lab.html"},
			       	 {"Searching and Sorting", "/exp8/index.php", "/exp8/lab.html"},
			       	 {"Permutation", "/exp9/index.php", "/exp9/lab.html"},
			       	 {"Sequences", "/exp10/index.php", "/exp10/lab.html"}
			       	]
			       },
			       {"csc",
			       	[
			       	 {"Preparation of Sols", "/exp1/index.html", "/exp1/sol.*"},
			       	 {"Preparation of Gels", "/exp2/index.html", "/exp2/gel_form.*"},
			       	 {"Demonstration of the Preparation and Use of Association Colloids (Micelles)", "/exp3/index.html", "/exp3/clean.*"},
			       	 {"Determination of Critical Micelle Concentration (CMC) of a Surfactant", "/exp14/index.html", "/exp14/cmc.*"},
			       	 {"Demonstration of the Surface Tension Lowering of Water by Soaps/Detergents", "/exp4/index.html", "/exp4/surface.*"},
			       	 {"Demonstration of Tyndall Effect or Tyndall Scattering in Colloidal Systems", "/exp5/index.html", "/exp5/Tyndal.*"},
			       	 {"Gel Electrophoresis", "/exp7/index.html", "/exp7/Gel_total.*"},
			       	 {"Demonstration of the Surface-Effect on Chemical Properties of Finely Divided Particles", "/exp8/index.html", "/exp8/surface.*"},
			       	 {"Study of the Catalytic Effects of Finely Divided Particles", "/exp15/index.html", "/exp15/lab9.*"}
			       	]
			       },
			       {"bsa",
			       	[
			       	 {"Single Span Beams", "/exp9/index.php", "/exp2/Animation.*"},
			       	 {"Continuous Beams", "/exp9/index.php", "/exp3/Animation.*"},
			       	 {"Column Analysis", "/exp9/index.php", "/exp4/Animation.*"},
			       	 {"Portal Frames", "/exp9/index.php", "/exp5/Animation.*"},
			       	 {"Plates", "/exp9/index.php", "/exp6/Animation.*"},
			       	 {"Rigid Joints", "/exp9/index.php", "/exp1/Animation.*"},
			       	 {"Arches", "/exp9/index.php", "/exp7/Animation.*"},
			       	 {"Trusses", "/exp9/index.php", "/exp8/Animation.*"},
			       	 {"Retaining Walls", "/exp9/index.php", "/exp9/Animation.*"},
			       	 {"Plastic Hinge", "/exp9/index.php", "/exp10/Animation.*"}
			       	]
			       },
			       {"cds",
			       	[
			       	 {"To determine the specific rotation of a sugar using a polarimeter.", "/exp1/index.html", "/exp1/swf.*"},
			       	 {"To understand the effect of chiral substances on plane polarized light as a function of wavelength.", "/exp2/index.html", "/exp2/emanim_ord_refrac.*"},
			       	 {"To understand the effect of chiral substances on plane polarized light as a function of wavelength.", "/exp2/index.html", "/exp2/part2_cd/emanim_cd_refrac.*"},
			       	 {"To study the Optical Rotatory Dispersion (ORD) of some chiral substances", "/exp3/index.html", "/exp3/jmol.*"},
			       	 {"To study the Circular Dichroism of some substances with chiral chromophores", "/exp4/index.html", "/exp4/exp.*"},
			       	 {"To Study the operational details of a CD spectrometer", "/exp5/index.html", "/exp5/swf.*"},
			       	 {"To Study the effect of Secondary Structure elements on CD spectrum of proteins", "/exp6/index.html", "/exp6/swf.*"},
			       	 {"To deconvolute the CD spectrum of a given protein solution and to classify it in terms of its secondary structure elements", "/exp7/index.html", "/exp7/swf.*"},
			       	 {"To Study the Thermal Stability of Proteins", "/exp8/index.html", "/exp8/experiment/index.*"},
			       	 {"To Study The Effect of Chemical Denaturants on Protein Stability", "/exp9/index.html", "/exp9/experiment/index.*"},
			       	 {"To study the comparison between protein unfolding and protein aggregation in the presence of chemical denaturing agents", "/exp10/index.html", "/exp10/experiment/index.*"}
			       	]
			       },
			       {"smfe",
			       	[
			       	 {"Water Content", "/exp1/index.php", "/exp1/Animation/.*"},
			       	 {"Unit Weight", "/exp2/index.php", "/exp2/Animation/.*"},
			       	 {"Specific Gravity", "/exp3/index.php", "/exp3/Animation/.*"},
			       	 {"Grain Size Distribution", "/exp4/index.php", "/exp4/Animation/.*"},
			       	 {"Attenberg Limits", "/exp5/index.php", "/exp5/Animation/.*"},
			       	 {"Permeability", "/exp6/index.php", "/exp6/Animation/.*"},
			       	 {"Compaction Test", "/exp7/index.php", "/exp7/Animation/.*"},
			       	 {"Consolidation Test", "/exp8/index.php", "/exp8/Animation/.*"},
			       	 {"Direct Shear Test", "/exp9/index.php", "/exp9/Animation/.*"},
			       	 {"Triaxial Test", "/exp10/index.php", "/exp10/Animation/.*"}
			       	]
			       },
			       {"ssp",
			       	[
			       	 {"Manual speech signal-to-symbol transformation", "/exp01/index.html", "/exp01/part.*"},
			       	 {"Speech production mechanism", "/exp02/index.html", "/exp02/part.*"},
			       	 {"Nature of Speech Signal", "/exp03/index.html", "/exp03/natureofspeech.php"},
			       	 {"Basics of DSP", "/exp04/index.html", "/exp04/part.*"},
			       	 {"Short-Time Spectrum Analysis of Speech", "/exp05/index.html", ""},
			       	 {"Spectrographic Analysis of Speech", "/exp06/index.html", "/exp06/part.*"},
			       	 {"Short-Time Cepstrum Analysis of Speech", "/exp07/index.html", ""},
			       	 {"Linear Prediction Analysis of Speech", "/exp08/index.html", ""},
			       	 {"Formant Synthesis", "/exp09/index.html", ""},
			       	 {"Analysis by synthesis", "/exp10/index.html", ""}
			       	]
			       },
			       {"ge",
			       	[
			       	 {"Free Swell Index", "/exp1/index.html", "/exp1/animation/fsi.html"},
			       	 {"California Bearing Ratio Test", "/exp2/index.html", "/exp2/media/ve_cbr.*"},
			       	 {"pH Test", "/exp3/index.html", "/exp2/media/ve_ph.*"},
			       	 {"Determination of Total Soluble Solids", "/exp4/index.html", "exp4/media/ve_totalsolid.*"},
			       	 {"Core Cutter Experiment", "/exp5/index.html", "/exp5/media/ve_coreCutter.*"},
			       	 {"Vane Shear Test", "/exp6/index.html", "/exp6/media/shearing.*|/exp6/media/ve_vanshear.*"},
			       	 {"Total Sulphate Test", "/exp7/index.html", "/exp7/media/ve_vanshear.*"},
			       	 {"Standard Penetration Test", "/exp8/index.html", "/exp8/media/ve_vanshear.*"},
			       	 {"Plate Load Test", "/exp9/index.html", "/exp9/media/ve_plateload.*"}
			       	]
			       },
			       {"mi",
			       	[
			       	 {"Internuclear forces in a diatomic molecule", "/exp1/index.html", "/latest_project/bin/magnet1.html"},
			       	 {"Internuclear forces in a diatomic molecule", "/exp1/index.html", "/latest_project/bin/magnet.html"},
			       	 {"Molecular forces in a triatomic molecule", "/exp2/index.html", "/latest_project/bin/magnet1.html"},
			       	 {"Dihedral forces in a quad-atomic molecule", "/exp3/index.html", "/latest_project/bin/magnet.html"},
			       	 {"Interatomic van der Waals forces", "/exp4/index.html", "/suraj/Suraj/bin/Electrostatic.html"},
			       	 {"van der Waals forces between molecules", "/exp5/index.html", "/suraj/Suraj/bin/Hexane_Vanderwall.html"},
			       	 {"Interatomic electrostatic forces", "/exp6/index.html", "/suraj/Suraj/bin/Electrostatic.html"},
			       	 {"Electrostatic forces between molecules", "/exp7/index.html", "/suraj/Suraj/bin/Electrostatic_Hexane.html"},
			       	 {"Many-body forces in a polyatomic molecule", "/exp8/index.html", "/suraj/Suraj/bin/1.html"},
			       	 {"Solvent viscous forces on a polyatomic molecule", "/exp9/index.html", "/suraj/Suraj/bin/ViscoseEnvironment.html"},
			       	 {"Molecular separation using inter-atomic forces: Column chromatography", "/exp10/index.html", "/suraj/Suraj/bin/oilDrop.html"},
			       	 {"Radiation forces on a dielectric particle", "/exp11/index.html", "/suraj/Suraj/bin/Laser.html"}
			       	]
			       },
			       {"mas",
			       	[
			       	 {"Familiarization with the UV-Visible Absorption Spectroscopy", "/exp1/index.html", "/exp1/media/Principle.html|/exp1/media/instrument_animation.html|/exp1/media/1.html"},
			       	 {"Solvent Effects on the UV-visible Absorption Spectra", "/exp2/index.html", "/exp2/media/2.html"},
			       	 {"Sample Path Length Dependence of Absorbance (Lambert Law)", "/exp3/", "/exp3/media/length.html|/exp3/media/3.html"},
			       	 {"Sample Concentration Dependence of Absorbance (Beer Law)", "/exp4/", "/exp4/media/concentration.html|/exp4/media/4.html"},
			       	 {"Determination of the Molar Absorptivity of a Light Absorbing Molecule", "/exp5/index.html", "/exp5/media/5.html"},
			       	 {"Verification of Beer-Lambert's law", "/exp6/", "/exp6/media/6.html"},
			       	 {"Determination of unknown concentration of an analyte by using the Beer-Lambert Law", "/exp7/", "/exp7/media/7.html"},
			       	 {"Simultaneous estimation method for multicomponent samples: Principle of additivity of absorbance", "/exp8/", "/exp8/media/8.html"},
			       	 {"Effects of solution pH on the UV-visible absorption spectra", "/exp9/", "/exp9/media/9.html"},
			       	 {"Gold Particle Catalyzed Reduction of Eosin by Sodium Borohydride", "/exp10/", "/exp10/media/10.html"}
			       	]
			       },
			       {"mfs",
			       	[
			       	 {"Introduction to the fluorescence spectroscopy principle", "/exp1/index.html", "/exp1/media/1.html"},
			       	 {"Familiarization with the fluorescence Instrumentation", "/exp2/index.html", "/exp2/media/2_a.html|/exp2/media/2_b.html"},
			       	 {"Familiarization with Excitation and Emission Spectra, Mirror Image Relation and Stokes Shift", "/exp3/index.html", "/exp3/media/3.html"},
			       	 {"Demonstration of Solvent Effects on Fluorescence Spectra of a Fluorophore", "/exp4/index.html", "/exp4/media/4.html"},
			       	 {"Demonstration of pH Effect on Fluorescence Excitation and Emission Spectra of a Fluorophore", "/exp5/index.html", "/exp5/media/5.html"},
			       	 {"Effects of Fluorophore Concentration on Fluorescence Spectra: Inner Filter Effects", "/exp6/index.html", "/exp6/media/6.html"},
			       	 {"Relationship between the Concentration of a Fluorophore and its Fluorescence Intensity: Determination of Unknown Concentration of an Analyte", "/exp7/index.html", "/exp7/media/7.html"},
			       	 {"Determination of Fluorescence Quantum Yield of a Fluorophore", "/exp8/index.html", "/exp8/media/8.html"},
			       	 {"Fluorescence Quenching and Stern-Volmer Plot: Estimation of the Quenching Constant from Stern-Volmer Plot", "/exp9/index.html", "/exp9/media/9.html"},
			       	 {"Effects of Excimer and Exciplex Formations on Fluorescence Emission", "/exp10/index.html", "/exp10/media/10_a.html|/exp10/media/10_b.html"}
			       	]
			       },
			       {"nlp",
			       	[
			       	 {"Word Analysis", "/exp1/index.html", "/exp1/exp1.*.php.*"},
			       	 {"Word Generation", "/exp2/index.html", " /exp2/exp2.php.*"},
			       	 {"Morphology", "/exp3/index.html", ""},
			       	 {"N-Grams", "/exp4/index.html", "/exp4/experiment9.*"},
			       	 {"N-Grams Smoothing", "/exp5/index.html", "/exp5/experiment10.*"},
			       	 {"POS Tagging - Hidden Markov Model", "/exp6/index.html", "/exp6/exp.*4.* "},
			       	 {"POS Tagging - Viterbi Decoding", "/exp7/index.html", "/exp7/exp.*5.*"},
			       	 {"Building POS Tagger", "/exp8/index.html", "/exp8/exp.*7.*"},
			       	 {"Chunking", "/exp9/index.html", "/exp9/exp.*6.*"},
			       	 {"Building Chunker", "/exp10/index.html", "/exp10/exp.*10.*"}
			       	]
			       },
			       {"cl",
			       	[
			       	 {"Forming Sentences - 1", "/exp1/index.html", "/exp1/CL.*1.php"},
			       	 {"Forming Sentences - 2", "/exp2/index.html", "/exp2/CL.*2.php"},
			       	 {"Tokens and Types", "/exp3/index.html", "/exp3/CL.*3.php"},
			       	 {"Heap's Law", "/exp4/index.html", "/exp4/CL.*4.php"},
			       	 {"Dictionary Generation", "/exp5/index.html", "/exp5/CL.*5.php"},
			       	 {"Coarse - grained POS Tagging", "/exp7/index.html", "/exp7/CL.*7.php"},
			       	 {"Fine - grained POS Tagging", "/exp8/index.html", "/exp8/CL.*8.php"},
			       	 {"Chunking", "/exp9/index.html", "/exp9/CL.*9.php"},
			       	 {"Context Free Grammar", "/exp10/index.html", "/exp10/CL.*10.php"}
			       	]
			       },
			       {"sd",
			       	[
			       	 {"Simple Harmonic Oscillator", "/exp1/index.html", "/exp1/exp1.html|/exp1/ve_pendulum.html"},
			       	 {"Free vibration of S.D.O.F system", "/exp1/index.html", "/exp2/undamped_freevib.html|/exp2/dampfree.html|/exp2/ve_freevibbody.html"},
			       	 {"Forced vibration of S.D.O.F system", "/exp3/index.html", "/exp3/undamped_force.html|/exp3/DampedForced.html|/exp3/ve_forcedvibbody.html"},
			       	 {"Impulse Response of S.D.O.F system", "/exp4/index.html", "/exp4/Impulse.html|/exp4/ve_impulse.html"},
			       	 {"Concept of Response Spectrum", "/exp5/index.html", "/exp5/responsespectrum.avi|/exp5/ve_responseSpecturm.html"},
			       	 {"Vibration of M.D.O.F system", "/exp6/index.html", "/exp6/exp5.html|/exp6/ve_mdof.html"},
			       	 {"Behaviour of Rigid Blocks", "/exp7/index.html", "/exp7/dem.htm|/exp7/ve_shakebody.html"},
			       	 {"Torsional Response of Building", "/exp8/index.html", "/exp8/torsion6.html|/exp8/ve_torsion.html"},
			       	 {"Continuous Systems", "/exp9/index.html", "/exp9/Coolingtowers.html|/exp9/ve_.*.html"},
			       	 {"Vibration Control", "/exp10/index.html", "/exp10/vibration-control1.html|/exp10/tld.swf"}
			       	]
			       },
			       {"bmi",
			       	[
			       	 {"ECG signal acquisition under incorrect electrode placement", "/exp1/index.php", "/exp1/index.php.*section=Experiment"},
			       	 {"ECG Feature extraction and analysis", "/exp2/index.php", "/exp2/index.php.*section=Experiment"},
			       	 {"ECG Acquisition and HRV (Heart Rate variability) analysis in time and frequency domain", "/exp3/index.php", "/exp3/index.php.*section=Experiment"},
			       	 {"EEG Acquisition and Frequency components calculation", "/exp4/index.php", "/exp4/index.php.*section=Experiment"},
			       	 {"EEG PSD Calculation", "/exp5/index.php", "/exp5/index.php.*section=Experiment"},
			       	 {"EEG Approximate entropy calculation", "/exp6/index.php", "/exp6/index.php.*section=Experiment"},
			       	 {"EEG Alpha RMS derivation", "/exp7/index.php", "/exp7/index.php.*section=Experiment"},
			       	 {"Electromyography(EMG) Toolbox", "/exp8/index.php", "/exp8/index.php.*section=Experiment"}
			       	]
			       },
			       {"bmsip",
			       	[
			       	 {"Digital Signal Processing Toolkit", "/exp1/index.php", "/exp1/index.php.*section=Experiment"},
			       	 {"Bio-Medical Signal Processing Toolkit", "/exp2/index.php", "/exp2/index.php.*section=Experiment"},
			       	 {"Image Processing Toolkit", "/exp3/index.php", "/exp3/index.php.*section=Experiment"}
			       	]
			       },
			       {"em-iitr",
			       	[
			       	 {"Speed Control of DC motor by varying armature and field resistance", "/exp1/index.php", ""},
			       	 {"Speed control of DC motor by using Ward-Leonard Method of speed control", "/exp2/index.php", ""},
			       	 {"Load Characteristics of DC shunt generator", "/exp3/index.php", ""},
			       	 {"Magnetisation Characteristics of DC shunt generator", "/exp4/index.php", ""},
			       	 {"Determination of the efficiency of a dc motor by loss summation method(Swinburne's test)", "/exp5/index.php", ""},
			       	 {"Speed control of slipring Induction Motor", "/exp6/index.php", ""},
			       	 {"Determination of Transformer equivalent circuit from Open Circuit and Short Circuit Test", "/exp7/index.php", ""}
			       	]
			       },
			       {"sl-iitr",
			       	[
			       	 {"Carry out Fly Leveling using Auto Level", "/exp2/index.php", "/exp2/index.php.*section=Experiment"},
			       	 {"Profile Leveling using Auto Level", "/exp3/index.php", "/exp3/index.php.*section=Experiment"},
			       	 {"Observations of Vertical and Horizontal angles using Total Station", "/exp4/index.php", "/exp4/index.php.*section=Experiment"},
			       	 {"Study of Plane Table and its Accessories", "/exp5/index.php", "/exp5/index.php.*section=Experiment"},
			       	 {"Detail Plotting by Radiation Method", "/exp6/index.php", "/exp6/index.php.*section=Experiment"},
			       	 {"Detail Plotting by Intersection Method", "/exp7/index.php", "/exp7/index.php.*section=Experiment"},
			       	 {"Detail Plotting by Resection Method", "/exp8/index.php", "/exp8/index.php.*section=Experiment"},
			       	 {"Carry out Contouring in the field", "/exp9/index.php", "/exp9/index.php.*section=Experiment"},
			       	 {"Study of Global Positioning System (GPS) and its Accessories", "/exp10/index.php", "/exp10/index.php.*section=Experiment"},
			       	 {"Observations using GPS", "/exp11/index.php", "/exp11/index.php.*section=Experiment"}
			       	]
			       },
			       {"mrmsmtbs",
			       	[
			       	 {"Creep Transient Based on Material Selection (Pt/Mg)", "/exp1.html", ""},
			       	 {"Selection of Obstacle Distance (λ, grain boundary or precipitate)", "/exp2.html", ""},
			       	 {"Selection of Obstacle Density (ρ,number of grains/precipitate) ", "/exp3.html", ""},
			       	 {"Hardness & Modulus", "/modulus.html", ""},
			       	 {"Indent Depth", "/indent.*depth.html", ""},
			       	 {"Plastic Work ", "/plastic.html", ""},
			       	 {"Contact Angle Measurement ", "/Contact.*.html", ""},
			       	 {"Image the Cytoskeleton of Cells Proliferation On Biomaterial Surface.", "/fmbs.html", ""},
			       	 {"Image the Nucleus of Cells Proliferation On Biomaterial Surface. ", "/fmbs2.html", ""},
			       	 {"Ionic Conductivity YSZ Electrolyte Material For solid Oxide Fuel Cell.", "/Ic1.html", ""}
			       	]
			       },
			       {"va-iitk",
			       	[
			       	 {"To become familiar with the astronomical objects visible to naked eye in the night sky using the software Stellarium.", "/.*page=exp1", ""},
			       	 {"To become familiar with the Constellations in the night sky using the software Stellarium.", "/.*page=exp2", ""},
			       	 {"To identify the retrograde motion of Mars with respect to the Background stars.", "/.*page=exp3", ""},
			       	 {"To identify some of the prominent spectral lines in the spectrum of our sun.", "/.*page=exp4", ""},
			       	 {"To get familiar with the spectra of different stars.", "/.*page=exp5", ""},
			       	 {"To extract coordinates of a star assuming a telescope in equatorial mount. You will also learn the concept of sidereal time.", "/.*page=exp6", ""},
			       	 {"To measure astronomical distances using Cepheid variables.", "/.*page=exp7", ""},
			       	 {"To measure the Proper Motion of Barnard's Star.", "/.*page=exp8", ""},
			       	 {"To identify a Circumpolar Star.", "/.*page=exp9", ""},
			       	 {"To determine the distance and age of cluster using Colour Magnitude Diagram.", "/.*page=exp10", ""},
			       	 {"To determine Orbital Inclination of the planet Mars.", "/.*page=exp11", ""},
			       	 {"To measure planetary distances", "/.*page=exp12", ""},
			       	 {"To measure distance to the Moon", "/.*page=exp13", ""},
			       	 {"To determine observer's location by means of the stars", "/.*page=exp14", ""}
			       	]
			       },
			       {"ufls",
			       	[
			       	 {"Ultrafast", "/ultrafast.php", ""},
			       	 {"Measure", "/measure.php", ""},
			       	 {"Confocal", "/confocal.php", ""},
			       	 {"Live", "/live.php", ""},
			       	 {"Optical", "/optical.php", ""},
			       	 {"Thermal", "/thermal.php", ""}
			       	]
			       },
			       {"vlae",
			       	[
			       	 {"Determination of Young's Modulus and Poisson's Ratio", "/str1/object.html", "/str1/ap.html"},
			       	 {"Determination of heat of combustion of aviation fuel", "/prop2/object.html", "/prop2/ap2.html"},
			       	 {"Flow past a airfoil / wing using flow visualization", "/aerod1/object.html", "/aerod1/ap.html"},
			       	 {"Aerodynamics forces and moments on a standard a/c model", "/aerod2/object.html", "/aerod2/ap.html"},
			       	 {"Vibration testing of beams", "/str2/object.html", "/str2/ap.html"},
			       	 {"Study of Full Gas turbine", "/flight1/object.html", "/flight1/ap.html"},
			       	 {"Measurement of Airfoil sectional properties", "/prop3/object.html", "/prop3/ap.html"},
			       	 {"Estimation of cruise and climb performance of aircraft", "/flight2/object.html", "/flight2/ap.html"},
			       	 {"Buckling of columns", "/str3/object.html", "/str3/ap.html"},
			       	 {"Performance and analysis of two stage axial fan", "/prop1/object.html", "/prop1/ap.html"},
			       	 {"Aerodynamic forces and moments on a generic aircraft model", "/aerod3/object.html", "/aerod3/ap.html"},
			       	 {"Estimation of drag polar of a glider ", "/flight3/object.html", "/flight3/ap.html"}
			       	]
			       },
			       {"vcal",
			       	[
			       	 {"Measurement of Laminar Burning Velocity", "/aim1.html", ""},
			       	 {"Characterization of laminar premixed flame using chemiluminescence sensor", "/aim2.html", ""},
			       	 {"Numerical characterization of laminar premixed methane-air flames", "/aim3.html", ""},
			       	 {"Observations on flame height of a laminar jet diffusion flame", "/aim4.html", ""},
			       	 {"Measurement of turbulent inverse diffusion flame height", "/aim5.html", ""},
			       	 {"Visualization of swirling flow and flame in a burner", "/aim6.html", ""},
			       	 {"Flame spread over a solid fuel surface", "/aim7.html", ""},
			       	 {"Characterization of droplet combustion", "/aim8.html", ""},
			       	 {"Measurement of droplet size for an air-blast atomizer", "/aim9.html", ""}
			       	]
			       },
			       {"pev",
			       	[
			       	 {"Interspecific Competition and Coexistence", "/Interspecific_Competition_and_Coexistence/", "/index.php?exp_id=Interspecific_Competition_and_Coexistence"},
			       	 {"Conserving an Endangered Species", "/conservingEndangeredSpecies/", "/index.php?exp_id=conservingEndangeredSpecies"},
			       	 {"Effect of Interspecific Competition on Species Border", "/Interspecific%20Competition%20and%20Geographic%20Distributions/", "/index.php?exp_id=Interspecific%20Competition%20and%20Geographic%20Distributions"},
			       	 {"Metapopulation Dynamics -Levins Model", "/Metapopulation_Dynamics/", "/index.php?exp_id=Metapopulation_Dynamics"},
			       	 {"Parasitoid-Host Dynamics", "/Parasitoid_Host_Dynamics/", "/index.php?exp_id=Parasitoid_Host_Dynamics"},
			       	 {"Spread of a Pest Population - Population Invasion", "/Spread_Pest_Population_invasion/", "/index.php?exp_id=Spread_Pest_Population_invasion"}
			       	]
			       },
			       {"pevii",
			       	[
			       	 {"Optimal Foraging with Minimal Time: A Case of Searching Predators", "/OptimalForAging/", "/index.php?exp_id=OptimalForAging.*"},
			       	 {"Optimal Pollinators", "/OptimalForaging_Pollinators/", "/index.php?exp_id=OptimalForaging_Pollinators.*"},
			       	 {"Optimal Foraging: Sit-and-wait Predators that Maximize Energy", "/Optimal_foraging_Sit_and_wait_predators_that_maximize_energy/", "/index.php?exp_id=Optimal_foraging_Sit_and_wait_predators_that_maximize_energy.*"}
			       	]
			       },
			       {"anthropology",
			       	[
			       	 {"Identification of Prehistoric handaxe", "/Theory_handaxe.html", "/Experiments/finalstone1.swf.*|/Experiments/finalstone2.swf.*|/Experiments/finalstone3.swf.*|/Experiments/finalstone4.swf.*"},
			       	 {"Identification of finger prints patterns", "/Theory_finger.html", "/Simulator_finger.html.*"},
			       	 {"Pottery-Virtual Reconstruction of Shapes", "/Theory_pot.html", "/Experiments/finalpottery1.swf.*|/Experiments/finalpottery2.swf.*|/Experiments/finalpottery3.swf.*|/Experiments/finalpottery4.swf.*"},
			       	 {"Calculation of Indices", "/Theory_indices.html", "/Simulator_indices.html.*"},
			       	 {"Obtain the main line formula", "/obtain_main_line_formula_theory.html", "/obtain_main_line_formula_simulator.html.*"},
			       	 {"Skeleton - Assembling, Identification & labeling", "/Skeleton_Assembling_Identification_labeling_theory.html", "/Experiments/labelling.swf.*|/Experiments/finalskullpuzzl.swf.*"},
			       	 {"Blood Group Techniques", "/blood_group_technique_theory.html", "/blood_group_technique_simulator.html.*"},
			       	 {"Hunting, Fishing, Gathering Tools", "/hunting_fishing_tools_theory.html", "/Experiments/new1.swf.*|/Experiments/fishing/Untitled-1.swf.*"},
			       	 {"Mendel's Law", "/mendels_law_theory.html", "/Experiments/mendel/punnett.swf.*"}
			       	]
			       },
			       {"ergonomics",
			       	[
			       	 {"Static anthropometry, standing heights", "/Theory_static.html", "/Practical%20Experience_static.html.*"},
			       	 {"Arm forward reaches, standing erect and forward bend", "/Theory_arm.html", "/Practical%20Experience_arm.html.*"},
			       	 {"Sitting Antropometry, static heights", "/Theory_sitting.html", "/Practical%20Experience_sitting.html.*"},
			       	 {"Horizontal work surface at around elbow height", "/Theory_4.html", "/Practical%20Experience_4.html.*"},
			       	 {"Effective work platform height, standing", "/Theory_5.html", "/Practical%20Experience_5.html.*"},
			       	 {"Effective vertical work surface", "/Theory_6.html", "/Practical%20Experience_6.html.*"},
			       	 {"Hand dimension", "/Theory_7.html", "/Practical%20Experience_7.html.*"},
			       	 {"Human dimensional consideration for general seating", "/Theory_8.html", "/Practical%20Experience_8.html.*"},
			       	 {"Squatting posture", "/Theory_9.html", "/Practical%20Experience_9.html.*"},
			       	 {"Body movement ranges", "/Theory_10.html", "/Practical%20Experience_10.html.*"}
			       	]
			       },
			       {"vem",
			       	[
			       	 {"Magnetic Field Behaviour in Single Coil", "/Magnetic_Field_Behaviour_in_single_coil.html", "/Magnetic_Field_Behaviour_in_single_coil%28experiment1%29.html.*"},
			       	 {"Magnetic Field Behaviour in Single Coil", "/Magnetic_Field_Behaviour_in_single_coil.html", "/Magnetic_Field_Behaviour_in_single_coil%28experiment2%29.html.*"},
			       	 {"Rotating Magnetic Field Behaviour in two coils", "/Rotating%20Magnetic%20Field%20Behaviour%20in%20two%20coils.html", "/Rotating%20Magnetic%20Field%20Behaviour%20in%20two%20coils%28experiments%29.html.*"},
			       	 {"Rotating Magnetic Field Behaviour in three coils", "/Rotating%20Magnetic%20Field%20Behaviour%20in%20three%20coils.html", "/Rotating_Magnetic_Field_Behaviour_in_three_coils%28experiments%29.html.*"},
			       	 {"The DC Test for Stator Resistance", "/Introduction_DC.html", "/Experiment_DC.html.*"},
			       	 {"No-Load Test", "/Introduction_Noload.html", "/Experiment_Noload.html.*"},
			       	 {"Blocked-Rotor Test", "/Introduction_blockr.html", ""},
			       	 {"Stator Resistance Starter", "/Stator%20Resistance%20Starter%28intro%29.html", "/Stator%20Resistance%20Starter%28experiment%29.html.*"},
			       	 {"Auto Transformer Starting", "/Auto%20Transformer%20Starting%28intro%29.html", "/Auto%20Transformer%20Starting%28experiment%29.html.*"},
			       	 {"Star-Delta Starting", "/Star%20Delta%20Starting%28intro%29.html", "/Star%20Delta%20Starting%28experiment%29.html.*"}
			       	]
			       },
			       {"ve",
			       	[
			       	 {"Business Communication", "/Business%20Communication.html", "/Experiments/business1.html.*|/Experiments/business2.*|/Experiments/business3.html.*|/Experiments/business4.html.*|/Experiments/business5.html.*|/Experiments/business6.html.*"},
			       	 {"Common Errors in English", "/Common%20Error.html", "/Experiments/commerror1.html.*|/Experiments/commerror2.html.*|/Experiments/commerror3.html.*|/Experiments/commerror4.html.*|/Experiments/commerror5.html.*|/Experiments/commerror6.html.*"},
			       	 {"Communication Skills", "/Communication%20Skill.html", "/Experiments/cs1.html.*|/Experiments/cs2.html.*|/Experiments/cs3.html.*|/Experiments/cs4.html.*|/Experiments/cs5.html.*|/Experiments/cs6.html.*"},
			       	 {"Grammar", "/Grammer.html", "/Experiments/adjectives.html.*|/Experiments/indefarticles.html.*|/Experiments/parajumble.html.*|/Experiments/preposition_quiz1.html.*|/Experiments/sentencejumble.html.*|/Experiments/spoterrors.html.*"},
			       	 {"Technical Communication", "/Technical%20Communication.html", "/Experiments/tw1.html.*|/Experiments/tw2.html.*|/Experiments/tw3.html.*|/Experiments/tw4.html.*|/Experiments/tw5.html.*|/Experiments/tw6.html.*"},
			       	 {"Vocabulary", "/Vocabulary.html", "/Experiments/antonym1.html.*|/Experiments/collectivenouns.html.*|/Experiments/compound.html.*|/Experiments/headword.html.*|/Experiments/matchsynonyms.html.*|/Experiments/selectword.html.*|/Experiments/synonym1.html.*|/Experiments/wordjumble2.html.*"},
			       	 {"Reading and Comprehension", "/Reading%20and%20Comprehension.html", "/Experiments/rcread.html.*|/Experiments/RC1.html.*|/Experiments/rcread2.html.*|/Experiments/rc2.html.*|/Experiments/rcread3.html.*|/Experiments/rc3.html.*|/Experiments/rcread4.html.*|/Experiments/RC4.html.*|/Experiments/rcread5.html.*|/Experiments/RC5.html.*|/Experiments/rcread6.html.*|/Experiments/RC6.html.*"},
			       	 {"Listening Skills", "/Listening%20Skills.html", "/Experiments/listen1.mp3.*|/Experiments/listening1.html.*|/Experiments/listen2.mp3.*|/Experiments/listening2.html.*|/Experiments/listen3.mp3.*|/Experiments/listening3.html.*|/Experiments/listen4.mp3.*|/Experiments/listening4.html.*|/Experiments/listen5.mp3.*|/Experiments/listening5.html.*|/Experiments/listen6.mp3.*|/Experiments/listening6.html.*"},
			       	 {"Video Tutorial", "/Video%20Tutorial.html", "/Experiments/rskills.wmv.*|/Virtual%20Labs1%20-%20IIT%20Guwahati.html.*|/Experiments/spokenenglish.wmv.*|/Virtual%20Labs%20-%20IIT%20Guwahati.html.*"}
			       	]
			       },
			       {"ssl",
			       	[
			       	 {"Signals and their properties", "/Signals.*and.*.html", "/Signals.*and.*simulator.*.html"},
			       	 {"System and their property", "/Exp_2_Signals.*.html", "/Exp_2_Signals.*simulator.*.html"},
			       	 {"Fourier analysis of signals", "/Signals_exp3.*.html", "/Signals_exp3.*Simulator.*.html"},
			       	 {"Sampling and signal reconstruction.", "/Sampling.*29.html", "/Sampling.*simulator.*.html"},
			       	 {"Analysis of LTI system response.", "/Signals.*05.*.html", "/Signals.*05.*simulator.*.html"}
			       	]
			       },
			       {"ial",
			       	[
			       	 {"Study hardware and software platforms for DCS", "/Expt1/index.html", ""},
			       	 {"Simulate analog and digital function blocks", "/Expt2/index.html", "/Expt2/AnalogDigital.html.*"},
			       	 {"Study, understand and perform experiments on timers and counters", "/Expt3/index.html", "/Expt3/TimersCounters.html.*"},
			       	 {"Logic implementation for traffic Control Application", "/Expt4/index.html", "/Expt4/TrafficControl.html.*"},
			       	 {"Logic implementation for Bottle Filling Application", "/Expt5/index.html", "/Expt5/BottleFilling.html.*"},
			       	 {"Tune PID controller for heat exchanger using DCS", "/Expt6/index.html", "/Expt6/HeatExchange.html.*"},
			       	 {"FBD for autoclavable laboratory fermentor", "/Expt7/index.html", "/Expt7/FBD.html.*"},
			       	 {"Develop graphical user interface for the fermentor plant", "/Expt8/index.html", ""}
			       	]
			       },
			       {"sl-coep",
			       	[
			       	 {"Characterize the temperature sensor(RTD)", "/Rtd/index.html", "/Rtd/rtd.html.*"},
			       	 {"Simulate the performance of Biosensor", "/Biosensor/index.html", "/Biosensor/biosensor.html.*"},
			       	 {"Measurement of level in a tank using capacitive type level probe", "/Capacitance/index.html", "/Capacitance/capacitance.html.*"},
			       	 {"Characterize of LVDT", "/LinearVariableDifferntialTransformer/index.html", "/LinearVariableDifferntialTransformer/lvdt.html.*"},
			       	 {"Design a Orifice plate for typical application", "/Orifice/index.html", "/Orifice/orifice.html.*"},
			       	 {"Simulate the performance of chemical sensor(PH)", "/PHCalculation/index.html", "/PHCalculation/phc.html.*"},
			       	 {"characterize the strain gauge sensor", "/StrainGuage/index.html", "/StrainGuage/strainguage.html.*"},
			       	 {"Characterize the temperature sensor(Thermocouple)", "/Thermocouple/index.html", "/Thermocouple/thermocouple.html.*"}
			       	]
			       },
			       {"plc",
			       	[
			       	 {"Study hardware and software used in PLC", "/exp1/index.html", ""},
			       	 {"Implementation of Logic Gates", "/exp2/index.html", "/exp2/simulator2.html.*"},
			       	 {"Develop a ladder program for DOL Starter", "/exp3/index.html", "/exp3/simulator3.html.*"},
			       	 {"Develop an application using On-Delay Timer", "/exp4/index.html", "/exp4/simulator4.html.*"},
			       	 {"Develop an application using Off-Delay Timer", "/exp5/index.html", "/exp5/simulator5.html.*"},
			       	 {"Develop an application using Up-Down Counter", "/exp6/index.html", "/exp6/simulator6.html.*"},
			       	 {"Implementation Of PLC Arithmatic Instructions", "/exp7/index.html", "/exp7/simulator7.html.*"},
			       	 {"Study of PID controller instruction for a pilot plant", "/exp8/index.html", "/exp8/simulator8.html.*"}
			       	]
			       },
			       {"em-coep",
			       	[
			       	 {"Load Test On Separately Excited DC Motor", "/Exp1/index.html", "/Exp1/Experiment1.html.*"},
			       	 {"Speed Control of Separately Excited DC Motor", "/Exp2/index.html", "/Exp2/Experiment2.html.*"},
			       	 {"no load test on three phase induction motor", "/Exp3/index.html", "/Exp3/Experiment3.html.*"},
			       	 {"blocked rotor test on three phase induction motor", "/Exp4/index.html", "/Exp4/Experiment4.html.*"},
			       	 {"Open Circuit Test on Three Phase Alternator", "/Exp5/index.html", "/Exp5/Experiment5.html.*"},
			       	 {"Short Circuit Test on Three Phase Alternator", "/Exp6/index.html", "/Exp6/Experiment6.html.*"},
			       	 {"Load Test on Three Phase Alternator", "/Exp7/index.html", "/Exp7/Experiment7.html.*"},
			       	 {"V and Inverted V curves of Synchronous Motor", "/Exp8/index.html", "/Exp8/Experiment8.html.*"}
			       	]
			       },
			       {"va-coep",
			       	[
			       	 {"MI of Connecting Rod", "/MIofConnectingRod/index.html", "/MIofConnectingRod/MIofConnectingRod.html.*"},
			       	 {"Impact test on cantilever Modal analysis", "/ImpactTestCantilever/index.html", "/ImpactTestCantilever/ImpactTestCantilever.html.*"},
			       	 {"Sine Sweep of base excitation of cantilever", "/SineSweepCantilever/index.html", "/SineSweepCantilever/SineSweepCantilever.html.*"},
			       	 {"Forced response of SDOF", "/HarmonicExcitationSDOF/index.html", "/HarmonicExcitationSDOF/HarmonicExcitationSDOF.html.*"},
			       	 {"Free response of SDOF", "/NaturalVibrationSDOF/index.html", "/NaturalVibrationSDOF/NaturalVibrationSDOF.html.*"},
			       	 {"Trifiliar Suspension", "/TrifiliarSuspension/index.html", "/TrifiliarSuspension/TrifiliarSuspension.html.*"},
			       	 {"SDOF System - Arbitrary Excitation", "/ArbitraryExcitation/index.html", "/ArbitraryExcitation/ArbitraryExcitation.html.*"},
			       	 {"Tuned Vibration Absorber", "/TunedVibrationAbsorber/index.html", "/TunedVibrationAbsorber/TunedVibrationAbsorber.html.*"}
			       	]
			       },
			       {"mm-coep",
			       	[
			       	 {"To study pulsed-heating of materials", "/PulsedHeating/index.html", "/PulsedHeating/PulsedHeating.html.*"},
			       	 {"To study erosion mechanism from Lazarenko's model", "/LazerankosErosionModel/index.html", "/LazerankosErosionModel/LazerankosErosionModel.html.*"},
			       	 {"To study various thermal models for EDM", "/DibitontoVsSalonitis/index.html", "/DibitontoVsSalonitis/DibitontoVsSalonitis.html.*"},
			       	 {"To study influence of process parameters on the Wire EDM", "/EDM/index.html", "/EDM/EDM.html.*"},
			       	 {"Laser hardening using NdYAG laser system", "/YAGLaser/index.html", "/YAGLaser/YAGLaser.html.*"},
			       	 {"Laser spot welding using NdYAG laser system", "/LaserSpotWelding/index.html", "/LaserSpotWelding/LaserSpotWelding.html.*"},
			       	 {"Study of Electrochemical machining process", "/ECM/index.html", "/ECM/ECM.html.*"},
			       	 {"Study the effect of process parameters in electrochemical grinding", "/ECG/index.html", "/ECG/ECG.html.*"}
			       	]
			       },
			       {"fab",
			       	[
			       	 {"Computer Controlled Cutting of wooden object", "/exp1/index.html", "/exp1/woodcutting.html.*"},
			       	 {"3D Machining", "/exp2/index.html", "/exp2/roughing.html.*"},
			       	 {"PCB design & fabrication", "/exp3/index.html", "/exp3/pcb.html.*"},
			       	 {"Interface & Application Programming", "/exp4/index.html", "/exp4/interfaceprog.html.*"},
			       	 {"Digital Fabrication of Flexible Circuit board", "/exp5/index.html", "/exp5/flexibleCircuit.htm.*"},
			       	 {"3D scanning", "/exp6/index.html", "/exp6/scanning.html.*"},
			       	 {"Molding and Casting of Polyurethane parts.", "/exp7/index.html", ""},
			       	 {"Digital Fabrication and Project Development", "/exp8/index.html", ""}
			       	]
			       },
			       {"bmsp",
			       	[
			       	 {"To simulate Electrocardiogram Waveform", "/AbnormalECG/index.html", "/NormalECG/index.html.*|/AbnormalECG/AbnormalECG.html.*"},
			       	 {"To simulate Electroencephalogram Signal", "/Electroencephalogram/index.html", "/Electroencephalogram/Electroencephalogram.html.*"},
			       	 {"To simulate Electromyogram Signal", "/ElectromyogramSignal/index.html", "/ElectromyogramSignal/ElectromyogramSignal.html.*"},
			       	 {"To Simulate Defibrillator", "/Defibrillator/index.html", "/Defibrillator/Defibrillator.html.*"},
			       	 {"To simulate Pacemaker", "/PaceMaker/index.html", "/PaceMaker/PaceMaker.html.*|/SynchronousPaceMaker/index.html.*"},
			       	 {"To simulate Haemodialysis Machine", "/HaemoDialysis/index.html", "/HaemoDialysis/HaemoDialysis.html.*"},
			       	 {"To simulate Biopotential Amplifier", "/EMGAmplifier/index.html", "/EMGAmplifier/EMGAmplifier.html.*"},
			       	 {"To simulate ECG Pulse missing detector", "/PulseMissingDetector/index.html", "/PulseMissingDetector/PulseMissingDetector.html.*"},
			       	 {"To simulate 12 Lead Ecg Signals", "/LeadECG/index.html", "/LeadECG/LeadECG.html.*"}
			       	]
			       },
			       {"he",
			       	[
			       	 {"Design and Implementation of Various Arithmetic Circuits", "/Experiment1/index.html", "/Experiment1/index1.html.*"},
			       	 {"Design and Simulate Various Code Converters", "/Experiment2/index.html", "/Experiment2/index1.html.*"},
			       	 {"Design and Simulation of Various Counters and Shift Registers", "/Experiment3/index.html", "/Experiment3/index1.html.*"},
			       	 {"Design and Simulation of Arithmetic Logic Unit", "/Experiment4/index.html", "/Experiment4/index1.html.*"},
			       	 {"Design and Simulation of Decoders, Encoders, Multiplexer and Demultiplexer", "/Experiment5/index.html", "/Experiment5/index1.html.*"},
			       	 {"Design and Simulate Analog to Digital Converter and Digital to Analog Converter", "/Experiment6/index.html", "/Experiment6/index1.html.*"},
			       	 {"Implementation of monostable and astable oscillator using IC 555", "/Experiment7/index.html", "/Experiment7/index1.html.*"}
			       	]
			       },
			       {"ied",
			       	[
			       	 {"INTRODUCTION TO PROGRAMMABLE LOGIC CONTROLLER AND INTRODUCTION TO DIGITAL I/O INTERFACE TO PLC", "/INTRODUCTION.*TO.*PROGRAMMABLE.*LOGIC.*CONTROLLER.*AND.*INTRODUCTION.*TO.*DIGITAL.*INTERFACE.*TO.*PLC/index.html", "/INTRODUCTION.*TO.*PROGRAMMABLE.*LOGIC.*CONTROLLER.*AND.*INTRODUCTION.*TO.*DIGITAL.*INTERFACE.*TO.*PLC/index.html.*"},
			       	 {"INTRODUCTION TO LADDER LOGIC", "/INTRODUCTION.*TO.*LADDER.*LOGIC/index.html", "/INTRODUCTION.*TO.*LADDER.*LOGIC/index.html.*"},
			       	 {"PLC ON-DELAY TIMER INSTRUCTION", "/PLC.*On-Delay.*Timer.*Instruction/index.html", "/PLC.*On-Delay.*Timer.*Instruction/index.html.*"},
			       	 {"PLC OFF-DELAY TIMER INSTRUCTION", "/PLC.*Off-Delay.*Timer.*Instruction/index.html", "/PLC.*Off-Delay.*Timer.*Instruction/index.html.*"},
			       	 {"PLC RETENTIVE TIMER-ON INSTRUCTION", "/PLC.*Retentive.*Timer.*On.*Instruction/index.html", "/PLC.*Retentive.*Timer.*On.*Instruction/index.html.*"},
			       	 {"PLC COUNT-UP INSTRUCTION", "/PLC.*COUNT-UP.*INSTRUCTION/index.html", "/PLC.*20COUNT-UP.*INSTRUCTION/index.html.*"},
			       	 {"PLC COUNT - DOWN INSTRUCTION", "/PLC.*COUNT-DOWN.*INSTRUCTION/index.html", "/PLC.*COUNT-DOWN.*INSTRUCTION/index.html.*"},
			       	 {"Garage Shutter Opening and Closing Using PLC", "/Garage.*Shutter.*Opening.*and.*Closing.*Using.*PLC/index.html", "/Garage.*Shutter.*Opening.*and.*Closing.*Using.*PLC/index.html.*"},
			       	 {"Container Filling Process Using PLC", "/Container.*Filling.*Process.*Using.*PLC/index.html", "/Container.*Filling.*Process.*Using.*PLC/index.html.*"},
			       	 {"Simultaneous output interlock using PLC", "/Simultaneous.*output.*interlock.*using.*PLC/index.html", "/Simultaneous.*output.*interlock.*using.*PLC/index.html.*"},
			       	 {"Maximum Simultaneous Operations Limiter using PLC", "/Maximum.*Simultaneous.*Operations.*Limiter.*using.*PLC/index.html", "/Maximum.*Simultaneous.*Operations.*Limiter.*using.*PLC/index.html.*"},
			       	 {"Motor forward and reverse direction control using PLC", "/Motor.*forward.*and.*reverse.*direction.*control.*using.*PLC/index.html", "/Motor.*forward.*and.*reverse.*direction.*control.*using.*PLC/index.html.*"}
			       	]
			       },
			       {"sa",
			       	[
			       	 {"DCS (Yokogawa CENTUM CS 1000)", "/substationtheory/index.html", ""},
			       	 {"Substation Automation (Theory)", "/DCS/index.html", ""},
			       	 {"Circuit Breaker Status Indication from field input", "/exp1/index.html", ""},
			       	 {"Control of Group Operated Switches (GOS) from workstation", "/exp2/index.html", ""},
			       	 {"Monitoring Feeder parameter from workstation", "/exp3/index.html", ""},
			       	 {"Fault scenario simulation in a feeder", "/exp4/index.html", ""},
			       	 {"Fault scenario simulation in a Transformer /Bus", "/exp5/index.html", ""},
			       	 {"Load Transfer from one Feeder to other during Transformer Maintenance", "/exp6/index.html", ""},
			       	 {"Control Of Bus Voltages Through Onload Tap Changes", "/exp7/index.html", ""},
			       	 {"Development of 11KV/433 volts substation automation scheme using PLC for normal load operation", "/exp8/index.html", ""},
			       	 {"Development of 11KV/433 volts substation automation scheme using PLC for timer ON/OFF load control", "/exp9/index.html", ""},
			       	 {"Development of 11KV/433 volts substation automation scheme using PLC for cyclic ON/OFF load control", "/exp10/index.html", ""},
			       	 {"Autoreclosure And Sectionalizer Operation", "/exp11/index.html", ""}
			       	]
			       },
			       {"fm",
			       	[
			       	 {"Impact of Jet", "/exp1/index.html", ""}
			       	]
			       },
			       {"sm",
			       	[
			       	 {"Mohr's circle", "/exp1/index.html", ""},
			       	 {"Bending Stresses", "/exp2/index.html", ""},
			       	 {"Deflection in Cantilever", "/exp3/index.html", ""},
			       	 {"Deflection in Beam", "/exp4/index.html", ""}
			       	]
			       },
			       {"mm-nitk",
			       	[
			       	 {"Position analysis of Grashof four bar mechanism", "/exp1/index.html", ""},
			       	 {"Velocity analysis of Grashof four bar mechanism", "/exp2/index.html", ""},
			       	 {"Acceleration analysis of Grashof four bar mechanism", "/exp3/index.html", ""},
			       	 {"Position analysis of NonGrashof four bar mechanism", "/exp4/index.html", ""},
			       	 {"Velocity analysis of NonGrashof four bar mechanism", "/exp5/index.html", ""},
			       	 {"Acceleration analysis of NonGrashof four bar mechanism", "/exp6/index.html", ""},
			       	 {"Position analysis of Slider crank mechanism", "/exp7/index.html", ""},
			       	 {"Velocity analysis of Slider crank mechanism", "/exp8/index.html", ""},
			       	 {"Acceleration analysis of Slider crank mechanism", "/exp9/index.html", ""},
			       	 {"Position analysis of Slider crank mechanism with Offset", "/exp10/index.html", ""},
			       	 {"Position analysis of Scotch Yoke Mechanism", "/exp11/index.html", ""},
			       	 {"Velocity analysis of Scotch Yoke Mechanism", "/exp12/index.html", ""},
			       	 {"Acceleration analysis of Scotch Yoke Mechanism", "/exp13/index.html", ""},
			       	 {"Position analysis of Elliptical Trammel", "/exp14/index.html", ""},
			       	 {"Hart Straight Line Mechanism", "/exp15/index.html", ""},
			       	 {"Tchebichev Straight Line Mechanism", "/exp16/index.html", ""}
			       	]
			       },
			       {"mdmv",
			       	[
			       	 {"Free vibration of cantilever beam", "/exp1/index.html", ""},
			       	 {"Free vibration of simply supported beam", "/exp2/index.html", ""},
			       	 {"Free vibration of fixed beam", "/exp3/index.html", ""},
			       	 {"Forced vibration of SDOF system", "/exp4/index.html", ""},
			       	 {"Base Excitation", "/exp5/index.html", ""},
			       	 {"Rotating Unbalance", "/exp6/index.html", ""},
			       	 {"2DOF Forced vibration", "/exp7/index.html", ""},
			       	 {"Dynamic Vibration Absorber", "/exp8/index.html", ""}
			       	]
			       },
			       {"uorepc",
			       	[
			       	 {"Flow Through Pipes", "/exp1/index.html", ""},
			       	 {"Flow Through Fittings", "/exp2/index.html", ""},
			       	 {"Flow through orifice meter", "/exp3/index.html", ""},
			       	 {"Flow through Venturi meter", "/exp4/index.html", ""},
			       	 {"Flow through Packed Bed", "/exp5/index.html", ""},
			       	 {"Flow through Fluidized Bed", "/exp6/index.html", ""},
			       	 {"Reaction kinetic studies in a batch reactor", "/exp7/index.html", ""},
			       	 {"Reaction kinetic studies in a mixed flow reactor", "/exp8/index.html", ""},
			       	 {"Reaction kinetic studies in a plug flow reactor", "/exp9/index.html", ""}
			       	]
			       },
			       {"vssd",
			       	[
			       	 {"Vibration Characteristics of Aluminum Cantilever Beam using Piezoelectric Sensors", "/exp1.html", "/exp1.html.*"},
			       	 {"Identification of High Frequency Modes of Beam in 'Free-Free' Condition using Electro-mechanical Impedance(EMI) Technique", "/exp2.html", "/exp2.html.*"},
			       	 {"Forced Excitation of Steel Beam using Portable Shaker", "/exp3.html", "/exp3.html.*"},
			       	 {"Photogrammetry for Displacement Measurement", "/exp4.html", "/exp4.html.*"},
			       	 {"Modes of Vibrations of Beams under flexure", "/exp5.html", "/exp5.html.*"},
			       	 {"Modes of vibration of Plates under flexure", "/exp6.html", "/exp6.html.*"},
			       	 {"Damage Detection and Qualitative Quantification Using Electro-Mechanical Impedance (EMI) Technique", "/exp7.html", "/exp7.html.*"},
			       	 {"Dynamics of Bandra Worli Sea Link Brigde", "/exp8.html", "/exp8m.*.html.*"},
			       	 {"EXPERIMENT 9", "/exp9.html", "/Train.*Vehicle.html.*|/exp9_files/Tank/Tank.html"}
			       	]
			       },
			       {"qnm",
			       	[
			       	 {"Infinite Capacity Markovian Models", "/experiment1.html", "/Experiment.*201/mm1.html.*|/exp9_files/Tank/Tank.html.*|/exp9_files/Tank/Tank.html"},
			       	 {"Finite Capacity Markovian Models", "/experiment2.html", "/Experiment.*202/Layout.html.*"},
			       	 {"Retrial Markovian Models for Bulk Arrival/Service", "/experiment3.html", "/Experiment.*203/Layout.html.*"},
			       	 {"Infinite Capacity Non Markovian Models", "/experiment4.html", "/Experiment.*204/Exp4a.html.*|/Experiment.*204/Exp4b.html.*"},
			       	 {"Finite Capacity Non Markovian Models", "/experiment5.html", "/Experiment.*205/Exp5a.html.*|/Experiment.*205/Exp5b.html.*"},
			       	 {"Non Markovian Models for Bulk Arrival/Service", "/experiment6.html", "/Experiment.*206/Exp6.html.*"},
			       	 {"Discrete time Experiments", "/experiment7.html", "/Experiment.*207/DT1.*.html.*"},
			       	 {"Open Tandem Queue", "/experiment8.html", "/Experiment.*208/tandem.html.*"},
			       	 {"Tandem Queue with feedback", "/experiment9.html", "/Experiment.*209/model2.html.*"},
			       	 {"Open Queueing Network Experiment", "/experiment10.html", "/Experiment.*2010/opennetwork.html.*"},
			       	 {"Closed Queueing Network Experiment", "/experiment11.html", "/Experiment.*2011/closednetwork.html.*"},
			       	 {"Fluid Queue Experiments", "/experiment12.html", "/Experiment.*2012/12.*.html.*"}
			       	]
			       },
			       {"eem",
			       	[
			       	 {"Measurement of VSWR on a line", "/exp1.html", "/exp1/Application.exe"},
			       	 {"Determination of unknown impedance", "/exp2.html", "/exp2/Application.exe"},
			       	 {"Relationship between guide λg and λ0", "/exp3.html", "/exp3/Application.exe"},
			       	 {"Experiment of Microwave Cavity", "/exp4.html", "/exp4/Application.exe"},
			       	 {"Microwave Coupler", "/exp5.html", "/exp5/Application.exe"},
			       	 {"Radiation Pattern of Horn Antenna", "/exp7.html", "/exp7/Application.exe"},
			       	 {"Antenna Gain measurement", "/exp8.html", "/exp8/Application.exe"}
			       	]
			       },
			       {"msvs",
			       	[
			       	 {"Upsetting", "/upsetting_process.php", "/upsetting_simulation.php.*| /Hydraulic.php.*|/Mechanical.php.*"},
			       	 {"Upsetting", "/upsetting_process.php", "/Upset_Experiment.php.*UPSETTING/Upset_Comp/Case.*"},
			       	 {"Extrusion", "/Extrusion.php", "/Aluminium.php.*|/Titanium.php.*|/Extru_Experiment.php.*.mp4.*"},
			       	 {"Extrusion", "/Extrusion.php", "/Extru_Experiment.php.*/SolidPipe.mp4.*"},
			       	 {"Multi Step", "/MultiStep.php", "/MultiStep_Experiment.php.*/MSF.*.mp4.*"},
			       	 {"Hammer Forging", "/Hammer_Forging.php", "/Hammer_Experiment.php.*/HammerForging.*.mp4.*"},
			       	 {"Rolling Process", "/Rolling_process.php", "/Rolling.php.*|/RingRoll.php.*.mp4.*"},
			       	 {"Thread Rolling", "/ThreadRolling.php", "/ThreadSimulation.php.*.mp4.*"},
			       	 {"Wedge Rolling", "/WedgeRolling.php", "/WedgeSimulation.php.*mp4.*"},
			       	 {"Sheet Metal", "/SheetMetal.php", "/SheetMetal_Experiment.php.*/Bending.*.mp4.*"},
			       	 {"Orbital", "/Orbital.php", "/OrbitalSimulation.php.*.mp4.*"},
			       	 {"Hydroforming", "/Hydroforming.php", "/HydroSimulation.php.*.mp4.*"},
			       	 {"Stretch Forming", "/Stretchforming.php", "/StretchSimulation.php.*.mp4.*"},
			       	 {"Cogging", "/Cogging.php", "/CoggingSimulation.php.*Cogging.*.mp4.*"},
			       	 {"Swaging", "/Swaging.php", "/SwagingSimulation.php.*Swaging.*.mp4.*"},
			       	 {"Reveting", "/Riveting.php", "/RivetingSimulation.php.*Riveting.*.mp4.*"},
			       	 {"Quenching", "/Quenching.php", "/QuenchingSimulation.php.*Quenching.*.mp4.*"},
			       	 {"rct", "/rct.php", "/RCT_Bench.php.*"},
			       	 {"Defects", "/Defects.php", "/DefectSimulation.php.*Defects.*.mp4.*"}
			       	]
			       },
			       {"vp",
			       	[
			       	 {"Experiment- 1", "/exp1.html", "/Sim_dcmotor.html.*|/syn_Sim.html.*|/Sim_DG_Set.html.*|/dynDcmotor.html.*"},
			       	 {"Experiment - 2", "/exp2.html", "/Sim_2/phaseSequence.html.*|/Sim_2/SlipTest/index.html.*"},
			       	 {"Experiment- 3", "/exp3.html", "/sim_3/OCC.html.*|/sim_3/SCC.html.*|/sim_3/comb/X2.html.*|/sim_3/comb/X0.html.*"},
			       	 {"Experiment - 4", "/exp4.html", "/Sim_4/web/Exp4.html.*"},
			       	 {"Experiment - 5", "/exp5.html", "/sim_5/web/Exp5.html.*"},
			       	 {"Experiment - 6", "/exp6.html", "/sim_6/web/exp6.html.*"},
			       	 {"Experiment - 6", "/exp6.html", "/sim_6a.*index.html.*"},
			       	 {"Experiment - 7", "/exp7.html", "/Sim.*sim7.html.*"},
			       	 {"Experiment - 8", "/exp8.html", "/Sim8.*Sim8.html.*"},
			       	 {"Experiment - 9", "/exp9.html", "/Sim9.*index.html.*"}
			       	]
			       },
			       {"vc",
			       	[
			       	 {"Exp-1", "/.*page_id=83", "/.*page_id=108.*"},
			       	 {"Exp-2", "/.*page_id=186", "/.*page_id=195.*"},
			       	 {"Exp-3", "/.*page_id=200", "/.*page_id=209.*"},
			       	 {"Exp-4", "/.*page_id=612", "/.*page_id=885.*"},
			       	 {"Exp-5", "/.*page_id=748", "/.*page_id=899.*"},
			       	 {"Exp-6", "/.*page_id=786", "/.*page_id=911.*"},
			       	 {"Exp-7", "/.*page_id=939", "/.*page_id=968.*"},
			       	 {"Exp-8", "/.*page_id=1028", "/.*page_id=1094.*"},
			       	 {"Exp-9", "/.*page_id=1111", "/.*page_id=1169.*"}
			       	]
			       },
			       {"pe",
			       	[
			       	 {"An Overview of Virtual Proteomics Laboratory", "/exp1/index.html", ""},
			       	 {"Module I: An Overview of Gel-based Proteomics", "/exp2/index.html", ""},
			       	 {"Experiment-1: Gel-based Proteomics to Analyze Human Serum Proteome", "/exp3/index.html", "/exp3/index.html.*"},
			       	 {"Experiment-2: Gel-based proteomics to analyze bacterial proteome", "/exp4/index.html", "/exp4/index.html.*"},
			       	 {"Experiment-3: Gel-based Proteomics to Analyze Plant Proteome", "/exp5/index.html", "/exp5/index.html.*"},
			       	 {"Module II: An Overview of MALDI-TOF MS", "/exp6/index.html", ""},
			       	 {"Experiment-4: In-Gel Digestion of Proteins", "/exp7/index.html", "/exp7/index.html.*"},
			       	 {"Experiment-5: Sample Preparation for the MALDI-TOF MS Analysis", "/exp8/index.html", "/exp8/index.html.*"},
			       	 {"Experiment-6: MALDI-TOF Instrumentation and MS Analysis of Serum Proteins", "/exp9/index.html", "/exp9/index.html.*"},
			       	 {"Experiment-7: MS Data Analysis- Peptide Mass Fingerprinting (PMF)", "/exp10/index.html", "/exp10/index.html.*"},
			       	 {"Experiment-8: Determination of Molecular Weight of Intact Proteins using MALDI-TOF MS", "/exp11/index.html", "/exp11/index.html.*"},
			       	 {"Module III: An Overview of Bioinformatics", "/exp12/index.html", ""},
			       	 {"Experiment-9: Introduction to Bio-informatics Tools: Sequence Alignment", "/exp13/index.html", "/exp13/index.html.*"},
			       	 {"Experiment-10: Homology Modeling", "/exp14/index.html", "/exp14/index.html.*"},
			       	 {"Experiment-11: Protein Function Annotation", "/exp15/index.html", "/exp15/index.html.*"},
			       	 {"Experiment-12: Molecular Docking", "/exp16/index.html", "/exp16/index.html.*"}
			       	]
			       },
			       {"ce",
			       	[
			       	 {"Flow measurement by orificemeter and venturimeter", "/exp1/index.html", "/exp1/ori/ori1.php.*"},
			       	 {"Gas Liquid Absorption", "/exp2/index.html", "/exp2/gla/gla1.php.*"},
			       	 {"Two Phase Flow in Horizontal Tubes", "/exp3/index.html", "/exp3/2pf/2pf1.php.*"},
			       	 {"Hydrodynamics of packed column", "/exp4/index.html", "/exp4/hpc/hpc1.php.*"},
			       	 {"Nature of Flow", "/exp5/index.html", "/exp5/nof/nof1.php.*"},
			       	 {"Adiabatic calorimetry", "/exp6/index.html", "/exp6/calo/cal1.php.*"},
			       	 {"Flow through fittings", "/exp7/index.html", "/exp7/ftf/fm1.php.*"},
			       	 {"Heat transfer in a double pipe heat exchanger", "/exp8/index.html", "/exp8/htl/htl.php.*"},
			       	 {"Vapour Liquid Equilibrium", "/exp9/index.html", "/exp9/vle/vle.php.*"},
			       	 {"Ebulliometric Determination of Vapour Pressure", "/exp10/index.html", "SensorLab/Rtd/index.html.*"}
			       	]
			       },
			       {"ee",
			       	[
			       	 {"I-V characteristics and Fabrication of P-N junction diode", "/exp1/index.html", "/exp1/index.html"},
			       	 {"I-V Characteristics of LED Diode", "/exp12/index.html", "/exp12/index.html"},
			       	 {"Rectifier Circuits", "/exp2/index.html", "/exp2/simulator/SpiceHalfWave/halfwave.html.*|/exp2/simulator/SpiceBridge/bridge.html.*"},
			       	 {"Wave Shaping Circuits using Diodes", "/exp3/index.html", "/exp3/index.html.*"},
			       	 {"BJT characteristics", "/exp4/index.html", "/exp4/index.html"},
			       	 {"BJT biasing and amplifier response", "/exp5/index.html", "/exp5/index.html"},
			       	 {"RC Circuits", "/exp6/index.html", "/exp6/.*/SpiceHighPass.html.*|/exp6/.*/SpiceLowPass.html"},
			       	 {"Wien Bridge Oscillator", "/exp7/index.html", ""},
			       	 {"Non liner circuits using Opamps", "/exp9/index.html", ""},
			       	 {"Active filters", "/exp10/index.html", "/exp10.*/SpiceOpampLPF.html|/exp10.*/SpiceOpampHPF.html|/exp10.*/SpiceOpampWBPF.html"},
			       	 {"Monostable and Astable multivibrators using IC 555", "/exp11/index.html", ""}
			       	]
			       },
			       {"cse04", 
			       	[
			       	 {"Numerical Representation", "/exp1/index.php", "/exp1/lab.html"},
			       	 {"Beauty of Numbers", "/exp2/index.php", "/exp2/lab.html"},
			       	 {"More on Numbers", "/exp3/index.php", "/exp3/lab.html"},
			       	 {"Factorials", "/exp4/index.php", "/exp4/lab.html"},
			       	 {"String Operations", "/exp5/index.php", "/exp5/lab.html"},
			       	 {"Recursion", "/exp6/index.php", "/exp6/lab.html"},
			       	 {"Advanced Arithmatic", "/exp7/index.php", "/exp7/lab.html"},
			       	 {"Searching and sorting", "/exp8/index.php", "/exp8/lab.html"},
			       	 {"Permutaion", "/exp9/index.php", "/exp9/lab.html"},
			       	 {"Sequences", "/exp10/index.php", "/exp10/lab.html"}
			       	]
			       },
			       %% {"cse06",
			       %% 	[
			       %% 	 {"Apriori (An association rule mining algorithm)", "", ""},
			       %% 	 {"Sampling (An association rule mining algorithm)", "", ""},
			       %% 	 {"Partition (An association rule mining algorithm)", "", ""},
			       %% 	 {"Comparison of Association Rule Mining Algorithms", "", ""},
			       %% 	 {"k-Means (A partitioning clustering algorithm)", "", ""},
			       %% 	 {"Agglomerative Clustering (A hierachial clustering algorithm)", "", ""},
			       %% 	 {"DBSCAN (A density-based clustering algorithm)", "", ""},
			       %% 	 {"kNN (A nearest neighbour based classification algorithm)", "", ""},
			       %% 	 {"Decision Tree (Classification algorithm)", "", ""},
			       %% 	 {"Comparison of Classification algorithms", "", ""}
			       %% 	] },
			       %% {"cse07",
			       %% 	[
			       %% 	 {"", "", ""}
			       %% 	]
			       %% },
			       {"cse09",
			       	[
			       	 {"File Management", "/exp1/index.html", ""},
			       	 {"Text Editor", "/exp2/index.html", ""},
			       	 {"File Content", "/exp3/index.html", ""},
			       	 {"File Permissions", "/exp4/index.html", ""},
			       	 {"Archival and Compression", "/exp5/index.html", ""},
			       	 {"Obtaining System Information", "/exp6/index.html", ""},
			       	 {"Pipes and Redirection", "/exp7/index.html", ""},
			       	 {"Searching", "/exp8/index.html", ""},
			       	 {"Basic Networking", "/exp9/index.html", ""}
			       	]
			       },
			       {"cse05",
			       	[
			       	 {"Design Inductive Data", "/html/topics/inductive-data-design/index.html", ""},
			       	 {"Programming with Inductive data", "/html/topics/inductive-data-prog/index.html", ""},
			       	 {"Higher Order functions", "/html/topics/higher-order/index.html", ""},
			       	 {"Arithmatic Interpreter", "/html/topics/arithmetic/index.html", ""},
			       	 {"Environment", "/html/topics/environment/index.html", ""},
			       	 {"Block structured language", "/html/topics/lexical/index.html", ""},
			       	 {"Language with closures", "/html/topics/closure/index.html", ""},
			       	 {"Language with recursive functions", "/html/topics/recursion/index.html", ""},
			       	 {"Language with Objects", "/html/topics/objects/index.html", ""}
			       	]
			       },
			       {"cse13",
			       	[        
			       		 {"Full Custom Design", "/full_custom/index.php", "/full_custom/practice_swing.*"},
			       		 {"Semi Custom Design", "/semi_custom/index.php", "/semi_custom/exp.*"},
			       		 {"Power Reduction Using Gated Clocking", "/Gated_Clocking/index.php", "/Gated_Clocking/exp1.*"},
			       		 {"Ripple Carry Adder", "/ripple_carry_adder/index.php", "/ripple_carry_adder/exp.*"},
			       		 {"Carry Look Ahead Adder", "/carry_look_ahead_adder/index.php", "/carry_look_ahead_adder/practise.*"},
			       		 {"5-3 COMPRESSOR", "/5_3_compressor/index.php", "/5_3_compressor/exp.*"},
			       		 {"Array Multiplier", "/array_multiplier/index.php", "/array_multiplier/exp1.html"},
			       		 {"(8,4) Hamming Coder", "/hamming_coder/index.php", "/hamming_coder/exp1.html"},
			       		 {"Linear Feedback Shift Register", "/lfsr/index.php", "/lfsr/LFSR.html"}
			       	]
			       },
			       {"cse16",
			       	[
			       	 {"Manual speech signal-to-symbol transformation", "/exp01/index.html", "/exp01/index.html.*"},
			       	 {"Speech production mechanism", "/exp02/index.html", "/exp02/index.html.*"},
			       	 {"Nature of speech signal", "/exp03/index.html", "/exp03/index.html.*"},
			       	 {"Basics of DSP", "/exp04/index.html", "/exp04/index.html.*"},
			       	 {"Short-time spectrum analysis of speech", "/exp05/index.html", "/exp05/index.html.*"},
			       	 {"Spectrographic analysis of speech", "/exp06/index.html", "/exp06/index.html.*"},
			       	 {"Cepstral analysis of speech", "/exp07/index.html", "/exp07/index.html.*"},
			       	 {"Linear prediction analysis of speech", "/exp08/index.html", "/exp08/index.html.*"},
			       	 {"Formant synthesis", "/exp09/index.html", "/exp09/index.html.*"},
			       	 {"Analysis-by-synthesis of speech", "/exp10/index.html", "/exp10/index.html.*"}
			       	]
			       },
			       {"cse17",
			       	[
			       	 {"Sensor Modelling", "/sensormodelling/index.php", "/sensormodelling/index.php.*section=Experiment.*"},
			       	 {"Velocity Modelling", "/velocitymodelling/index.php", "/velocitymodelling/index.php.*section=Experiment.*"},
			       	 {"Mapping", "/mapping/index.php", "/mapping/index.php.*section=Experiment.*"},
			       	 {"Localization", "/localization/index.php", "/localization/index.php.*section=Experiment.*"},
			       	 {"Grid-based Navigation", "/gridbasednavigation/index.php", "/gridbasednavigation/index.php.*section=Experiment.*"},
			       	 {"Forward Kinematics", "/forwardkinematics/index.php", "/forwardkinematics/index.php.*section=Experiment.*"},
			       	 {"Scan Matching", "/scanmatching/index.php", "/scanmatching/index.php.*section=Experiment.*"},
			       	 {"RRT-based Path Planning", "/rrtbasedpathplanning/index.php", "/rrtbasedpathplanning/index.php.*section=Experiment.*"},
			       	 {"Exploration", "/exploration/index.php", "/exploration/index.php.*section=Experiment.*"},
			       	 {"Monte Carlo Localization", "/montecarlolocalization/index.php", "/montecarlolocalization/index.php.*section=Experiment.*"}
			       	]
			       },
			       {"cse21",
			       	[
			       	 {"EM Spectrum", "/exp1/index.php", "/exp1/index.php.*section=Experiment.*"},
			       	 {"Black Body Radiation", "/exp2/index.php", "/exp2/index.php.*section=Experiment.*"},
			       	 {"Reflectance of Natural objects in the Electromagnetic spectrum", "/exp3/index.php", "/exp3/index.php.*section=Experiment.*"},
			       	 {"Capturing Area-wide reflectance effect of spatial resolution", "/exp4/index.php", "/exp4/index.php.*section=Experiment.*"},
			       	 {"Data quantization levels and object extraction effects of Radiometric characteristics of the sensor", "/exp5/index.php", "/exp5/index.php.*section=Experiment.*"},
			       	 {"Visual Analysis - Band Combination", "/exp6/index.php", "/exp6/index.php.*section=Experiment.*"},
			       	 {"Band Algebra - Index based Analysis", "/exp7/index.php", "/exp7/index.php.*section=Experiment.*"}
			       	]
			       },
			       {"cse24",
			       	[
			       	 {"Word Analysis", "/exp1/index.html", "/exp1/index.html.*"},
			       	 {"Word Generation", "/exp2/index.html", "/exp2/index.html.*"},
			       	 {"Morphology", "/exp3/index.html", "/exp3/index.html.*"},
			       	 {"N-Grams", "/exp4/index.html", "/exp4/index.html.*"},
			       	 {"N-Grams Smoothing", "/exp5/index.html", "/exp5/index.html.*"},
			       	 {"POS Tagging: Hidden Markov Model", "/exp6/index.html", "/exp6/index.html.*"},
			       	 {"POS Tagging: Viterbi Decoding", "/exp7/index.html", "/exp7/index.html.*"},
			       	 {"Building POS Tagger", "/exp8/index.html", "/exp8/index.html.*"},
			       	 {"Chunking", "/exp9/index.html", "/exp9/index.html.*"},
			       	 {"Building Chunker", "/exp10/index.html", "/exp10/index.html.*"}
			       	]
			       },
			       {"cse30",
			       	[
			       	 {"Design and characterization of common source amplifier with Resistive load (Transfer characteristics)", "/vlab3/myExp2_1_a/index.php", "/vlab3/myExp2_1_a/exp1.html"},
			       	 {"Design and characterization of common source amplifier with Resistive load (Frequency Response)", "/vlab3/myExp2_1_b/index.php", "/vlab3/myExp2_1_b/exp1.html"},
			       	 {"Design and characterization of common source amplifier with Diode connected load (Transfer characteristics)", "/vlab3/myExp2_2_a/index.php", "/vlab3/myExp2_2_a/exp1.html"},
			       	 {"Design and characterization of common source amplifier with Diode connected load  (Frequency Response)", "/vlab3/myExp2_2_b/index.php", "/vlab3/myExp2_2_b/exp1.html"},
			       	 {"Design and characterization of common source amplifier with Current source load  ( Transfer characteristics)", "/vlab3/myExp2_3_a/index.php", "/vlab3/myExp2_3_a/exp1.html"},
			       	 {"Design and characterization of common source amplifier with Current source load (Frequency Response)", "/vlab3/myExp2_3_b/index.php", "/vlab3/myExp2_3_b/exp1.html"},
			       	 {"Design and characterization of common gate amplifier (Transfer characteristics)", "/vlab3/myExp3_a/index.php", "/vlab3/myExp3_a/exp1.html"},
			       	 {"Design and characterization of common gate amplifier (Frequency Response)", "/vlab3/myExp3_b/index.php", "/vlab3/myExp3_b/exp1.html"},
			       	 {"Design and characterization of differential amplifier ( Transfer characteristics)", "/vlab3/myExp5_a/index.php", "/vlab3/myExp5_a/exp1.html"},
			       	 {"Design and characterization of differential amplifier (Frequency Response)", "/vlab3/myExp5_b/index.php", "/vlab3/myExp5_b/exp1.html"},
			       	 {"Design and characterization of differential to single-ended circuit( Transfer characteristics)", "/vlab3/myExp7_a/index.php", "/vlab3/myExp7_a/exp1.html"},
			       	 {"Design and characterization of differential to single-ended circuit (Frequency Response)", "/vlab3/myExp7_b/index.php", "/vlab3/myExp7_b/exp1.html"},
			       	 {"Design and characterization of basic current mirror", "/vlab3/myExp6_basic/index.php", "/vlab3/myExp6_basic/exp1.html"},
			       	 {"Design and characterization of cascode current mirror", "/vlab3/myExp6_cascode/index.php", "/vlab3/myExp6_cascode/exp1.html"},
			       	 {"Design and characterization of voltage mode buffer (Transfer characteristics)", "/vlab3/myExp9_a/index.php", "/vlab3/myExp9_a/exp1.html"},
			       	 {"Design and characterization of voltage mode buffer (Frequency Response)", "/vlab3/myExp9_b/index.php", "/vlab3/myExp9_b/exp1.html"}
			       	]
			       },
			       {"eerc02",
			       	[
			       	 {"Water Content Experiment", "/exp1/index.php", "/exp1/index.php.*section=Experiment.*"},
			       	 {"Unit Weight Experiment", "/exp2/index.php", "/exp2/index.php.*section=Experiment.*"},
			       	 {"Specific Gravity Experiment", "/exp3/index.php", "/exp3/index.php.*section=Experiment.*"},
			       	 {"Grain Size Distribution Experiment", "/exp4/index.php", "/exp4/index.php.*section=Experiment.*"},
			       	 {"Attenberg Limits Experiment", "/exp5/index.php", "/exp5/index.php.*section=Experiment.*"},
			       	 {"Permeability Experiment", "/exp6/index.php", "/exp6/index.php.*section=Experiment.*"},
			       	 {"Compaction Test Experiment", "/exp7/index.php", "/exp7/index.php.*section=Experiment.*"},
			       	 {"Consolidation Test Experiment", "/exp8/index.php", "/exp8/index.php.*section=Experiment.*"},
			       	 {"Direct Shear Test Experiment", "/exp9/index.php", "/exp9/index.php.*section=Experiment.*"},
			       	 {"Triaxial Test Experiment", "/exp10/index.php", "/exp10/index.php.*section=Experiment.*"}
			       	]
			       },
			       {"eerc04",
			       	[
			       	 {"Rijid Joints Experiment", "/exp1/index.php", "/exp1/index.php.*section=Experiment.*"},
			       	 {"Single Span Beams Experiment", "/exp2/index.php", "/exp2/index.php.*section=Experiment.*"},
			       	 {"Continuous Beams Experiment", "/exp3/index.php", "/exp3/index.php.*section=Experiment.*"},
			       	 {"Column Analysis Experiment", "/exp4/index.php", "/exp4/index.php.*section=Experiment.*"},
			       	 {"Portal Frames Experiment", "/exp5/index.php", "/exp5/index.php.*section=Experiment.*"},
			       	 {"Plates Experiment", "/exp6/index.php", "/exp6/index.php.*section=Experiment.*"},
			       	 {"Arches Experiment", "/exp7/index.php", "/exp7/index.php.*section=Experiment.*"},
			       	 {"Trusses Experiment", "/exp8/index.php", "/exp8/index.php.*section=Experiment.*"},
			       	 {"Retaining Walls Experiment", "/exp9/index.php", "/exp9/index.php.*section=Experiment.*"},
			       	 {"Plastic Hinge Experiment", "/exp10/index.php", "/exp10/index.php.*section=Experiment.*"}
			       	]
			       },
			       {"eerc05",
			       	[
			       	 {"Free Swell Index Experiment", "/exp1/index.html", "/exp1/animation/fsi.swf"},
			       	 {"", "", "/exp1/animation/ve_fsi.html"},
			       	 {"California Bearing Ratio Test (CBR Test)", "/exp2/index.html", "/exp2/media/ve_cbr.html"},
			       	 {"pH Test", "/exp3/index.html", "/exp3/media/ve_ph.html"},
			       	 {"Determination of Total Soluble Solids", "/exp4/index.html", "/exp4/media/ve_totalsolid.html"},
			       	 {"Core Cutter Experiment", "/exp5/index.html", "/exp5/media/ve_coreCutter.html"},
			       	 {"Vane Shear Test", "/exp6/index.html", "/exp6/media/shearing.swf"},
			       	 {"", "", "/exp6/media/ve_vanshear.html"},
			       	 {"Total Sulphate Test", "/exp7/index.html", "/exp7/media/ve_vanshear.html"},
			       	 {"Standard Penetration Test", "/exp8/index.html", "/exp8/media/ve_vanshear.html"},
			       	 {"Plate Load Test", "/exp9/index.html", "/exp9/media/ve_plateload.html"}
			       	]
			       },
			       {"cse10",
			       	[
			       	 {"Ripple Carry Adder", "/rca_design.html", "/simulator.jnlp|/coaSimulator.jar|/Simulator.jar|/win.jnlp"},
			       	 {"Carry-look-ahead adder", "/cla_design.html", "/simulator.jnlp|/coaSimulator.jar|/Simulator.jar|/win.jnlp"},
			       	 {"Registers and Counters", "/reg_cnt_design.html", "/simulator.jnlp|/coaSimulator.jar|/Simulator.jar|/win.jnlp"},
			       	 {"Wallace Tree Adder", "/wta.html", "/coaSimulator.jar|/simulator.jnlp|/Simulator.jar|/win.jnlp"},
			       	 {"Combinational Multipliers", "/cmult.html", "/coaSimulator.jar|/simulator.jnlp|/Simulator.jar|/win.jnlp"},
			       	 {"Booth's Multiplier", "/booth.html", "/coaSimulator.jar|/simulator.jnlp|/Simulator.jar|/win.jnlp"},
			       	 {"Arithmetic Logic Unit", "/alu.html", "/coaSimulator.jar|/simulator.jnlp|/Simulator.jar|/win.jnlp"},
			       	 {"Memory Design", "/memory.html", "/coaSimulator.jar|/simulator.jnlp|/Simulator.jar|/win.jnlp"},
			       	 {"Associative cache Design", "/ac.html", "/coaSimulator.jar|/simulator.jnlp|/Simulator.jar|/win.jnlp"},
			       	 {"Direct Mapped cache Design", "/dmc.html", "/coaSimulator.jar|/simulator.jnlp|/Simulator.jar|/win.jnlp"},
			       	 {"CPU Design", "/comp.html", "/coaSimulator.jar|/simulator.jnlp|/Simulator.jar|/win.jnlp"}
			       	]
			       },
			       {"cse23",
			       	[
			       	 {"Forming Sentences - 1", "/exp1/index.html", "/exp1/CLExperiment1.php"},
			       	 {"Forming Sentences - 2", "/exp2/index.html", "/exp2/CLExperiment2.php"},
			       	 {"Tokens and Types", "/exp3/index.html", "/exp3/CLExperiment3.php"},
			       	 {"Heap's Law", "/exp4/index.html", "/exp4/CLExperiment4.php"},
			       	 {"Dictionary Generation", "/exp5/index.html", "/exp5/CLExperiment7.php"},
			       	 {"Coarse-grained POS Tagging", "/exp7/index.html", "/exp7/CLExperiment5.php"},
			       	 {"Fine-grained POS Tagging", "/exp8/index.html", "/exp8/CLExperiment5.php"},
			       	 {"Chunking", "/exp9/index.html", "/exp9/experiment6.php"},
			       	 {"Context Free Grammar", "/exp10/index.html", "/exp10/CLExperiment10.php"}
			       	]
			       },
			       %% {"civil13",
			       %% 	[
			       %% 	 {"", "", ""}
			       %% 	]
			       %% },
			       {"ccnsb01",
			       	[
			       	 {"Introduction to the fluorescence spectroscopy principle", "/exp1/index.html", "/exp1/media/1.html"},
			       	 {"Familiarization with the fluorescence instrumentation", "/exp2/index.html", "/exp2/media/*.html.*|/exp2/media/*.html.*"},
			       	 {"Familiarization with excitation and emission spectra, Mirror Image relation and Stokes Shift", "/exp3/index.html", "/exp3/media/3.html"},
			       	 {"Demonstration of solvent effects on fluorescence spectra", "/exp4/index.html", "/exp4/media/4.html"},
			       	 {"Demonstration of pH effects on fluorescence spectra", "/exp5/index.html", "/exp5/media/5.html"},
			       	 {"Effects of concentration (optical density) of a fluorophore on emission spectra", "/exp6/index.html", "/exp6/media/6.html"},
			       	 {"Determination of unknown concentration of an analyte in solution", "/exp7/index.html", "/exp7/media/7.html"},
			       	 {"Determination of fluorescence quantum yield of a fluorophore", "/exp8/index.html", "/exp8/media/8.html"},
			       	 {"Fluorescence Quenching and Stern-Volmer plot: Estimation of the quenching constant from Stern-Volmer plot", "/exp9/index.html", "/exp9/media/9.html"},
			       	 {"Effects of excimer and exciplex formations on fluorescence emission spectra", "/exp10/index.html", "/exp10/media/*.html.*|/exp10/media/*.html.*"}
			       	]
			       },
			       {"ccnsb02",
			       	[
			       	 {"Preparation of Sols", "/exp1/index.html", "/exp1/sol.html"},
			       	 {"Preparation of Gels", "/exp2/index.html", "/exp2/gel_form.html"},
			       	 {"Preparation of Association Colloid - Micelles and Cleansing Actions of Soaps and Detergents", "/exp3/index.html", "/exp3/clean.html"},
			       	 {"Surface Tension and its Modification", "/exp4/index.html", "/exp4/surface.html"},
			       	 {"Demonstration of Tyndall Effect", "/exp5/index.html", "/exp5/Tyndal.html"},
			       	 {"Gel Electrophoresis", "/exp7/index.html", "/exp7/Gel_elec.html"},
			       	 {"Demonstration of Surface Effects on Chemical Properties of Finely Divided Particles", "/exp8/index.html", "/exp8/surface.html"},
			       	 {"Design Method of Dynamic Light Scattering for Particle Size Measurements", "/exp13/index.html", "/exp13/experiment_zp.html"},
			       	 {"Determination of Critical Micelle Concentration(CMC)", "/exp14/index.html", "/exp14/cmc.html"},
			       	 {"Kinetic Study of Colloidal Gold Particle Formation and Gold Particle Catalyzed Reduction of Eosin by Sodium Borohydride", "/exp15/index.html", "/exp15/lab9.html"}
			       	]
			       },
			       {"ccnsb03",
			       	[
			       	 {"Familiarization with the UV-Visible Absorption Spectroscopy:", "/exp1/index.html", "/exp1/media/1.html"},
			       	 {"Solvent effects on absorption spectra", "/exp2/index.html", "/exp2/media/2.html"},
			       	 {"Effects of sample path length", "/exp3/", "/exp3/media/3.html"},
			       	 {"Effects of sample concentration", "/exp4/", "/exp4/media/4.html"},
			       	 {"Determination of molar absorptivity", "/exp5/index.html", "/exp5/media/5.html"},
			       	 {"Verification of Beer-Lambert Law", "/exp6/", "/exp6/media/6.html"},
			       	 {"Determination of unknown concentration of a light absorbing analyte", "/exp7/", "/exp7/media/7.html"},
			       	 {"Simultaneous estimation method for multicomponent samples: Principle of additivity of absorbance", "/exp8/", "/exp8/media/8.html"},
			       	 {"pH effects on absorption spectra: pKa determination by spectrophotometric method", "/exp9/", "/exp9/media/9.html"},
			       	 {"Study of kinetics of a reaction by using spectrophotometric method", "/exp10/", "/exp10/media/10.html"}
			       	]
			       },
			       {"ccnsb04",
			       	[
			       	 {"Geometry Optimization of Molecules", "/exp1/index.php", "/exp1/nr.html|/exp1/sd.html"},
			       	 {"UV-Visible Spectroscopy of Conjugated Molecules", "/exp2/index.php", "/exp2/experiment/"},
			       	 {"Vib-rotational Spectroscopy of Hydrogen Chloride", "/exp3/index.php", "/exp3/experiment/index.php"},
			       	 {"Geometry Optimization using ab initio quantum calcuations", "/exp4/index.php", "/exp4/experiment/index.php"},
			       	 {"Calculation of Vibrational Frequency of Molecules and Visualization of Normal Modes", "/exp5/index.php", "/exp5/experiment/index.php"},
			       	 {"Eigen systems: Geometrical Intepretation", "/exp7/index.php", "/exp7/experiment/index.php"},
			       	 {"Huckel Molecular Orbital Theory", "/exp8/index.php", "/exp8/experiment/index.php"},
			       	 {"Conformational Analysis of 1,2-dichloroethane", "/exp9/index.php", "/exp9/experiment/index.php"},
			       	 {"Transition State Calculation for a SN2 reaction", "/exp10/index.php", "/exp10/experiment/index.php"}
			       	]
			       },
			       {"ccnsb05",
			       	[
			       	 {"determine the specific rotation of a sugar using a polarimeter.", "/exp1/index.html", "/exp1/swf.html"},
			       	 {"understand the effect of chiral substances on plane polarized light as a function of wavelength.", "/exp2/index.html", "/exp2/emanim_ord_refrac.html|/exp2/part2_cd/emanim_cd_refrac.html"},
			       	 {"study the Optical Rotatory Dispersion (ORD) of some chiral substances.", "/exp3/index.html", "/exp3/jmol/.*"},
			       	 {"study the Circular Dichroism of some substances with chiral chromophores.", "/exp4/index.html", "/exp4/exp/.*"},
			       	 {"Study the operational details of a CD spectrometer.", "/exp5/index.html", "/exp5/swf.html"},
			       	 {"Study the effect of Secondary Structure elements on CD spectrum of proteins.", "/exp6/index.html", "/exp6/swf.html"},
			       	 {"deconvolute the CD spectrum of a given protein solution and classify it in terms of its secondary structure elements.", "/exp7/index.html", "/exp7/swf.html"},
			       	 {"study the thermal stability of proteins.", "/exp8/index.html", "/exp8/experiment/index.html"},
			       	 {"study the effect of chemical denaturants on protein stability.", "/exp9/index.html", "/exp9/experiment/index.html"},
			       	 {"study the comparison between protein unfolding and protein aggregation in the presence of chemical denaturing agents.", "/exp10/index.html", "/exp10/experiment/index.html"}
			       	]
			       },
			       {"ccnsb07",
			       	[
			       	 {"Internuclear forces in a diatomic molecule: Optical and magnetic tweezer experiments", "/exp1/index.html", "/latest_project/bin/magnet1.html|/latest_project/bin/magnet.html"},
			       	 {"Molecular forces in a triatomic molecule: A magnetic tweezer experiment", "/exp2/index.html", "/latest_project/bin/magnet1.html"},
			       	 {"Dihedral forces in a quad-atomic molecule: A magnetic tweezer experiment", "/exp3/index.html", "/latest_project/bin/magnet.html"},
			       	 {"Interatomic van der Waals forces", "/exp4/index.html", "/suraj/Suraj/bin/Electrostatic.html"},
			       	 {"van der Waals forces between molecules", "/exp5/index.html", "/suraj/Suraj/bin/Hexane_Vanderwall.html"},
			       	 {"Interatomic electrostatic forces", "/exp6/index.html", "/suraj/Suraj/bin/Electrostatic.html"},
			       	 {"Electrostatic forces between molecules", "/exp7/index.html", "/suraj/Suraj/bin/Electrostatic_Hexane.html"},
			       	 {"Many-body forces in a polyatomic molecule", "/exp8/index.html", "/suraj/Suraj/bin/1.html"},
			       	 {"Solvent viscous forces on a polyatomic molecule", "/exp9/index.html", "/suraj/Suraj/bin/ViscosEnvironment.html"},
			       	 {"Molecular seperation using interatomic forces: Column chromatography", "/exp10/index.html", "/suraj/Suraj/bin/oilDrop.html"},
			       	 {"Radiation forces on a dielectric particle", "/exp11/index.html", "/suraj/Suraj/bin/Laser.html"}
			       	]
			       },
			       %% {"mech01",
			       %% 	[
			       %% 	 {" Conduction analysis of Single Material Slab", "", ""},
			       %% 	 {"    Conduction analysis of Single Material Sphere", "", ""},
			       %% 	 {"    Conduction analysis of Single Material Cylinder", "", ""},
			       %% 	 {"    Conduction analysis of Double Material Slab", "", ""},
			       %% 	 {"    Conduction analysis of Double Material Sphere", "", ""},
			       %% 	 {"    Conduction analysis of Double Material Cylinder", "", ""},
			       %% 	 {"    To determine the overall heat transfer coefficient (U) in the parallel flow heat exchanger.", "", ""},
			       %% 	 {"    To determine the overall heat transfer coefficient (U) in the counter flow heat exchanger.", "", ""},
			       %% 	 {"    To investigate the Lambert’s distance law", "", ""},
			       %% 	 {"    To investigate the Lambert’s direction law (cosine law) ", "", ""}
			       %% 	]
			       %% },
			       {"eee06",
				[
				 {"study the Synchronization of alternator with infinite bus bar.", "/build/Dreamweaver/exp1.html", "/build/Dreamweaver/Sim_dcmotor.html|/build/Dreamweaver/syn_Sim.html|/build/Dreamweaver/Sim_DG_Set.html|/build/Dreamweaver/dynDcmotor.html"},
				 {"determine the direct axis reactance (Xd) and quadrature axis reactance (Xq) of synchronous machine.", "/build/Dreamweaver/exp2.html", "/build/Dreamweaver/Sim_2/phaseSequence.html|/build/Dreamweaver/Sim_2/SlipTest/index.html"},
				 {"determine positive sequence, negative sequence and zero sequence reactances of an alternator.", "/build/Dreamweaver/exp3.html", "/build/Dreamweaver/sim_3/OCC.html|/build/Dreamweaver/sim_3/SCC.html|/build/Dreamweaver/sim_3/comb/X2.html|/build/Dreamweaver/sim_3/comb/X0.html"},
				 {"measure the dielectric Strength of transformer oil.", "/build/Dreamweaver/exp4.html", "/build/Dreamweaver/Sim_4/web/Exp4.html"},
				 {"Study the effect of different shape of electrodes on dielectric (air) breakdown.", "/build/Dreamweaver/exp5.html", "/build/Dreamweaver/sim_5/web/Exp5.html"},
				 {"Study the gas actuated Buchholz relay for oil filled transformer.", "/build/Dreamweaver/exp6.html", "/build/Dreamweaver/sim_6/web/exp6.html|/build/Dreamweaver/sim_6a/web/index.html"},
				 {"Study the over-current relay and the effect of PSM and TSM.", "/build/Dreamweaver/exp7.html", "/build/Dreamweaver/Sim%207/web/sim7.html"},
				 {"determine the sub-transient (xd’’), transient (xd’) and steady state reactance (xd) of a synchronous machine.", "/build/Dreamweaver/exp8.html", "/build/Dreamweaver/Sim8/web/Sim8.html"},
				 {"Study the Ferranti Effect of a transmission line/cable.", "/build/Dreamweaver/exp9.html", "/build/Dreamweaver/Sim9/web/index.html"}
				]
			       }
			      ]
       ).


				 
-define(Base2_lab_id_exp_info_list, ?Lab_id_exp_info_list).

-define(Aws_lab_id_exp_info_list, ?Lab_id_exp_info_list).

-define(Base2_data_folder, "base2-data").

-define(Base2_process_folder, "base2-process").

-define(Aws_data_folder, "aws-data").

-define(Aws_process_folder, "aws-process").

-define(Output_folder, "/var/www/html/analytics").

-define(Bot_regular_expression, "bot|Anonymouse.org|nagios").

-define(Non_visit_extension_list, [
				   ".class",
				   ".css",
				   ".gif",
				   ".ico",
				   ".jar",
				   ".jpeg",
				   ".jpg",
				   ".js", 
				   ".mp3",
				   ".pdf",
				   ".png",
				   ".svg",
				   ".swf",
				   ".txt",
				   ".wav"
				  ]).

-define(Lab_total_file_name, "lab_total.txt").

-define(All_total_file_name, "all_total.txt").


%%% Internal records and variables.  Ideally there should be no need
%%% for a person to change this.
-record(file_lines, {name, total_lines=0, processed_lines=0, new_lines=0}).

-define(Line_count_file, "line_count.txt").

-define(Lab_stats_file, "lab-stats.txt").

-define(Bot_remove_temp_file, "bot_remove_temp.txt").

-define(Non_http_ok_remove_temp_file, "non_http_ok_remove_temp.txt").

-define(Non_visit_remove_temp_file, "non_visit_remove_temp.txt").

-record(lab_stats, {name, month, year, hits=0, visits=0, usage=0, exp_data=[]}).

-record(exp_data, {name, exp_visit=0, sim_visit=0, usage=0}).


%%% This function intializes for given data and process folders
initialize(Data_folder, Process_folder) ->
    %%Ensure that Data_folder exists
    Command_data_1=lists:flatten(io_lib:format("mkdir -p ~s", [Data_folder])),
    os:cmd(Command_data_1),

    %%Ensure that Process_folder exists and is empty,
    Command_process_1=lists:flatten(io_lib:format("rm -rf ~s; mkdir ~s", [Process_folder, Process_folder])),
    os:cmd(Command_process_1),

    %%Ensure that ?Line_count_file exists in Data folder
    Command_data_2=lists:flatten(io_lib:format("touch ~s/~s", [Data_folder, ?Line_count_file])),
    os:cmd(Command_data_2),

    %%Ensure that ?Lab_stats_file exists in Data folder
    Command_data_3=lists:flatten(io_lib:format("touch ~s/~s", [Data_folder, ?Lab_stats_file])),
    os:cmd(Command_data_3),

    ok.



%%% This function takes folder name as argument and returns list of
%%% all files in the folder after removing "." and ".."
read_all_file_names(Folder1) ->
    {ok, File_names} = file:list_dir(Folder1),
    %% ?TRACE("~s: File_names for folder ~p are ~p~n", ["read_all_file_names/1", Folder1, File_names]),
    File_names.


%%% This function takes two lists of strings.  From first list it
%%% removes all strings which do not begin with strings mentioned in
%%% second list.
%%%
%%% The main purpose of this function is to filter file name list.
%%% The second list would contain list of log files that are relevant.
%%% Thus the function would return only the relevant file names at the
%%% end.
positive_filter(File_list, Positive_list) ->
    positive_filter_helper(File_list, Positive_list, []).


%%% Helper for positive_filter/2 function.
positive_filter_helper(_, [], Result) -> Result;
positive_filter_helper(File_list, Positive_list, Result) ->
    Current_filter=hd(Positive_list),
    {Pass, Fail} = lists:partition(fun(File_name) ->
					   string:str(File_name, Current_filter) =:= 1
				   end,
				   File_list),
    positive_filter_helper(Fail, tl(Positive_list), Result ++ Pass).



%%% This function takes two lists of strings.  From first list it
%%% keeps only strings which begin with strings mentioned in second
%%% list.
%%%
%%% The main purpose of this function is to filter file name list.
%%% The second list would contain list of log files that are unusable.
%%% Thus the function would return only the usable file names at the
%%% end.
negative_filter(File_list, Negative_list) ->
    negative_filter_helper(File_list, Negative_list).


%%% Helper for negative_filter/2 function.
negative_filter_helper(Result, []) -> Result;
negative_filter_helper(File_list, Negative_list) ->
    Current_filter=hd(Negative_list),
    {_, Pass} = lists:partition(fun(File_name) ->
					   string:str(File_name, Current_filter) =:= 1
				   end,
				   File_list),
    negative_filter_helper(Pass, tl(Negative_list)).



%%% Read list of file_lines records from line count file
read_line_count(Count_file_path) ->
    {ok, Line_count_1} = file:consult(Count_file_path),

    _Test1=#file_lines{name="base2-http-logs/deploy.virtual-labs.ac.in-access_log", total_lines=1000},
    %[Test1],

    Line_count_1.


%%% Go through list of given files present in given folder and
%%% get number of lines in file_lines records
get_line_count(_, []) -> [];
get_line_count(Base_folder, File_list) ->
    %%Prepare wc -l filename command to get number of lines in each file
    File_path1=lists:map(fun(Name1) -> Base_folder ++ "/" ++ Name1 end, File_list),
    File_paths=string:join(File_path1, " "),
    Command1=lists:flatten(io_lib:format("wc -l ~s", [File_paths])),

    %% Execute wc -l command to get result
    Output1=os:cmd(Command1),
    %% ?TRACE("~s: Command1 and Output1 are ~p and ~n~p~n", ["get_line_count/2", Command1, Output1]),

    %% Process result and convert it into list of file_lines records
    Line_count1=string:tokens(Output1, "\n"),
    Line_count2=lists:map(fun(Line1) -> string:tokens(Line1, " ") end, Line_count1),
    Line_count3=lists:map(fun([Line_count, File_path]) -> 
				  #file_lines{name=File_path, total_lines=list_to_integer(Line_count)}
			  end,
			  Line_count2),

    %% wc -l puts a total line at end, if there is more than one file
    %% Remove count with name total, if present
    Line_count4=lists:filter(fun(File_lines1) ->
				     File_lines1#file_lines.name=/="total"
			     end,
			     Line_count3),
    Line_count4.


%%% This function takes two lists of file_lines records
%%%   1. Total list
%%%   2. Processed list
%%% and returns file_lines records with total - processed = new_lines for each file.  
%%% If a file was never processed before its processed_lines value is treated as 0.
compare_count(Total_list, Process_list) ->
    compare_count_helper(Total_list, Process_list, []).


%%% Helper for compare_count/2 function
compare_count_helper([], _, Result) -> Result;
compare_count_helper(Total_list, Process_list, Result) ->
    Current_file=hd(Total_list),
    Current_file_name=Current_file#file_lines.name,
    Current_file_total=Current_file#file_lines.total_lines,
    case lists:keyfind(Current_file_name, 2, Process_list) of
	%%If file was never processed before, processed_lines is 0
	false -> 
	    Updated_current_file=Current_file#file_lines{processed_lines=0, new_lines=Current_file_total},
	    compare_count_helper(tl(Total_list), Process_list, [Updated_current_file | Result]);
	Process_element ->
	    Processed_count=Process_element#file_lines.total_lines,
	    Updated_current_file=Current_file#file_lines{processed_lines=Processed_count, new_lines=Current_file_total-Processed_count},
	    compare_count_helper(tl(Total_list), Process_list, [Updated_current_file | Result])
    end.    


%%% This function takes folder name and list of file_lines record It
%%% then copies last new_lines for each file in list to the given
%%% folder Finally it returns only the records for which at least one
%%% line was copied
copy_lines(Process_folder, File_line_list1) ->
    File_line_list2=lists:filter(fun(File1) ->
		      New_lines=File1#file_lines.new_lines,
		      if 
			   New_lines > 0 ->
			      File_name=filename:basename(File1#file_lines.name),
			      Command=lists:flatten(io_lib:format("tail -~p ~s > ~s", [New_lines, File1#file_lines.name, Process_folder ++ "/" ++ File_name])),
			      os:cmd(Command),
			      true;
			  true ->
			      %% ?TRACE("~s: Nothing changed in file ~p since last time ~n", ["copy_lines/2", File1#file_lines.name]),
			      false
		      end
	      end,
	      File_line_list1),
    File_line_list2.


%%% This function takes name of file and two lists of file_lines
%%% records.  The first list is initial count read from the same file
%%% on total_lines that were processed earlier.  The second list is
%%% current total_lines, new_lines, etc.
%%%  
%%% Note that we are not simply overwriting older data with new data
%%% so that if a log file was present earlier, but is no longer
%%% present, we do not loose its processed_lines information.
update_line_count(File1, Read_count1, Compare_count1) ->
    update_line_count_helper(File1, Read_count1, Compare_count1, []).


%%% Helper for update_line_count/3 function
%%%
%% When all read_counts and compare_counts have been processed
%% write the result to File
update_line_count_helper(File1, [], [], Result) ->
    %%Write information in Erlang term format so that we can read it
    %%with file:consult() easily
    Data_lines=lists:map(fun(File_line1) -> io_lib:format("~p.~n", [File_line1]) end, Result),
    file:write_file(File1, Data_lines);

%%When all compare_counts are processed, add all the remaining
%%read_counts to result and loop again
update_line_count_helper(File1, Read_count1, [], Result) ->
    update_line_count_helper(File1, [], [], Result ++ Read_count1);

%%Loop through various compare_counts till it is empty
%%Remove corresponding counts from read_count before looping
update_line_count_helper(File1, Read_count1, Compare_count1, Result) ->
    Current_file=hd(Compare_count1),
    Current_file_name=Current_file#file_lines.name,
    case lists:keytake(Current_file_name, 2, Read_count1) of
	{value, _, Read_count2} ->
	    update_line_count_helper(File1, Read_count2, tl(Compare_count1), [Current_file | Result]);
	false ->
	    update_line_count_helper(File1, Read_count1, tl(Compare_count1), [Current_file | Result])
    end.





%%% This function takes a process folder and list of file_lines.  It
%%% then removes all bot related lines from all the given files from
%%% process folder.
remove_bot(Process_folder, File_list1) ->
    lists:map(fun(File1) ->
		      remove_bot_from_file(Process_folder, filename:basename(File1#file_lines.name))
	      end,
	      File_list1).

%%% This function takes a folder-name and filename.  It then removes
%%% all bot related lines from given file.  Bot related lines are
%%% lines where browser indentification contains
%%% ?Bot_regular_expression.  The removal creates a temporary file
%%% named ?Bot_remove_temp_file in the process folder for removal
%%% process.
remove_bot_from_file(Process_folder, File1) ->
    {ok, Input_file1} = file:open(Process_folder ++ "/" ++ File1, [read]),
    {ok, Output_file1} = file:open(Process_folder ++ "/" ++ ?Bot_remove_temp_file, [write]),
    RE1=?Bot_regular_expression,
    {ok, MP1} = re:compile(RE1),
    Count=remove_bot_from_file_helper(Process_folder, File1, Input_file1, Output_file1, MP1, 0),
    file:close(Input_file1),
    file:close(Output_file1),
    Command1=lists:flatten(io_lib:format("mv -f ~s/~s ~s/~s", 
					 [Process_folder,
					  ?Bot_remove_temp_file,
					  Process_folder,
					  File1])),
    os:cmd(Command1),
    {File1, Count}.

remove_bot_from_file_helper(Process_folder, File1, Input_file1, Output_file1, MP1, Count) ->
    case file:read_line(Input_file1) of 
	eof -> Count;
	{ok, Data} ->
	    Tokens=string:tokens(Data, "\""),

	    %% Here we have assumed combined log format, as only in
	    %% combined log format tokenizing by " will create 6th
	    %% token with browser identification
	    if 
	    	length(Tokens) < 6 ->
	    	    io:format("Troublesome line with not enough tokens is ~n~p~nIgnoring line as if it is bot related.~n", [Data]),
		    remove_bot_from_file_helper(Process_folder, File1, Input_file1, Output_file1, MP1, Count+1);
	    	true ->

		    Browser=lists:nth(6, Tokens),
		    case re:run(Browser, MP1) of
			{match, _} ->
			    remove_bot_from_file_helper(Process_folder, File1, Input_file1, Output_file1, MP1, Count+1);
			nomatch ->
			    file:write(Output_file1, Data),
			    remove_bot_from_file_helper(Process_folder, File1, Input_file1, Output_file1, MP1, Count)
		    end
	    end
    end.



%%% This function takes a process folder and list of file_lines.  It
%%% then removes all log lines where HTTP response code is not 2**.
%%% This is done for all the given files from process folder.
remove_non_http_ok(Process_folder, File_list1) ->
    lists:map(fun(File1) ->
		      remove_non_http_ok_from_file(Process_folder, filename:basename(File1#file_lines.name))
	      end,
	      File_list1).


%%% This function takes a folder-name and filename.  It then removes
%%% all log lines from given file where HTTP response code is not of
%%% 2** form.  The removal creates a temporary file named
%%% ?Non_http_ok_remove_temp_file in the process folder for removal process.
remove_non_http_ok_from_file(Process_folder, File1) ->
    {ok, Input_file1} = file:open(Process_folder ++ "/" ++ File1, [read]),
    {ok, Output_file1} = file:open(Process_folder ++ "/" ++ ?Non_http_ok_remove_temp_file, [write]),
    Count=remove_non_http_ok_from_file_helper(Process_folder, File1, Input_file1, Output_file1, 0),
    file:close(Input_file1),
    file:close(Output_file1),
    Command1=lists:flatten(io_lib:format("mv -f ~s/~s ~s/~s", 
					 [Process_folder,
					  ?Non_http_ok_remove_temp_file,
					  Process_folder,
					  File1])),
    os:cmd(Command1),
    {File1, Count}.

remove_non_http_ok_from_file_helper(Process_folder, File1, Input_file1, Output_file1, Count) ->
    case file:read_line(Input_file1) of 
	eof -> Count;
	{ok, Data} ->
	    Tokens=string:tokens(Data, " "),
	    Status_code=lists:nth(9, Tokens),
	    First_character=lists:nth(1, Status_code),
	    if
		First_character =/= $2 ->
		    remove_non_http_ok_from_file_helper(Process_folder, File1, Input_file1, Output_file1, Count+1);
		true ->
		    file:write(Output_file1, Data),
		    remove_non_http_ok_from_file_helper(Process_folder, File1, Input_file1, Output_file1, Count)
	    end
    end.





%%% This function takes a list of file_lines records and separates logs present in each file lab-id wise.  
%%% To determine which logs belong to which lab File_lab_id_regexp_list is used.
%%% File_lab_id_regexp_list has following structure
%%%
%%%   [{"<file-name>", [{"<regexp>", "<labid>"}, ...]}, ... ]
%%%
%%% All processing happens in Process_folder.
%%%
split_logs_by_lab_id(Process_folder, File_list1, File_lab_id_regexp_list) ->
    split_logs_by_lab_id_helper(Process_folder, File_list1, File_lab_id_regexp_list, []).


%%% Helper for split_logs_by_lab_id/3 function
split_logs_by_lab_id_helper(_, [], _File_lab_id_regexp_list, Result) -> lists:usort(Result);
split_logs_by_lab_id_helper(Process_folder, File_list1, File_lab_id_regexp_list, Result) ->
    Current_file=hd(File_list1),
    Current_file_name=filename:basename(Current_file#file_lines.name),
    [{_File_base_name, Reg_exp_list}] = lists:filter(
					    fun({File1, _Regexp1}) ->
						    string:str(Current_file_name, File1) =:= 1
					    end,
					    File_lab_id_regexp_list
					   ),
    Result2=split_logs_for_file_by_reg_exp(Process_folder, Current_file_name, Reg_exp_list),
    split_logs_by_lab_id_helper(Process_folder, tl(File_list1), File_lab_id_regexp_list, Result ++ Result2).

%%% Helper for split_logs_by_lab_id_helper/4 function
split_logs_for_file_by_reg_exp(Process_folder, File1, Reg_exp_list) ->
    Filenames=lists:map(fun({Regexp1, Labid1}) ->
				Command1=lists:flatten(io_lib:format("grep '~s' ~s/~s >> ~s/~s", 
								     [Regexp1,
								      Process_folder,
								      File1,
								      Process_folder,
								      Labid1])),
				os:cmd(Command1),
				Labid1
			end,
			Reg_exp_list),
    Command2=lists:flatten(io_lib:format("rm -f ~s/~s", [Process_folder, File1])),
    os:cmd(Command2),
    lists:usort(Filenames).
    
				   

%%% This function takes a process folder and list of file names.  It
%%% then opens each of the files and splits its log lines month-wise
%%% in process-folder in folder with same name at same location.
%%% Since a file and folder with same full path cannot exist in
%%% parallel, temporarily the folder name would be month-<filename>.
%%% Once the file is processed and deleted the folder would be renamed
%%% to <filename>.
%%%
split_month_wise(Process_folder, File_name_list) ->
    split_month_wise_helper(Process_folder, File_name_list).

%%% Helper for split_month_wise/2 function
split_month_wise_helper(_, []) -> ok;
split_month_wise_helper(Process_folder, File_name_list) ->
    %% Create folder for month-wise files of given file
    File1=hd(File_name_list),
    Command1=lists:flatten(io_lib:format("mkdir -p ~s/month-~s", [Process_folder, File1])),
    os:cmd(Command1),

    %% Split file month-wise
    {ok, Input1} = file:open(Process_folder ++ "/" ++ File1, [read]),
    case file:read_line(Input1) of
	eof ->
	    ok;
	{ok, Line1} ->
	    Tokens1=string:tokens(Line1, " "),
	    Date_token=lists:nth(4,Tokens1),
	    Month=string:substr(Date_token, 5, 3),
	    Year=string:substr(Date_token, 9, 4),
	    {ok, Output1} = file:open(Process_folder ++ "/month-" ++ File1 ++ "/" ++ Year ++ "-" ++ Month, [append]),
	    file:write(Output1, Line1),
 	    split_month_wise_helper_writer(Input1, Output1, Month, Year, Process_folder, File1)
    end,
    file:close(Input1),
    
    %%Remove input-file and rename month-wise folder
    Command2=lists:flatten(io_lib:format("rm -f ~s/~s; mv ~s/month-~s ~s/~s",
    					 [Process_folder, File1,
    					  Process_folder, File1, 
    					  Process_folder, File1])),
    os:cmd(Command2),
    split_month_wise_helper(Process_folder, tl(File_name_list)).


%%% Helper for split_month_wise_helper/2 function
split_month_wise_helper_writer(Input1, Output1, Month, Year, Process_folder, File1) ->
    case file:read_line(Input1) of
	eof ->
	    file:close(Output1),
	    ok;
	{ok, Line1} ->
	    Tokens1=string:tokens(Line1, " "),
	    Date_token=lists:nth(4,Tokens1),
	    Month2=string:substr(Date_token, 5, 3),
	    Year2=string:substr(Date_token, 9, 4),
	    if 
		(Month =:= Month2) and (Year =:= Year2) ->
		    file:write(Output1, Line1),
		    split_month_wise_helper_writer(Input1, Output1, Month, Year, Process_folder, File1);
		true ->
		    file:close(Output1),
		    {ok, Output2} = file:open(Process_folder ++ "/month-" ++ File1 ++ "/" ++ Year2 ++ "-" ++ Month2, [append]),
		    file:write(Output2, Line1),
		    split_month_wise_helper_writer(Input1, Output2, Month2, Year2, Process_folder, File1)
	    end
    end.
    

%%% Read list of {lab_name, lab_stat} records from given file
read_lab_stats(Lab_stats_file) ->
    {ok, Lab_stats1} = file:consult(Lab_stats_file),
    Lab_stats1.




%%% This function takes process folder and list of folder names.  Then
%%% this function gets number of lines in each file inside each of the
%%% folders.  This count is then returned to the caller as list of
%%% {lab_name, lab_stats} records.
get_hit_count(Process_folder, Lab_file_list) ->
    lists:map(fun(Lab1) ->
		      get_hit_count_for_lab(Process_folder, Lab1)
	      end,
	      Lab_file_list).


%%% This function takes a folder name and a lab name.  Then it counts
%%% number of lines for each file inside lab-folder and returns {name, list
%%% of lab_stats records} for the lab.
get_hit_count_for_lab(Process_folder, Lab1) ->
    {ok, Files1} = file:list_dir(Process_folder ++ "/" ++ Lab1),
    Line_count1 =  get_line_count(Process_folder ++ "/" ++ Lab1, Files1),    
    Lab_stats2=lists:map(fun(Line_count_record1) ->
				 File_name1=filename:basename(Line_count_record1#file_lines.name),
				 File_line_count1=Line_count_record1#file_lines.total_lines,
				 Year=string:substr(File_name1, 1, 4),
				 Month=string:substr(File_name1, 6, 3),
				 Lab_stats1=#lab_stats{name=Lab1, month=Month, year=Year,
						       hits=File_line_count1},
				 Lab_stats1
			 end,
			 Line_count1),
    {Lab1, Lab_stats2}.




%%% This function takes a process folder and a list of folder names as
%%% input.  For all input folders inside process folder, all log lines
%%% with request extension part of ?Non_visit_extension_list are
%%% removed.  The remaining lines are saved in the same location with
%%% same file name.
%%%
remove_non_visit(Process_folder, Lab_name_list) ->
    lists:map(fun(Lab1) ->
		      remove_non_visit_for_lab(Process_folder, Process_folder ++ "/" ++ Lab1)
	      end,
	      Lab_name_list).

%%% Helper for remove_non_visit/2 function
remove_non_visit_for_lab(Process_folder, Lab_folder) ->
    {ok, Files1} = file:list_dir(Lab_folder),
    lists:map(fun(File1) ->
		      remove_non_visit_for_file(Process_folder, Lab_folder ++ "/" ++ File1)
	      end,
	      Files1).

%%% Helper for remove_non_visit_for_lab/2 function
remove_non_visit_for_file(Process_folder, File1) ->
    {ok, Input1} = file:open(File1, [read]),
    {ok, Output1} = file:open(Process_folder ++ "/" ++ ?Non_visit_remove_temp_file, [write]),
    Lines_removed=remove_non_visit_lines_from_file(Input1, Output1, 0),
    file:close(Input1),
    file:close(Output1),
    
    Command1=lists:flatten(io_lib:format("mv ~s/~s ~s", [Process_folder, ?Non_visit_remove_temp_file, File1])),
    os:cmd(Command1),
    {File1, Lines_removed}.


%%% Helper for remove_non_visit_for_file/2
remove_non_visit_lines_from_file(Input1, Output1, Count) ->
    case file:read_line(Input1) of
	eof ->
	    Count;
	{ok, Data} ->
	    Tokens=string:tokens(Data, " "),
	    Request_uri=lists:nth(7, Tokens),
	    File_extension=string:to_lower(filename:extension(Request_uri)),

	    Non_visit=lists:member(File_extension, ?Non_visit_extension_list),
	    if 
		Non_visit ->
		    remove_non_visit_lines_from_file(Input1, Output1, Count+1);
		true ->
		    file:write(Output1, Data),
		    remove_non_visit_lines_from_file(Input1, Output1, Count)
	    end
    end.	




%%% This function takes process folder and list of folder names.  Then
%%% this function gets number of lines in each file inside each of the
%%% folders.  This count is then returned to the caller as list of
%%% {lab_name, lab_stats} records.
get_visit_count(Process_folder, Lab_file_list) ->
    lists:map(fun(Lab1) ->
		      get_visit_count_for_lab(Process_folder, Lab1)
	      end,
	      Lab_file_list).


%%% This function takes a folder name and a lab name.  Then it counts
%%% number of lines for each file inside lab-folder and returns {name, list
%%% of lab_stats records} for the lab.
get_visit_count_for_lab(Process_folder, Lab1) ->
    {ok, Files1} = file:list_dir(Process_folder ++ "/" ++ Lab1),
    Line_count1 =  get_line_count(Process_folder ++ "/" ++ Lab1, Files1),    
    Lab_stats2=lists:map(fun(Line_count_record1) ->
				 File_name1=filename:basename(Line_count_record1#file_lines.name),
				 File_line_count1=Line_count_record1#file_lines.total_lines,
				 Year=string:substr(File_name1, 1, 4),
				 Month=string:substr(File_name1, 6, 3),
				 Lab_stats1=#lab_stats{name=Lab1, month=Month, year=Year,
						       visits=File_line_count1},
				 Lab_stats1
			 end,
			 Line_count1),
    {Lab1, Lab_stats2}.




%%% This function takes three arguments a process folder, a list of
%%% folder names (lab-names) and a list containing information about
%%% each experiment for each lab.  
%%%
%%% This function then processes each file (month-wise) inside each
%%% lab folder and for each experiment gets usage of experiment
%%% visits.  This information is returned as list of {Lab_name, list
%%% of lab_stats records} where each lab_stats records exp_data is
%%% populated with 'list of exp_data' records.  The overall lab_stats
%%% record usage is also populated with total from all exp_data
%%% records appropriately.
count_experiment_usage(Process_folder, Lab_file_list, Lab_exp_info_list) ->
    count_experiment_usage_helper(Process_folder, Lab_file_list, Lab_exp_info_list, []).


%%% Helper for count_experiment_usage/3 function
count_experiment_usage_helper(_Process_folder, [], _Lab_exp_info_list, Result) -> Result;
count_experiment_usage_helper(Process_folder, Lab_file_list, Lab_exp_info_list, Result) -> 
    Current_lab=hd(Lab_file_list),
    case lists:keyfind(Current_lab, 1, Lab_exp_info_list) of
	false ->
	    io:format("Do not have experiment information for lab ~p.~n", [Current_lab]),
	    count_experiment_usage_helper(Process_folder, tl(Lab_file_list), Lab_exp_info_list, Result);
	{Current_lab, Experiment_info} ->
	    Lab_exp_usage1 = count_experiment_usage_for_lab(Process_folder, Current_lab, Experiment_info),
	    count_experiment_usage_helper(Process_folder, tl(Lab_file_list), Lab_exp_info_list, [Lab_exp_usage1 | Result])
    end.
		
%%% Helper for count_experiment_usage_for_lab function.  The function
%%% returns {Lab_name, list of Lab_stats records}.
count_experiment_usage_for_lab(Process_folder, Lab1, Experiment_info) ->
    {ok, Files1} = file:list_dir(Process_folder ++ "/" ++ Lab1),
    Lab_exp_usage1 = lists:map(fun(File1) ->
				       count_experiment_usage_for_lab_for_month(Process_folder, Lab1, File1, Experiment_info)
			       end,
			       Files1),
    {Lab1, Lab_exp_usage1}.
    

%%% Helper for count_experiment_usage_for_lab/3 function.  This
%%% function returns a single lab_stat record with exp_data populated
%%% with 'list of exp_data' records for the given month.
count_experiment_usage_for_lab_for_month(Process_folder, Lab1, File1, Experiment_info) ->
    Lab_year=string:substr(File1, 1, 4),
    Lab_month=string:substr(File1, 6, 3),
    Lab_exp_data=lists:map(fun(Experiment1) ->
				   get_experiment_usage_for_lab_for_month_helper(Process_folder, Lab1, File1, Experiment1)
			   end,
			   Experiment_info),
    Usage=lists:foldl(fun(Exp_data1, Usage2) ->
			      Usage3=Exp_data1#exp_data.usage,
			      Usage2+Usage3
		      end,
		      0,
		      Lab_exp_data),
    #lab_stats{name=Lab1, year=Lab_year, month=Lab_month, usage=Usage, exp_data=Lab_exp_data}.
    

%%% Helper function for count_experiment_usage_for_lab_for_month/4.
%%% This function returns a single exp_data record for given
%%% experiment.  
%%%
%%% Fourth argument Experiment1 has structure similar to 
%%%     {"Number Systems", "/exp1/index.php", "/exp1/index.php.*section=Simulation.*"}  
%%%
get_experiment_usage_for_lab_for_month_helper(Process_folder, Lab1, File1, Experiment1) ->
    {Exp_name, Visit_regexp, Simul_regexp} = Experiment1,
    {ok, Input1} = file:open(Process_folder ++ "/" ++ Lab1 ++ "/" ++ File1, [read]),
    if
	Simul_regexp =:= "" ->
	    {ok, MP1} = re:compile(Visit_regexp),
	    {Exp_visit, Sim_visit, Usage}=get_usage_from_file_only_with_theory(Input1, MP1, []),
	    file:close(Input1),
	    #exp_data{name=Exp_name, exp_visit=Exp_visit, sim_visit=Sim_visit, usage=Usage}	    ;
	true ->
	    {ok, MP1} = re:compile(Visit_regexp),
	    {ok, MP2} = re:compile(Simul_regexp),
	    {Exp_visit, Sim_visit, Usage}=get_usage_from_file_with_theory_and_sim(Input1, MP1, MP2, []),
	    file:close(Input1),
	    #exp_data{name=Exp_name, exp_visit=Exp_visit, sim_visit=Sim_visit, usage=Usage}
    end.


%%% Helper for get_experiment_usage_for_lab_for_month_helper/4
%%% function This function takes a file handler for input along with
%%% a compiled regular expresssions.  It finally returns
%%% {<experiment_visit>, <sim_visit>, <usage>} for the file for the
%%% month.
get_usage_from_file_only_with_theory(Input1, MP1, Result) ->    
    case file:read_line(Input1) of
	eof ->
	    get_usage_from_day_wise_ip_list(Result);

	{ok, Data} ->
	    Tokens=string:tokens(Data, " "),
	    Request_ip=lists:nth(1, Tokens),
	    Request_date1 = lists:nth(4, Tokens),
	    Request_day1=string:substr(Request_date1, 2, 2),
	    Request_uri=lists:nth(7, Tokens),
	    case re:run(Request_uri, MP1) of
		{match, _} ->
		    Result2=update_day_ip_simulation_visit(Result, Request_day1, Request_ip),
		    Result3=update_day_ip_experiment_visit(Result2, Request_day1, Request_ip),
		    get_usage_from_file_only_with_theory(Input1, MP1, Result3);
		nomatch ->
		    get_usage_from_file_only_with_theory(Input1, MP1, Result)
	    end
    end.




%%% Helper for get_experiment_usage_for_lab_for_month_helper/4
%%% function This function takes a file handler for input along with
%%% two compiled regular expresssions.  It finally returns
%%% {<experiment_visit>, <sim_visit>, <usage>} for the file for the
%%% month.
get_usage_from_file_with_theory_and_sim(Input1, MP1, MP2, Result) ->    
    case file:read_line(Input1) of
	eof ->
	    get_usage_from_day_wise_ip_list(Result);

	{ok, Data} ->
	    Tokens=string:tokens(Data, " "),
	    Request_ip=lists:nth(1, Tokens),
	    Request_date1 = lists:nth(4, Tokens),
	    Request_day1=string:substr(Request_date1, 2, 2),
	    Request_uri=lists:nth(7, Tokens),
	    case re:run(Request_uri, MP2) of
		{match, _} ->
		    Result2=update_day_ip_simulation_visit(Result, Request_day1, Request_ip),
		    get_usage_from_file_with_theory_and_sim(Input1, MP1, MP2, Result2);
		nomatch ->
		    case re:run(Request_uri, MP1) of
			{match, _} ->
			    Result2=update_day_ip_experiment_visit(Result, Request_day1, Request_ip),
			    get_usage_from_file_with_theory_and_sim(Input1, MP1, MP2, Result2);
			nomatch ->
			    get_usage_from_file_with_theory_and_sim(Input1, MP1, MP2, Result)
		    end
	    end
    end.


%%% This function takes a tuple containing list of {day,
%%% theory_visit_ips, simulation_visit_ips}.  Here theory_visit_ips is
%%% itself a list of IPs who visited theory page from given IP on the
%%% given day.  Similarly, simulation_visit_ips is a list of IPs who
%%% visited simulation page from given IP on the given day.  Day is
%%% between "01" and "31" as per days of month.
%%% 
update_day_ip_simulation_visit(Result, Request_day1, Request_ip) ->
    case lists:keyfind(Request_day1, 1, Result) of
	{Request_day1, Theory_IPs, Sim_IPs} ->
	    Sim_IPs2 = [Request_ip | Sim_IPs],
	    New_day_tuple = {Request_day1, Theory_IPs, Sim_IPs2},
	    Result2=lists:keyreplace(Request_day1, 1, Result, New_day_tuple),
	    Result2;
	false ->
	    Result2=[{Request_day1, [], [Request_ip]} | Result],
	    Result2
    end.

%%% Very similar to update_day_ip_simulation_visit/3 with difference
%%% that instead of simulation visit this function updates experiment
%%% (theory) visit information.
update_day_ip_experiment_visit(Result, Request_day1, Request_ip) ->
    case lists:keyfind(Request_day1, 1, Result) of
	{Request_day1, Theory_IPs, Sim_IPs} ->
	    Theory_IPs2 = [Request_ip | Theory_IPs],
	    New_day_tuple = {Request_day1, Theory_IPs2, Sim_IPs},
	    Result2=lists:keyreplace(Request_day1, 1, Result, New_day_tuple),
	    Result2;
	false ->
	    Result2=[{Request_day1, [Request_ip], []} | Result],
	    Result2
    end.


%%% Helper for get_usage_from_file/4 function.
%%%
%%% Day_wise_IP_address_list1 is 'list of {day, theory_visit_ips,
%%% simulation_visit_ips}'.  Here theory_visit_ips is itself a list of
%%% IPs who visited theory page from given IP on the given day.
%%% Similarly, simulation_visit_ips is a list of IPs who visited
%%% simulation page from given IP on the given day.  Day is between
%%% "01" and "31" as per days of month.
%%%
%%% This function returns {<experiment_visit>, <sim_visit>, <usage>}
%%% for the entire input list.  
get_usage_from_day_wise_ip_list(Day_wise_IP_address_list1) ->
    Count_list1 = lists:map(fun({_Day1, Theory_IPs, Sim_IPs}) ->
				    Usage = get_usage_from_day_ips_list(Theory_IPs, Sim_IPs, 0),
				    {length(Theory_IPs), length(Sim_IPs), Usage}
			    end,
			    Day_wise_IP_address_list1),
    {Exp_visit3, Sim_visit3, Usage3} = lists:foldl
					 (fun({Exp_visit, Sim_visit, Usage}, {Exp_visit2, Sim_visit2, Usage2}) ->
						  {Exp_visit+Exp_visit2, Sim_visit+Sim_visit2, Usage+Usage2}
					  end,
					  {0, 0, 0},
					  Count_list1
					 ),
    {Exp_visit3, Sim_visit3, Usage3}.

%%% This function takes two lists and finds number of matching element
%%% in the two lists.  The final count of matching elements is
%%% returned.
get_usage_from_day_ips_list([], _, Usage) -> Usage;
get_usage_from_day_ips_list(Theory_IPs, Sim_IPs, Usage) ->
    Current_ip=hd(Theory_IPs),
    case lists:member(Current_ip, Sim_IPs) of
	true ->
	    Sim_IPs2 = Sim_IPs -- [Current_ip],
	    get_usage_from_day_ips_list(tl(Theory_IPs), Sim_IPs2, Usage+1);
	false ->
	    get_usage_from_day_ips_list(tl(Theory_IPs), Sim_IPs, Usage)
    end.
    



%%% This function takes file path and two lists of all_lab_stats.
%%% 
%%% This function creates a new third list of all_lab_stats after
%%% adding various counts of both input lists.  This new list is
%%% returned by function to caller.
%%% 
%%% The final output is also written to the file path given in argument
%%% in erlang term format.
update_count(Stats_file, Read_all_lab_stats1, Get_all_lab_stats1) ->
    All_lab_stats2=update_count_helper(Read_all_lab_stats1, Get_all_lab_stats1),
    Data_lines=lists:map(fun(Lab_stats1) -> io_lib:format("~p.~n", [Lab_stats1]) end, All_lab_stats2),
    file:write_file(Stats_file, Data_lines),
    All_lab_stats2.



%%% This is helper for update_count/3 function
update_count_helper(Read_all_lab_stats1, []) -> Read_all_lab_stats1;
update_count_helper(Read_all_lab_stats1, Get_all_lab_stats1) ->
    Get_lab_stats1=hd(Get_all_lab_stats1),
    Read_all_lab_stats2=update_count_for_lab(Get_lab_stats1, Read_all_lab_stats1),
    update_count_helper(Read_all_lab_stats2, tl(Get_all_lab_stats1)).
    

update_count_for_lab({Get_lab_name1, Get_lab_stats_list1}, Read_all_lab_stats1) ->
    case lists:keyfind(Get_lab_name1, 1, Read_all_lab_stats1) of
	false ->
	    [{Get_lab_name1, Get_lab_stats_list1} | Read_all_lab_stats1];
	{Get_lab_name1=Read_lab_name1, Read_lab_stats_list2} ->
	    Lab_stat_list3=update_count_for_lab_helper(Get_lab_name1, Get_lab_stats_list1, Read_lab_stats_list2),
	    All_lab_stats2=Read_all_lab_stats1--[{Read_lab_name1, Read_lab_stats_list2}],
	    All_lab_stats3=All_lab_stats2++[{Get_lab_name1, Lab_stat_list3}],
	    All_lab_stats3
    end.

update_count_for_lab_helper(_Lab_name, Get_lab_stat_list1, []) -> Get_lab_stat_list1;
update_count_for_lab_helper(Lab_name, Get_lab_stat_list1, Read_lab_stat_list2) ->
    Read_lab_stat_record1=hd(Read_lab_stat_list2),
    Read_lab_month=Read_lab_stat_record1#lab_stats.month,
    Read_lab_year=Read_lab_stat_record1#lab_stats.year,
    Result = lists:filter(fun(Get_lab_stat_record2) ->
				  (Get_lab_stat_record2#lab_stats.month=:=Read_lab_month) 
				      and (Get_lab_stat_record2#lab_stats.year=:=Read_lab_year) 
			  end,
			  Get_lab_stat_list1),
    case Result of 
	[] ->
	    update_count_for_lab_helper(Lab_name, [Read_lab_stat_record1 | Get_lab_stat_list1], tl(Read_lab_stat_list2));
	[Get_lab_stat_record3] ->
	    Additional_usage_count=Get_lab_stat_record3#lab_stats.usage,
	    Old_usage_count=Read_lab_stat_record1#lab_stats.usage,

	    New_exp_data_records=Get_lab_stat_record3#lab_stats.exp_data,
	    Old_exp_data_records=Read_lab_stat_record1#lab_stats.exp_data,
	    Combined_exp_data_records=merge_exp_data_lists(New_exp_data_records, Old_exp_data_records),

	    Additional_visit_count=Get_lab_stat_record3#lab_stats.visits,
	    Old_visit_count=Read_lab_stat_record1#lab_stats.visits,

	    Additional_hit_count=Get_lab_stat_record3#lab_stats.hits,
	    Old_hit_count=Read_lab_stat_record1#lab_stats.hits,

	    Lab_stat_record4=Read_lab_stat_record1#lab_stats{
			       hits=Old_hit_count + Additional_hit_count,
			       usage=Old_usage_count + Additional_usage_count,
			       exp_data=Combined_exp_data_records,
			       visits=Old_visit_count + Additional_visit_count
			      },
	    Lab_stat_list3=Get_lab_stat_list1--[Get_lab_stat_record3],
	    update_count_for_lab_helper(Lab_name, [Lab_stat_record4 | Lab_stat_list3], tl(Read_lab_stat_list2))
    end.


%%% This function takes two lists of exp_data records and merges them
%% merge_exp_data_lists(New_exp_data_records, undefined) -> New_exp_data_records;
merge_exp_data_lists([], Old_exp_data_records) -> Old_exp_data_records;
merge_exp_data_lists(New_exp_data_records, Old_exp_data_records) ->
    New_record1=hd(New_exp_data_records),
    Exp_name=New_record1#exp_data.name,
    case lists:keyfind(Exp_name, 2, Old_exp_data_records) of
	false ->
	    merge_exp_data_lists(tl(New_exp_data_records), [New_record1 | Old_exp_data_records]);
	Old_record1 ->
	    Total_exp_visit=New_record1#exp_data.exp_visit + Old_record1#exp_data.exp_visit,
	    Total_sim_visit=New_record1#exp_data.sim_visit + Old_record1#exp_data.sim_visit,
	    Total_usage=New_record1#exp_data.usage + Old_record1#exp_data.usage,
	    New_exp_data_record=#exp_data{name=Exp_name, exp_visit=Total_exp_visit, sim_visit=Total_sim_visit, usage=Total_usage},
	    Old_exp_data_records2 = Old_exp_data_records -- [Old_record1],
	    merge_exp_data_lists(tl(New_exp_data_records), [New_exp_data_record | Old_exp_data_records2])
    end.




%%% This function calls various functions to process logs for Base2
%%% cluster
base2_main() ->
    %%(STEP:initialize)
    initialize(?Base2_data_folder, ?Base2_process_folder),
    
    %%(STEP:all_list)
    File_list1=read_all_file_names(?Base2_log_folder_path),

    %% %%(STEP:positive_filter)
    File_list2=positive_filter(File_list1, ?Base2_relevant_file_names),
    %% ?TRACE("~s: File_list after positive filter on base2 is ~n~p~n", ["base2_main/0", File_list2]),
    
    %%(STEP:negative_filter)
    File_list3=negative_filter(File_list2, ?Base2_unusable_log_files),
    %% ?TRACE("~s: File_list after negative filter on base2 is ~n~p~n", ["base2_main/0", File_list3]),
    
    %%(STEP:read_line_count)
    Line_count_1=read_line_count(?Base2_data_folder ++ "/" ++ ?Line_count_file),
    %% ?TRACE("~s: Line_count processed already is ~n~p~n", ["base2_main/0", Line_count_1]),

    %%(STEP:get_line_count)
    Line_count_2=get_line_count(?Base2_log_folder_path, File_list3),
    %% ?TRACE("~s: Line_count of log files is ~n~p~n", ["base2_main/0", Line_count_2]),

    %%(STEP:compare_count)
    Line_count_3=compare_count(Line_count_2, Line_count_1),
    %% ?TRACE("~s: Count of new lines in log files is ~n~p~n", ["base2_main/0", Line_count_3]),

    %%(STEP:copy_lines)
    Line_count_4=copy_lines(?Base2_process_folder, Line_count_3),
    %% ?TRACE("~s: Number of lines copied in this iteration are ~n~p~n", ["base2_main/0", Line_count_4]),

    %%(STEP:update_line_count)
    update_line_count(?Base2_data_folder ++ "/" ++ ?Line_count_file, Line_count_1, Line_count_3),

    %%(STEP:remove_bot)
    Bot_line_count=remove_bot(?Base2_process_folder, Line_count_4),
    %% ?TRACE("~s: Number of bot lines removed (among new_lines) are ~n~p~n", ["base2_main/0", Bot_line_count]),

    %%(STEP:remove_non_http_ok)
    Non_http_ok_line_count=remove_non_http_ok(?Base2_process_folder, Line_count_4),
    %% ?TRACE("~s: Number of non-bot non_http_ok lines removed (among new_lines) are ~n~p~n", ["base2_main/0", Non_http_ok_line_count]),

    %%(STEP:lab_id_log)
    Lab_file_list=split_logs_by_lab_id(?Base2_process_folder, Line_count_4, ?Base2_file_lab_id_regexp_list),
    %% ?TRACE("~s: Various files created for lab wise logs are ~n~p~n", ["base2_main/0", Lab_file_list]),

    %%(STEP:month-wise)
    split_month_wise(?Base2_process_folder, Lab_file_list),

    %%(STEP:read_hit_count)
    Read_all_lab_stat1 = read_lab_stats(?Base2_data_folder ++ "/" ++ ?Lab_stats_file),
    %% ?TRACE("~s: lab-wise month-wise stats from previous analytics are ~n~p~n", ["base2_main/0", Read_all_lab_stat1]),
    
    %%(STEP:get_hit_count)
    Get_all_lab_hit1 = get_hit_count(?Base2_process_folder, Lab_file_list),
    %% ?TRACE("~s: lab-wise month-wise hit counts of new log lines are ~n~p~n", ["base2_main/0", Get_all_lab_hit1]),

    %%(STEP:update_hit_count)
    All_lab_stat2 = update_count(?Base2_data_folder ++ "/" ++ ?Lab_stats_file, Read_all_lab_stat1, Get_all_lab_hit1),
    %% ?TRACE("~s: Hits updated lab-wise month-wise stats are ~n~p~n", ["base2_main/0", All_lab_stat2]),

    %%(STEP:remove_non_visit)
    Removed_non_visit1=remove_non_visit(?Base2_process_folder, Lab_file_list),
    %% ?TRACE("~s: Non-visit lines removed file-wise are ~n~p~n", ["base2_main/0", Removed_non_visit1]),

    %%(STEP:get_visit_count)
    Get_all_lab_visit1 = get_visit_count(?Base2_process_folder, Lab_file_list),
    %%?TRACE("~s: lab-wise month-wise visit counts of new log lines are ~n~p~n", ["base2_main/0", Get_all_lab_visit1]),

    %%(STEP:update_visit_count)
    All_lab_stat3 = update_count(?Base2_data_folder ++ "/" ++ ?Lab_stats_file, All_lab_stat2, Get_all_lab_visit1),
    %% ?TRACE("~s: Visits updated lab-wise month-wise stats are ~n~p~n", ["base2_main/0", All_lab_stat3]),

    %%(STEP:count_usage)
    Count_all_lab_experiment_usage1 = count_experiment_usage(?Base2_process_folder, Lab_file_list, ?Base2_lab_id_exp_info_list),
    %% ?TRACE("~s: Lab-wise month-wise experiment-wise experiment usage for new lines are ~n~p~n", ["base2_main/0", Count_all_lab_experiment_usage1]),

    %%(STEP:update_usage)
    Final_output1=update_count(?Base2_data_folder ++ "/" ++ ?Lab_stats_file, All_lab_stat3, Count_all_lab_experiment_usage1),
    %% ?TRACE("~s: Final complete output is ~n~p~n", ["base2_main/0", Final_output1]),
    
    Final_output1.


%%% This function calls various functions to process logs for AWS
%%% cluster
aws_main() ->
    %%(STEP:initialize)
    initialize(?Aws_data_folder, ?Aws_process_folder),
    
    %%(STEP:all_list)
    File_list1=read_all_file_names(?Aws_log_folder_path),

    %% %%(STEP:positive_filter)
    File_list2=positive_filter(File_list1, ?Aws_relevant_file_names),
    %% ?TRACE("~s: File_list after positive filter on base2 is ~n~p~n", ["aws_main/0", File_list2]),
    
    %%(STEP:negative_filter)
    File_list3=negative_filter(File_list2, ?Aws_unusable_log_files),
    %% ?TRACE("~s: File_list after negative filter on base2 is ~n~p~n", ["aws_main/0", File_list3]),
    
    %%(STEP:read_line_count)
    Line_count_1=read_line_count(?Aws_data_folder ++ "/" ++ ?Line_count_file),
    %% ?TRACE("~s: Line_count processed already is ~n~p~n", ["aws_main/0", Line_count_1]),

    %%(STEP:get_line_count)
    Line_count_2=get_line_count(?Aws_log_folder_path, File_list3),
    %% ?TRACE("~s: Line_count of log files is ~n~p~n", ["aws_main/0", Line_count_2]),

    %%(STEP:compare_count)
    Line_count_3=compare_count(Line_count_2, Line_count_1),
    %% ?TRACE("~s: Count of new lines in log files is ~n~p~n", ["aws_main/0", Line_count_3]),

    %%(STEP:copy_lines)
    Line_count_4=copy_lines(?Aws_process_folder, Line_count_3),
    %% ?TRACE("~s: Number of lines copied in this iteration are ~n~p~n", ["aws_main/0", Line_count_4]),

    %%(STEP:update_line_count)
    update_line_count(?Aws_data_folder ++ "/" ++ ?Line_count_file, Line_count_1, Line_count_3),

    %%(STEP:remove_bot)
    Bot_line_count=remove_bot(?Aws_process_folder, Line_count_4),
    %% ?TRACE("~s: Number of bot lines removed (among new_lines) are ~n~p~n", ["aws_main/0", Bot_line_count]),

    %%(STEP:remove_non_http_ok)
    Non_http_ok_line_count=remove_non_http_ok(?Aws_process_folder, Line_count_4),
    %% ?TRACE("~s: Number of non-bot non_http_ok lines removed (among new_lines) are ~n~p~n", ["aws_main/0", Non_http_ok_line_count]),

    %%(STEP:lab_id_log)
    Lab_file_list=split_logs_by_lab_id(?Aws_process_folder, Line_count_4, ?Aws_file_lab_id_regexp_list),
    %% ?TRACE("~s: Various files created for lab wise logs are ~n~p~n", ["aws_main/0", Lab_file_list]),

    %%(STEP:month-wise)
    split_month_wise(?Aws_process_folder, Lab_file_list),

    %%(STEP:read_hit_count)
    Read_all_lab_stat1 = read_lab_stats(?Aws_data_folder ++ "/" ++ ?Lab_stats_file),
    %% ?TRACE("~s: lab-wise month-wise stats from previous analytics are ~n~p~n", ["aws_main/0", Read_all_lab_stat1]),
    
    %%(STEP:get_hit_count)
    Get_all_lab_hit1 = get_hit_count(?Aws_process_folder, Lab_file_list),
    %% ?TRACE("~s: lab-wise month-wise hit counts of new log lines are ~n~p~n", ["aws_main/0", Get_all_lab_hit1]),

    %%(STEP:update_hit_count)
    All_lab_stat2 = update_count(?Aws_data_folder ++ "/" ++ ?Lab_stats_file, Read_all_lab_stat1, Get_all_lab_hit1),
    %% ?TRACE("~s: Hits updated lab-wise month-wise stats are ~n~p~n", ["aws_main/0", All_lab_stat2]),

    %%(STEP:remove_non_visit)
    Removed_non_visit1=remove_non_visit(?Aws_process_folder, Lab_file_list),
    %% ?TRACE("~s: Non-visit lines removed file-wise are ~n~p~n", ["aws_main/0", Removed_non_visit1]),

    %%(STEP:get_visit_count)
    Get_all_lab_visit1 = get_visit_count(?Aws_process_folder, Lab_file_list),
    %%?TRACE("~s: lab-wise month-wise visit counts of new log lines are ~n~p~n", ["aws_main/0", Get_all_lab_visit1]),

    %%(STEP:update_visit_count)
    All_lab_stat3 = update_count(?Aws_data_folder ++ "/" ++ ?Lab_stats_file, All_lab_stat2, Get_all_lab_visit1),
    %% ?TRACE("~s: Visits updated lab-wise month-wise stats are ~n~p~n", ["aws_main/0", All_lab_stat3]),

    %%(STEP:count_usage)
    Count_all_lab_experiment_usage1 = count_experiment_usage(?Aws_process_folder, Lab_file_list, ?Base2_lab_id_exp_info_list),
    %% ?TRACE("~s: Lab-wise month-wise experiment-wise experiment usage for new lines are ~n~p~n", ["aws_main/0", Count_all_lab_experiment_usage1]),

    %%(STEP:update_usage)
    Final_output1=update_count(?Aws_data_folder ++ "/" ++ ?Lab_stats_file, All_lab_stat3, Count_all_lab_experiment_usage1),
    %% ?TRACE("~s: Final complete output is ~n~p~n", ["aws_main/0", Final_output1]),
    
    Final_output1.



%%% This function takes list of {lab name, list of lab_stats} records
%%% and then returns a list of {lab_name, total_hits, total_visits,
%%% total_usage}.  
%%%
%%% The output is written to a Lab_total_file which is also received
%%% as argument
get_lab_totals(Lab_totals_file, All_lab_stats_list1) ->
    %% Get total for a lab from all lab_stats records of the lab
    All_totals=lists:map(fun({Lab1, Lab_stats_list1}) ->
				 {Lab1, Hits2, Visits2, Usage2} 
				     = lists:foldl(
					 fun(Lab_stat_record1, {Lab1, Hits3, Visits3, Usage3}) ->
						 Hits4=Lab_stat_record1#lab_stats.hits,
						 Visits4=Lab_stat_record1#lab_stats.visits,
						 Usage4=Lab_stat_record1#lab_stats.usage,
						 {Lab1, Hits3+Hits4, Visits3+Visits4, Usage3+Usage4}
					 end,
					 {Lab1, 0, 0, 0},
					 Lab_stats_list1
					)
			 end,
			 All_lab_stats_list1),
    
    %% Write the final values to Lab_totals_file seperated by spaces
    %% in non-erlang term format.
    {ok, Output1} = file:open(Lab_totals_file, [write]),
    lists:map(fun({Lab1, Hits1, Visits1, Usage1}) ->
		      io:format(Output1, "~s ~p ~p ~p~n", [Lab1, Hits1, Visits1, Usage1])
	      end,
	      All_totals),
    file:close(Output1),

    All_totals.
    


get_all_total(All_total_file, Lab_totals) ->
    %% Get total for all labs
    All_total=lists:foldl(fun({Lab1, Hits1, Visits1, Usage1},  {Hits2, Visits2, Usage2}) ->
				  {Hits1+Hits2, Visits1+Visits2, Usage1+Usage2}
			  end,
			  {0, 0, 0},
			  Lab_totals
			 ),
    {Hits3, Visits3, Usage3} = All_total,

    %% Write the final values to All_total_file seperated by spaces
    %% in non-erlang term format.
    {ok, Output1} = file:open(All_total_file, [write]),
    io:format(Output1, "~p ~p ~p~n", [Hits3, Visits3, Usage3]),
    file:close(Output1),
    
    All_total.
    


%%% This function calls various other functions to process logs of
%%% various clusters
main() ->
    %%Various steps for each hosting platform
    Base_final_output=base2_main(),
    Aws_final_output=aws_main(),

    %%Ensure that output folder exists
    Command1=lists:flatten(io_lib:format("mkdir -p ~s", [?Output_folder])),
    os:cmd(Command1),
    
    %%(STEP: combine_platforms)
    Final_output1=update_count(?Output_folder ++ "/" ++ ?Lab_stats_file, Aws_final_output, Base_final_output),
    %% ?TRACE("~s: Final complete output is ~n~p~n", ["main/0", Final_output1]),
    
    %%(STEP: lab_totals)
    Lab_totals=get_lab_totals(?Output_folder ++ "/" ++ ?Lab_total_file_name, Final_output1),
    %% ?TRACE("~s: Final lab totals are ~n~p~n", ["main/0", Lab_totals]),

    %%(STEP: all_total)
    All_total=get_all_total(?Output_folder ++ "/" ++ ?All_total_file_name, Lab_totals),
    %% ?TRACE("~s: All totals is ~n~p~n", ["main/0", All_total]),
    
    ok.
#+END_SRC
** Python source code for web service
   TODO 
   @Madhavi should include her code here
** Web service calls to be made from vlabs.ac.in pages
   TODO
   Example web service calls to be made from vlabs.ac.in pages

   @Madhavi should fill this section
* Test cases
  Not done.  This code is throw away as when sessions are implemented
  we will not use web server logs for analytics.  Extensive manual
  verification was done during development with small set of test
  logs.  Further since code is written step wise, we can process each
  step one at a time (the way we do in a debugger) and see output
  after each step.  

* COMMENT Display Analytics on Vlabs landing page
#+BEGIN_SRC python :tangle app.py
from flask import Flask, render_template, request, jsonify, make_response
from flask.ext.cache import Cache
import json

app = Flask(__name__)

app.config['CACHE_TYPE'] = 'simple'

app.cache = Cache(app)

@app.route('/analytics')
@app.cache.cached(timeout=360)
def total_hits():
    files_dir = "/home/madhavi/Documents/speed/"
    result_file = files_dir+"total.txt"
    with open(result_file, 'r') as f:
      lines = f.read()
      words = lines.split()
    d = {}
    d["hits"] = int (words[1])
    d["visits"]=int (words[3])
    d["usage"]=int (words[5])
    hits = jsonify(d)
    response = make_response(hits)
    response.headers['Access-Control-Allow-Origin'] = '*'
    response.headers['Access-Control-Allow-Credentials'] = 'true'
    return response

@app.route('/analytics/labs')
@app.cache.cached(timeout=360)
def lab_wise_total():
    files_dir = "/home/madhavi/Documents/speed/"
    result_file = files_dir+"all-total.txt"
    rows = []
    d = {}
    with open(result_file, 'r') as f:
      lines = f.readlines()
      for line in lines:
         row = line.split()
         lab_id = row[0]
         d[lab_id]={}
         d[lab_id]["hits"]=int (row[1])
         d[lab_id]["visits"]=int (row[2])
         d[lab_id]["usage"]=int (row[3])
        
    response = make_response(jsonify(d))
    response.headers['Access-Control-Allow-Origin'] = '*'
    response.headers['Access-Control-Allow-Credentials'] = 'true'
    return response


if __name__ == '__main__':
  app.run(port=5000, debug=True)

#+END_SRC
#+BEGIN_SRC 
<html>
  <head>
    <title>Analytics</title>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <script type="text/javascript" language="javascript">
      window.onload = function() {
      $.getJSON('http://localhost:5000/analytics', function(data) {
      $("#hits").html(data["hits"]);
      $("#visits").html(data["visits"]);
      $("#usage").html(data["usage"]);
      });
      $.getJSON('http://localhost:5000/analytics/labs', function(data) {
      $("#cse01").html(data["cse01"]["hits"]);
      $("#cse02").html(data["cse02"]["hits"]);
      });
      };
      
    </script>
  </head>
  <body>
    <div id="hits" >
     Hit
    </div>
    <div id="visits">
      Visit
    </div>
    <div id="usage">
      Usage
    </div>
<div id="cse01-hits">
    </div>

<div id="cse02-hits">
      Computer Programming
    </div>

   </body>
</html>
#+END_SRC

* Processes
** Installing erlang and cloning analytics sources
   Erlang can be installed using =yum -y install erlang= after
   epel-release has been enabled.

   The analytics repo can be cloned from github using normal HTTPS or
   SSH based cloning.  Running make on correct branch (master
   later-on, speed for now) should result into correct code being
   tangled into build/code folder.  

   Compile the erlang program using 'erlc *.erl' command to verify
   that it is compiling properly.  Ignore various warnings for TRACE
   variables which are not used in production.

** Configuring analytics program
   Following variables must be configured properly for the analytics
   erlang program to work.  Also after these values are changed the
   program should be recompiled using 'erlc *.erl' command.
   - =Base2_log_folder_path= :: Location where base2 http logs
        (/var/log/httpd on http container on base2) are copied
        (rsynced) at regular intervals on analytics machine.
        =/root/base2-http-logs= at time of this writing.
   - =Aws_log_folder_path= :: Location where AWS reverseproxy apache
        logs are copied at regular intervals on analytics machine.
        =/root/aws-http-logs= at time of this writing.
   - =Base2_relevant_file_names= :: Log files on base2 which have logs
        related to labs and not related to say www.vlabs.ac.in,
        vlead.vlabs.ac.in, outreach.vlabs.ac.in, etc.
   - =Aws_relevant_file_names= :: Log files on AWS which have logs
        related to labs and not related to say www.vlabs.ac.in,
        vlead.vlabs.ac.in, outreach.vlabs.ac.in, etc.
   - =Base2_unusable_log_files= :: These are log files that contain logs
        related to labs, but the logs are not usable for various
        reasons such as lab not organized in experiment format, too
        less logs to account for, etc.
   - =Aws_unusable_log_files= :: Analogous to =Base2_unusable_log_files=,
        empty at time of this writing.
   - =Base2_file_lab_id_regexp_list= :: This list contains association
        between a log file and lab-id.  Also if a log file contains
        information about more than one lab, then this list also
        contains regular-expresions to filter out logs of one lab from
        logs of other labs.
   - =Aws_file_lab_id_regexp_list= :: Analogous to
        =Base2_file_lab_id_regexp_list= for AWS cluster
   - =Lab_id_exp_info_list= :: For each lab this list captures name of
        experiment, theory visit URL reg-exp and simulation visit URL
        reg-exp against a lab-ID.  This lab-ID should be same as
        lab-ID mentioned in =Base2_file_lab_id_regexp_list= and
        =Aws_file_lab_id_regexp_list= lists.
   - =Base2_data_folder= :: Data folder where information from
        previous analytics runs for base2 would be stored.
   - =Base2_process_folder= :: Temporary folder where new log lines
        are copied and analyised.  Thus, it is ensured that logs in
        =Base2_log_folder_path= are only read but not modified
        directly in =Base2_log_folder_path= folder.
   - =Aws_data_folder= :: Same as =Base2_data_folder= for AWS cluster.
   - =Aws_process_folder= :: Same as =Base2_process_folder= for AWS
        cluster.
   - =Output_folder= :: Folder where =Lab_total_file_name= and
        =All_total_file_name= files should be created for web service
        to read from.  At time of this writing the folder is
        =/var/www/html/analytics=.
   - =Bot_regular_expression= :: Regular expression to be matched
        against user-agent in web server logs to determine whether
        particular log line is because of a bot or not.
   - =Non_visit_extension_list= :: List of extensions (lower-case,
        case insensitive) to be matched against URLs to see if they
        are not visited URLs.
   - =Lab_total_file_name= :: File where lab totals should be written
        in 
	#+BEGIN_EXAMPLE
	lab-id hits visits usages
	#+END_EXAMPLE
	format for python web service.  This file is created in
        =Output_folder=.
    - =All_total_file_name= :: File where final =hits visits usages=
         would be written for python web service.  This file is
         created in =Output_folder=.
** Running analytics program from shell in background
   To run an erlang program in background its standard-input and
   output *must* be redirected.  Thus to run the erlang program in
   background use something similar to:
   #+BEGIN_EXAMPLE
   cd <program-folder>
   erl -noshell -s analyics main -s init stop </dev/null >output.log 2>&1 &
   #+END_EXAMPLE
   
** Adding a new lab
   To add a new lab following variables may need to be updated:
   - =Base2_relevant_file_names=
   - =Aws_relevant_file_names= 
   - =Base2_file_lab_id_regexp_list=
   - =Aws_file_lab_id_regexp_list=
   - =Lab_id_exp_info_list=
   Then recompile the program using 'erlc *.erl'.  

   Note that if the lab already existed and the logs have already been
   processed without including lab-information in erlang program then
   rerun it using information discussed at [[Rerunning entire analytics
   from scratch]]

** Removing a lab
   If a lab is removed and its statistics wont change we can still
   leave it in analytics program.  Since there would be no new log
   lines and only new log lines are processed there is negligible
   overhead of leaving the lab.

   However if removing the analytics of a lab is important then remove
   the lab and rerun it using steps discussed at [[Rerunning entire
   analytics from scratch]]

** Rerunning entire analytics from scratch
   To rerun entire analytics from scratch:
   - Modify .erl program appropriately
   - Recompile using 'erlc *.erl'
   - Stop cronjob from running once every hour
   - Delete all base2-data, base2-process, aws-data, aws-process
     folders
   - Rerun analytics manually.  It may take 2-3 hours to complete 
   - Continue cronjob to run every hour.
   
